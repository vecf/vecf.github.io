{"/ComputationStructures/worksheets/L04.html":"{}","/ComputationStructures/exercises/adder/lab.html":"{\"6\":{\"id\":\"6\",\"value\":\"(5/3.3)**2\",\"check\":\"right\"},\"8\":{\"id\":\"8\",\"value\":\"{\\\"tests\\\":{\\\"/adder/fa\\\":\\\"passed 9ef0701fdb227ed1dd77a02edd35605f d41d8cd98f00b204e9800998ecf8427e 15432098.765432099\\\",\\\"/adder/adder3\\\":\\\"passed bc1600f975bb2b1e631aeb71d90afd79 d41d8cd98f00b204e9800998ecf8427e 411353.35252982314\\\",\\\"/adder/and2\\\":\\\"passed 794a7f038b443fdcd6f0f8957c17af4d d41d8cd98f00b204e9800998ecf8427e 104166666.66666664\\\",\\\"/adder/nand2\\\":\\\"passed 5dc949de58db8277e8e23f8a4f898dba d41d8cd98f00b204e9800998ecf8427e 125000000\\\",\\\"/adder/nand3\\\":\\\"passed c57363b8f392e7795eeb182eec6d3551 d41d8cd98f00b204e9800998ecf8427e 35714285.71428572\\\",\\\"/adder/or2\\\":\\\"passed fdf83024bf898459fe3ee7eca1370583 d41d8cd98f00b204e9800998ecf8427e 104166666.66666664\\\",\\\"/adder/nor2\\\":\\\"passed 1d5cd3b348c9911c71d8fe10ac276bf4 d41d8cd98f00b204e9800998ecf8427e 125000000\\\",\\\"/adder/buffer\\\":\\\"passed 3e4581a68c7df6c2d8201b47c47a7748 d41d8cd98f00b204e9800998ecf8427e 294117647.05882347\\\",\\\"/adder/and3\\\":\\\"passed cd92573e442553b360ba65c572f530ce d41d8cd98f00b204e9800998ecf8427e 32051282.051282052\\\",\\\"/adder/and4\\\":\\\"passed 9d18088981dd1c4ddf9d6cb6f31a53b2 d41d8cd98f00b204e9800998ecf8427e 11574074.074074073\\\",\\\"/adder/inverter\\\":\\\"passed da38a9add6989c06cef1d60cffd958ff d41d8cd98f00b204e9800998ecf8427e 384615384.6153845\\\",\\\"/adder/mux2\\\":\\\"passed 3b7547f4579f950880ccf7bc95c64176 d41d8cd98f00b204e9800998ecf8427e 30487804.878048778\\\",\\\"/adder/mux4\\\":\\\"passed 44a68c613336bbeca82d48279aa24eb4 d41d8cd98f00b204e9800998ecf8427e 1183712.1212121202\\\",\\\"/adder/nand4\\\":\\\"passed 06aa9c3397e079f95055ee88b5742457 d41d8cd98f00b204e9800998ecf8427e 12499999.999999996\\\",\\\"/adder/nor3\\\":\\\"passed 517aefbc3c744c9e84b9d87f7b9a640a d41d8cd98f00b204e9800998ecf8427e 35714285.71428572\\\",\\\"/adder/or3\\\":\\\"passed 1f3245149f5e660622bc931bf8e2d9fa d41d8cd98f00b204e9800998ecf8427e 32051282.051282052\\\",\\\"/adder/or4\\\":\\\"passed 1dda410493c9ead40207193d9f696db6 d41d8cd98f00b204e9800998ecf8427e 11574074.074074073\\\",\\\"/adder/xor2\\\":\\\"passed de48cd543bfd55f694274e23c3764cd0 d41d8cd98f00b204e9800998ecf8427e 71428571.42857142\\\"},\\\"required-tests\\\":[\\\"bc1600f975bb2b1e631aeb71d90afd79\\\"],\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/adder/nand2\\\":{\\\"schematic\\\":[[\\\"port\\\",[-24,16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-24,48,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[0,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/analog/nfet\\\",[0,0,0]],[\\\"/analog/nfet\\\",[0,32,0]],[\\\"ground\\\",[0,64,0]],[\\\"/analog/pfet\\\",[-72,-32,0]],[\\\"/analog/pfet\\\",[0,-32,0]],[\\\"wire\\\",[0,-32,0,-72,0]],[\\\"vdd\\\",[0,-32,0]],[\\\"wire\\\",[-72,0,0,72,0]],[\\\"port\\\",[-96,-16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-24,-16,0],{\\\"signal\\\":\\\"B\\\"}]]},\\\"/adder/nand3\\\":{\\\"schematic\\\":[[\\\"port\\\",[-32,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-32,24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[64,8,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-32,56,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"/adder/and2\\\",[-32,-8,0]],[\\\"/adder/nand2\\\",[16,0,0]],[\\\"wire\\\",[-32,24,0,0,-16]],[\\\"wire\\\",[-32,56,0,48,0]],[\\\"wire\\\",[16,56,0,0,-40]]]},\\\"/adder/nand4\\\":{\\\"schematic\\\":[[\\\"port\\\",[-56,32,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-56,16,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[40,32,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-56,48,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-56,64,0],{\\\"signal\\\":\\\"D\\\"}],[\\\"/adder/nand2\\\",[-8,24,0]],[\\\"/adder/and2\\\",[-56,16,0]],[\\\"/adder/and2\\\",[-56,48,0]],[\\\"wire\\\",[-8,40,0,0,16]]]},\\\"/adder/nor2\\\":{\\\"schematic\\\":[[\\\"port\\\",[-16,-16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[56,-16,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[80,-32,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/analog/nfet\\\",[8,-32,0],{\\\"W\\\":\\\"4\\\"}],[\\\"/analog/nfet\\\",[80,-32,0],{\\\"W\\\":\\\"4\\\"}],[\\\"wire\\\",[8,-32,0,72,0]],[\\\"wire\\\",[8,0,0,72,0]],[\\\"ground\\\",[80,0,0]],[\\\"/analog/pfet\\\",[80,-64,0],{\\\"W\\\":\\\"16\\\"}],[\\\"/analog/pfet\\\",[80,-96,0],{\\\"W\\\":\\\"16\\\"}],[\\\"vdd\\\",[80,-96,0]],[\\\"port\\\",[56,-80,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[56,-48,0],{\\\"signal\\\":\\\"B\\\"}]]},\\\"/adder/nor3\\\":{\\\"schematic\\\":[[\\\"port\\\",[-32,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-32,-40,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[40,-40,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-32,-72,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"/adder/nor2\\\",[-8,-48,0]],[\\\"wire\\\",[-32,-40,0,0,-16]],[\\\"wire\\\",[-8,-48,0,24,-16]],[\\\"wire\\\",[-32,-8,0,24,-24]],[\\\"/adder/or2\\\",[-32,-72,0]]]},\\\"/adder/nor4\\\":{\\\"schematic\\\":[[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[16,-40,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-48,-72,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-48,-88,0],{\\\"signal\\\":\\\"D\\\"}],[\\\"/adder/or2\\\",[-48,-88,0]],[\\\"/adder/or2\\\",[-48,-24,0]],[\\\"/adder/nor2\\\",[-32,-48,0]],[\\\"wire\\\",[-32,-32,0,32,16]],[\\\"wire\\\",[-32,-48,0,32,-32]]]},\\\"/adder/xor2\\\":{\\\"schematic\\\":[[\\\"port\\\",[-184,24,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-184,40,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[56,48,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/adder/nor2\\\",[-184,24,0]],[\\\"/analog/pfet\\\",[-24,16,0],{\\\"W\\\":\\\"16\\\"}],[\\\"/analog/pfet\\\",[48,-16,0],{\\\"W\\\":\\\"16\\\"}],[\\\"vdd\\\",[48,-16,0]],[\\\"wire\\\",[-24,-16,0,72,0]],[\\\"port\\\",[24,0,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"wire\\\",[-24,16,0,72,0]],[\\\"/analog/nfet\\\",[-24,48,0],{\\\"W\\\":\\\"4\\\"}],[\\\"/analog/nfet\\\",[-24,80,0],{\\\"W\\\":\\\"4\\\"}],[\\\"/analog/nfet\\\",[56,48,0],{\\\"W\\\":\\\"4\\\"}],[\\\"ground\\\",[-24,112,0]],[\\\"wire\\\",[-24,112,0,72,0]],[\\\"wire\\\",[48,80,0,0,32]],[\\\"port\\\",[-48,0,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,64,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,96,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-136,32,2],{\\\"signal\\\":\\\"NAB\\\"}],[\\\"port\\\",[-48,32,0],{\\\"signal\\\":\\\"NAB\\\"}],[\\\"port\\\",[32,64,0],{\\\"signal\\\":\\\"NAB\\\"}],[\\\"wire\\\",[48,80,0,8,0]],[\\\"wire\\\",[-24,48,0,80,0]],[\\\"/analog/pfet\\\",[-24,-16,0],{\\\"W\\\":\\\"16\\\"}]]},\\\"/adder/fa\\\":{\\\"schematic\\\":[[\\\"port\\\",[-112,-40,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-8,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-112,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-24,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/adder/xor2\\\",[-72,-40,0]],[\\\"/adder/xor2\\\",[-24,-32,0]],[\\\"wire\\\",[-40,-16,0,0,8]],[\\\"/adder/nand2\\\",[-72,-120,0]],[\\\"/adder/nand2\\\",[-72,-88,0]],[\\\"/adder/nand2\\\",[-72,-152,0]],[\\\"wire\\\",[-24,-144,0,0,16]],[\\\"wire\\\",[-88,-40,0,0,-80]],[\\\"wire\\\",[-88,-120,0,16,0]],[\\\"wire\\\",[-72,-120,0,0,-16]],[\\\"wire\\\",[-112,-40,0,24,0]],[\\\"wire\\\",[-72,-104,0,-24,0]],[\\\"wire\\\",[-96,-104,0,0,80]],[\\\"wire\\\",[-112,-24,0,16,0]],[\\\"wire\\\",[-72,-88,0,0,-16]],[\\\"wire\\\",[-72,-72,0,-32,0]],[\\\"wire\\\",[-104,-72,0,0,64]],[\\\"wire\\\",[-40,-8,0,-64,0]],[\\\"wire\\\",[-112,-8,0,8,0]],[\\\"wire\\\",[-104,-72,0,0,-80]],[\\\"wire\\\",[-72,-152,0,-32,0]],[\\\"/adder/nand3\\\",[-24,-128,0]],[\\\"wire\\\",[-24,-80,0,0,-16]],[\\\"wire\\\",[-40,-16,0,16,0]],[\\\"wire\\\",[-96,-24,0,24,0]],[\\\"wire\\\",[-88,-40,0,16,0]]]},\\\"/user/fa_copy\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"port\\\",[-112,-40,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-8,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-112,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-24,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/adder/xor2\\\",[-72,-40,0]],[\\\"/adder/xor2\\\",[-24,-32,0]],[\\\"wire\\\",[-40,-16,0,0,8]],[\\\"/adder/nand2\\\",[-72,-120,0]],[\\\"/adder/nand2\\\",[-72,-88,0]],[\\\"/adder/nand2\\\",[-72,-152,0]],[\\\"wire\\\",[-24,-144,0,0,16]],[\\\"wire\\\",[-88,-40,0,0,-80]],[\\\"wire\\\",[-88,-120,0,16,0]],[\\\"wire\\\",[-72,-120,0,0,-16]],[\\\"wire\\\",[-112,-40,0,24,0]],[\\\"wire\\\",[-72,-104,0,-24,0]],[\\\"wire\\\",[-96,-104,0,0,80]],[\\\"wire\\\",[-112,-24,0,16,0]],[\\\"wire\\\",[-72,-88,0,0,-16]],[\\\"wire\\\",[-72,-72,0,-32,0]],[\\\"wire\\\",[-104,-72,0,0,64]],[\\\"wire\\\",[-40,-8,0,-64,0]],[\\\"wire\\\",[-112,-8,0,8,0]],[\\\"wire\\\",[-104,-72,0,0,-80]],[\\\"wire\\\",[-72,-152,0,-32,0]],[\\\"/adder/nand3\\\",[-24,-128,0]],[\\\"wire\\\",[-24,-80,0,0,-16]],[\\\"wire\\\",[-40,-16,0,16,0]],[\\\"wire\\\",[-96,-24,0,24,0]],[\\\"wire\\\",[-88,-40,0,16,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-24,-8,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[-24,8,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[0,32,3],{\\\"name\\\":\\\"Cin\\\"}],[\\\"terminal\\\",[24,0,4],{\\\"name\\\":\\\"S\\\"}],[\\\"terminal\\\",[0,-32,7],{\\\"name\\\":\\\"Cout\\\"}],[\\\"line\\\",[16,-24,0,-32,0]],[\\\"line\\\",[-16,24,0,32,0]],[\\\"text\\\",[-15,-8,0],{\\\"text\\\":\\\"A\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-15,8,0],{\\\"text\\\":\\\"B\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[15,0,0],{\\\"text\\\":\\\"S\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[0,-23,0],{\\\"text\\\":\\\"Cout\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"top-center\\\"}],[\\\"text\\\",[0,23,0],{\\\"text\\\":\\\"Cin\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[0,0,0],{\\\"text\\\":\\\"FA\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"line\\\",[-16,-24,0,0,48]],[\\\"line\\\",[16,-24,0,0,48]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B Cin\\\\n.group outputs Cout S\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 LL\\\\n001 LH\\\\n010 LH\\\\n011 HL\\\\n100 LH\\\\n101 HL\\\\n110 HL\\\\n111 HH\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Cin\\\\n.plot Cout\\\\n.plot S\\\\n\\\"]]}},\\\"last_saved\\\":1643646164588}\",\"check\":\"right\"},\"5A\":{\"id\":\"5A\",\"value\":\"0\",\"check\":\"right\"},\"5B\":{\"id\":\"5B\",\"value\":\"0\",\"check\":\"right\"},\"5C\":{\"id\":\"5C\",\"value\":\"1\",\"check\":\"right\"},\"5D\":{\"id\":\"5D\",\"value\":\"0\",\"check\":\"right\"},\"7A\":{\"id\":\"7A\",\"value\":\"4\",\"check\":\"right\"},\"7B\":{\"id\":\"7B\",\"value\":\"6\",\"check\":\"right\"},\"7C\":{\"id\":\"7C\",\"value\":\"10\",\"check\":\"right\"},\"7D\":{\"id\":\"7D\",\"value\":\"2\",\"check\":\"right\"},\"7E\":{\"id\":\"7E\",\"value\":\"6\",\"check\":\"right\"}}","/ComputationStructures/videos/info/lecture.html":"{\"1a\":{\"id\":\"1a\",\"value\":\"3\",\"check\":\"right\"},\"1b\":{\"id\":\"1b\",\"value\":\"1\",\"check\":\"right\"},\"2a\":{\"id\":\"2a\",\"value\":\"log2(8/7)\",\"check\":\"right\"},\"2b\":{\"id\":\"2b\",\"value\":\"log2(8)\",\"check\":\"right\"},\"3a\":{\"id\":\"3a\",\"value\":\"log2(6)\",\"check\":\"right\"},\"3b\":{\"id\":\"3b\",\"value\":\"1/8*log2(8)+7/8*log2(8/7)\",\"check\":\"right\"},\"4a\":{\"id\":\"4a\",\"value\":\"CAAB\",\"check\":\"right\"},\"5a\":{\"id\":\"5a\",\"value\":\"3\",\"check\":\"right\"},\"5a-1\":{\"id\":\"5a-1\",\"value\":\"0\",\"check\":\"right\"},\"5b\":{\"id\":\"5b\",\"value\":\"0b101010110\",\"check\":\"right\"},\"6a\":{\"id\":\"6a\",\"value\":\"2**4-1\",\"check\":\"right\"},\"6b\":{\"id\":\"6b\",\"value\":\"-2**4\",\"check\":\"right\"},\"7a\":{\"id\":\"7a\",\"value\":\"21/6\",\"check\":\"right\"},\"8a\":{\"id\":\"8a\",\"value\":\"16/6\",\"check\":\"right\"},\"8b-1\":{\"id\":\"8b-1\",\"value\":\"2\",\"check\":\"right\"},\"8b-2\":{\"id\":\"8b-2\",\"value\":\"3\",\"check\":\"right\"},\"9a\":{\"id\":\"9a\",\"value\":\"2*(1/8*log2(8)+7/8*log2(8/7))\",\"check\":\"right\"},\"9b\":{\"id\":\"9b\",\"value\":\"2\",\"check\":\"right\"},\"9c\":{\"id\":\"9c\",\"value\":\"87/64\",\"check\":\"right\"},\"9d\":{\"id\":\"9d\",\"value\":\"2/1.359\",\"check\":\"right\"},\"10a\":{\"id\":\"10a\",\"value\":\"0b0011\",\"check\":\"right\"},\"10b\":{\"id\":\"10b\",\"value\":\"0b0101\",\"check\":\"right\"},\"10c\":{\"id\":\"10c\",\"value\":\"0b0110\",\"check\":\"right\"},\"10d\":{\"id\":\"10d\",\"value\":\"0b1001\",\"check\":\"right\"},\"10e\":{\"id\":\"10e\",\"value\":\"0b1010\",\"check\":\"right\"},\"10f\":{\"id\":\"10f\",\"value\":\"0b1100\",\"check\":\"right\"},\"11a-1\":{\"id\":\"11a-1\",\"value\":\"6\",\"check\":\"right\"},\"11a-2\":{\"id\":\"11a-2\",\"value\":\"0\",\"check\":\"right\"},\"11a-3\":{\"id\":\"11a-3\",\"value\":\"2\",\"check\":\"right\"},\"12a-1\":{\"id\":\"12a-1\",\"value\":\"1\",\"check\":\"right\"},\"12a-2\":{\"id\":\"12a-2\",\"value\":\"3\",\"check\":\"right\"},\"12a-3\":{\"id\":\"12a-3\",\"value\":\"1\",\"check\":\"right\"},\"13a-1\":{\"id\":\"13a-1\",\"value\":\"3\",\"check\":\"right\"},\"13a-2\":{\"id\":\"13a-2\",\"value\":\"4\",\"check\":\"right\"},\"13a-3\":{\"id\":\"13a-3\",\"value\":\"3\",\"check\":\"right\"}}","/ComputationStructures/exercises/dp/lab.html":"{\"beta\":{\"id\":\"beta\",\"value\":\"{\\\"tests\\\":{\\\"/user/test_v2\\\":\\\"passed ac8fd965e4b0996702c29a6b4543e53d 39a9da660735cc2ba0da375ccbc25128 19.647171936874788\\\",\\\"/user/test_v4\\\":\\\"passed 1acd0c3a0326a6a5356399ce7b4cb230 39a9da660735cc2ba0da375ccbc25128 21.108482401435825\\\",\\\"/user/test_v5\\\":\\\"passed 1acd0c3a0326a6a5356399ce7b4cb230 39a9da660735cc2ba0da375ccbc25128 21.107186078591404\\\",\\\"/user/test_v6\\\":\\\"passed 09e315da8f38cd51bfea27cae47cd3c4 39a9da660735cc2ba0da375ccbc25128 28.597398612640863\\\",\\\"/user/pc_v3\\\":\\\"passed c831dff860e820a0179567f0964f0f72 d41d8cd98f00b204e9800998ecf8427e 3600.5933777886594\\\",\\\"/user/add32_v2\\\":\\\"passed cab25952bb20e0627baf6d43b0af9f7f d41d8cd98f00b204e9800998ecf8427e 59737.156511350055\\\",\\\"/user/arith_v2\\\":\\\"passed 4155928fdb4d7f81d0bd0e143204a6b3 d41d8cd98f00b204e9800998ecf8427e 2288.015375463324\\\",\\\"/user/cla1_inc\\\":\\\"passed 498ee00c0c25736c193e389f3922f9ec d41d8cd98f00b204e9800998ecf8427e 9259259.25925926\\\",\\\"/user/cla2_inc\\\":\\\"passed 8d529eb573641ccd06d86cd5521d52f7 d41d8cd98f00b204e9800998ecf8427e 12500000.000000002\\\",\\\"/user/cla8_inc\\\":\\\"passed 60fd534360cb251a5cad10fdf26e9ded d41d8cd98f00b204e9800998ecf8427e 837520.9380234506\\\",\\\"/user/cla16_inc\\\":\\\"passed 765a0232b8b541392621f82f28973e3b d41d8cd98f00b204e9800998ecf8427e 405515.00405515\\\",\\\"/user/cla4_inc\\\":\\\"passed 8e82ba7090b29cd085dc0e99b4de07ac d41d8cd98f00b204e9800998ecf8427e 5376344.086021505\\\",\\\"/user/cla2\\\":\\\"Error detected: invalid test specification<li>Missing Vol threshold specification<li>Missing Vil threshold specification<li>Missing Vih threshold specification<li>Missing Voh threshold specification<li>Missing .cycle specification<li>No tests specified!\\\",\\\"/user/cla4_incLSB\\\":\\\"passed 8bf8699915d1b546f7aca2f398f0d100 d41d8cd98f00b204e9800998ecf8427e 2150537.6344086025\\\",\\\"/user/cla8_incLSB\\\":\\\"passed 6c06904a5206b9943c3d16e19ba3e0ac d41d8cd98f00b204e9800998ecf8427e 214041.09589041094\\\",\\\"/user/cla16_incLSB\\\":\\\"passed 0819b138495c2d8b787b8ec4498ab5e6 d41d8cd98f00b204e9800998ecf8427e 94831.67377904218\\\",\\\"/user/incr_v2\\\":\\\"passed 93626e8b7f1145d27a7ea6418bebd62d d41d8cd98f00b204e9800998ecf8427e 81274.3823146944\\\",\\\"/user/shiftl32\\\":\\\"passed f47e66c2e43bf583d499194e40d08c82 d41d8cd98f00b204e9800998ecf8427e 38191.26183929117\\\",\\\"/user/ctl_v2\\\":\\\"passed 3e5897e2dab8128bbf190bf5301637b7 d41d8cd98f00b204e9800998ecf8427e 854.759299781175\\\",\\\"/user/test_v7\\\":\\\"passed f31f8882bbafee89b0597715e3d151cd 39a9da660735cc2ba0da375ccbc25128 34.66070497274077\\\",\\\"/user/test_v8\\\":\\\"Error detected: <li>main[0x0]: Expected 0x73ff0008, got undefined<li>main[0x1]: Expected 0x6ffe0000, got undefined<li>main[0x2]: Expected 0x73ffffff, got undefined<li>main[0x3]: Expected 0x0, got undefined<li>main[0x4]: Expected 0x0, got undefined<br>...\\\",\\\"/user/test_v52sp\\\":\\\"Error detected: <li>main[0x0]: Expected 0x73ff0008, got undefined<li>main[0x1]: Expected 0x6ffe0000, got undefined<li>main[0x2]: Expected 0x73ffffff, got undefined<li>main[0x3]: Expected 0x0, got undefined<li>main[0x4]: Expected 0x0, got undefined<br>...\\\",\\\"/user/test_v8nopf\\\":\\\"Error detected: <li>main[0x14b]: Expected 0x80000060, got 0x0<li>main[0x14c]: Expected 0x80000068, got 0x0<li>main[0x14d]: Expected 0x80000070, got 0x0<li>main[0x14e]: Expected 0x80000078, got 0x0<li>main[0x14f]: Expected 0x80000080, got 0x0<br>...\\\",\\\"/user/test_v8mod\\\":\\\"Error detected running simulation:<p>Node gnd is driven by multiple gates.  See devices:<br><li>gnd<li>beta_v7_1.dreg_2[1]<li>beta_v7_1.dreg_2[0]\\\",\\\"/user/beta_v7_test\\\":\\\"Error detected: <li>main[0x0]: Expected 0x73ff0008, got undefined<li>main[0x1]: Expected 0x6ffe0000, got undefined<li>main[0x2]: Expected 0x73ffffff, got undefined<li>main[0x3]: Expected 0x0, got undefined<li>main[0x4]: Expected 0x0, got undefined<br>...\\\",\\\"/user/beta_v7_test_reference\\\":\\\"Error detected: <li>main[0x14b]: Expected 0x80000060, got 0x0<li>main[0x14c]: Expected 0x80000068, got 0x0<li>main[0x14d]: Expected 0x80000070, got 0x0<li>main[0x14e]: Expected 0x80000078, got 0x0<li>main[0x14f]: Expected 0x80000080, got 0x0<br>...\\\"},\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/alu/arith\\\":{\\\"schematic\\\":[[\\\"port\\\",[-32,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-88,-32,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-48,0],{\\\"signal\\\":\\\"AFN\\\"}],[\\\"port\\\",[88,-72,4],{\\\"signal\\\":\\\"S[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[80,-224,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,8,4],{\\\"signal\\\":\\\"N\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,-32,4],{\\\"signal\\\":\\\"Z\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[80,8,0,-8,0],{\\\"signal\\\":\\\"S[31]\\\"}],[\\\"jumper\\\",[80,8,0]],[\\\"/user/nor32\\\",[40,-32,0],{\\\"name\\\":\\\"nor32\\\"}],[\\\"/user/add32\\\",[0,-88,0]],[\\\"/gates/xor2\\\",[-80,-48,0]],[\\\"wire\\\",[88,-48,0,-80,0]],[\\\"wire\\\",[-32,-40,0,0,-32],{\\\"signal\\\":\\\"xb[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-32,-104,0,-56,0]],[\\\"wire\\\",[-88,-104,0,0,56]],[\\\"wire\\\",[-88,-48,0,8,0]],[\\\"wire\\\",[-80,-32,0,-8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[88,-72,0,0,24]],[\\\"wire\\\",[8,-48,0,0,16]],[\\\"/gates/and3\\\",[-16,-248,0]],[\\\"/gates/inverter\\\",[-48,-216,0]],[\\\"wire\\\",[-48,-216,0,-8,0],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"/gates/or2\\\",[32,-232,0]],[\\\"/gates/and3\\\",[-16,-168,0]],[\\\"wire\\\",[-48,-216,0,0,48]],[\\\"wire\\\",[-48,-168,0,32,0]],[\\\"/gates/inverter\\\",[-48,-152,0]],[\\\"/gates/inverter\\\",[-48,-136,0]],[\\\"wire\\\",[-48,-152,0,-32,0],{\\\"signal\\\":\\\"xb[31]\\\"}],[\\\"wire\\\",[-48,-136,0,-48,0],{\\\"signal\\\":\\\"a[31]\\\"}],[\\\"wire\\\",[-96,-136,0,0,-112]],[\\\"wire\\\",[-16,-248,0,-80,0]],[\\\"wire\\\",[-80,-152,0,0,-80]],[\\\"wire\\\",[-16,-232,0,-64,0]],[\\\"wire\\\",[32,-216,0,0,64]]]},\\\"/alu/bool\\\":{\\\"schematic\\\":[[\\\"port\\\",[0,-72,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-88,-56,0],{\\\"signal\\\":\\\"BFN[3:0]\\\"}],[\\\"port\\\",[-88,-72,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"/gates/mux4\\\",[-16,-96,0]],[\\\"wire\\\",[-8,-32,0,-16,0],{\\\"signal\\\":\\\"B[31:0], A[31:0]\\\"}],[\\\"wire\\\",[-16,-48,0,-8,0],{\\\"signal\\\":\\\"BFN[0]\\\"}],[\\\"wire\\\",[-16,-64,0,-8,0],{\\\"signal\\\":\\\"BFN[1]\\\"}],[\\\"wire\\\",[-16,-80,0,-8,0],{\\\"signal\\\":\\\"BFN[2]\\\"}],[\\\"wire\\\",[-16,-96,0,-8,0],{\\\"signal\\\":\\\"BFN[3]\\\"}]]},\\\"/alu/FA\\\":{\\\"schematic\\\":[[\\\"port\\\",[-112,-48,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-32,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-16,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-136,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-32,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/xor2\\\",[-72,-48,0]],[\\\"wire\\\",[-24,-16,0,0,-8]],[\\\"/gates/nand3\\\",[-24,-152,0]],[\\\"/gates/nand2\\\",[-72,-184,0]],[\\\"/gates/nand2\\\",[-72,-104,0]],[\\\"/gates/nand2\\\",[-72,-144,0]],[\\\"wire\\\",[-24,-176,0,0,24]],[\\\"wire\\\",[-24,-120,0,0,24]],[\\\"wire\\\",[-72,-144,0,-8,0]],[\\\"wire\\\",[-80,-144,0,0,96]],[\\\"wire\\\",[-112,-48,0,32,0]],[\\\"wire\\\",[-72,-48,0,-8,0]],[\\\"wire\\\",[-72,-128,0,-16,0]],[\\\"wire\\\",[-88,-128,0,0,96]],[\\\"wire\\\",[-112,-32,0,24,0]],[\\\"wire\\\",[-72,-32,0,-16,0]],[\\\"wire\\\",[-72,-128,0,0,24]],[\\\"wire\\\",[-72,-168,0,0,24]],[\\\"wire\\\",[-72,-88,0,-24,0]],[\\\"wire\\\",[-72,-184,0,-24,0]],[\\\"wire\\\",[-96,-184,0,0,96]],[\\\"wire\\\",[-96,-88,0,0,72]],[\\\"wire\\\",[-112,-16,0,16,0]],[\\\"wire\\\",[-24,-16,0,-72,0]],[\\\"/gates/xor2\\\",[-24,-40,0]]]},\\\"/alu/cmp\\\":{\\\"schematic\\\":[[\\\"port\\\",[-104,88,0],{\\\"signal\\\":\\\"V\\\"}],[\\\"port\\\",[-104,72,0],{\\\"signal\\\":\\\"N\\\"}],[\\\"port\\\",[16,-16,4],{\\\"signal\\\":\\\"Y[31:1]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[16,24,2],{\\\"signal\\\":\\\"Y[0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[8,-16,0]],[\\\"wire\\\",[8,-16,0,-8,0],{\\\"signal\\\":\\\"0'31\\\"}],[\\\"port\\\",[-104,8,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-72,-16,0],{\\\"signal\\\":\\\"CFN[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,24,6]],[\\\"/gates/xor2\\\",[-104,72,0]],[\\\"/gates/or2\\\",[-96,16,0]],[\\\"wire\\\",[-40,-8,0,0,-8],{\\\"signal\\\":\\\"cfn[1]\\\"}],[\\\"/gates/mux2\\\",[0,16,0]],[\\\"wire\\\",[8,48,6,0,-8],{\\\"signal\\\":\\\"cfn[0]\\\"}],[\\\"wire\\\",[-32,16,6,32,0]],[\\\"wire\\\",[-56,80,0,40,0]],[\\\"wire\\\",[0,32,0,-16,0]],[\\\"wire\\\",[-96,16,0,0,-8]],[\\\"wire\\\",[-48,8,0,-48,0]],[\\\"wire\\\",[-96,8,0,-8,0]],[\\\"wire\\\",[-96,32,0,0,16]],[\\\"wire\\\",[-96,48,0,40,0]],[\\\"wire\\\",[-56,80,0,0,-32]],[\\\"wire\\\",[-16,32,0,0,48]],[\\\"text\\\",[-100,-49,0],{\\\"text\\\":\\\"signals arrive in order: \\\\nn,z,v\\\"}]]},\\\"/alu/shift\\\":{\\\"schematic\\\":[[\\\"port\\\",[-120,-104,6],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-104,-48,0],{\\\"signal\\\":\\\"B[4:0]\\\"}],[\\\"port\\\",[8,-120,0],{\\\"signal\\\":\\\"SFN[1:0]\\\"}],[\\\"port\\\",[72,-48,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-104,-64,0,-16,0],{\\\"signal\\\":\\\"sfn[1]\\\"}],[\\\"/gates/mux2\\\",[-120,-88,6]],[\\\"wire\\\",[-112,-120,6,0,16],{\\\"signal\\\":\\\"sfn[0]\\\"}],[\\\"wire\\\",[-120,-88,0,-8,0],{\\\"signal\\\":\\\"A[0:31]\\\"}],[\\\"wire\\\",[-104,-80,0,0,-16],{\\\"width\\\":\\\"32\\\"}],[\\\"/gates/mux2\\\",[56,-56,6]],[\\\"wire\\\",[64,-88,6,0,16],{\\\"signal\\\":\\\"sfn[0]\\\"}],[\\\"wire\\\",[56,-56,0,-8,0],{\\\"signal\\\":\\\"so[0:31]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[72,-48,0,0,-16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[0,-72,0,56,0],{\\\"width\\\":\\\"32\\\",\\\"signal\\\":\\\"so[31:0]\\\"}],[\\\"/user/shiftl32\\\",[-64,-56,0]]]},\\\"/beta/beta\\\":{\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-232,-448,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-360,-392,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-104,-312,4],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/ctl\\\",[-368,-216,0]],[\\\"/beta/pc\\\",[-488,-416,0]],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/alu/alu\\\",[-168,-200,1]],[\\\"/gates/mux2\\\",[-208,-272,7]],[\\\"/gates/mux2\\\",[-144,-272,7]],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-144,-272,0,0,-16],{\\\"signal\\\":\\\"id[15]#16,id[15:0]\\\"}],[\\\"wire\\\",[-112,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-152,-232,0,16,0]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"id[15:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1]],[\\\"/gates/mux2\\\",[-160,-136,1]],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"jumper\\\",[-368,-392,0]],[\\\"wire\\\",[-368,-392,0,-32,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"wire\\\",[-104,-272,0,0,-40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-128,-320,0,24,0]],[\\\"wire\\\",[-104,-320,0,0,8]],[\\\"wire\\\",[-128,-272,0,24,0]],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]]]},\\\"/beta/ctl\\\":{\\\"schematic\\\":[[\\\"port\\\",[168,8,4],{\\\"signal\\\":\\\"ra2sel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-64,4],{\\\"signal\\\":\\\"asel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-48,4],{\\\"signal\\\":\\\"bsel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-80,4],{\\\"signal\\\":\\\"alufn[5:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,40,4],{\\\"signal\\\":\\\"wdsel[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,24,4],{\\\"signal\\\":\\\"wasel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,56,4],{\\\"signal\\\":\\\"werf\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,-8,4],{\\\"signal\\\":\\\"pcsel[2:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-32,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-80,0,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-112,-104,0],{\\\"signal\\\":\\\"op[5:0]\\\"}],[\\\"port\\\",[-88,24,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-56,136,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-288,0,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"memory\\\",[-104,-104,0],{\\\"naddr\\\":\\\"6\\\",\\\"ndata\\\":\\\"18\\\",\\\"contents\\\":\\\"// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n0b??????_??_?0_011_?_1001  // 0b000000\\\\n0b??????_??_?0_011_?_1001  // 0b000001\\\\n0b??????_??_?0_011_?_1001  // 0b000010\\\\n0b??????_??_?0_011_?_1001  // 0b000011\\\\n0b??????_??_?0_011_?_1001  // 0b000100\\\\n0b??????_??_?0_011_?_1001  // 0b000101\\\\n0b??????_??_?0_011_?_1001  // 0b000110\\\\n0b??????_??_?0_011_?_1001  // 0b000111\\\\n\\\\n0b??????_??_?0_011_?_1001  // 0b001000\\\\n0b??????_??_?0_011_?_1001  // 0b001001\\\\n0b??????_??_?0_011_?_1001  // 0b001010\\\\n0b??????_??_?0_011_?_1001  // 0b001011\\\\n0b??????_??_?0_011_?_1001  // 0b001100\\\\n0b??????_??_?0_011_?_1001  // 0b001101\\\\n0b??????_??_?0_011_?_1001  // 0b001110\\\\n0b??????_??_?0_011_?_1001  // 0b001111\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n0b??????_??_?0_011_?_1001  // 0b010000\\\\n0b??????_??_?0_011_?_1001  // 0b010001\\\\n0b??????_??_?0_011_?_1001  // 0b010010\\\\n0b??????_??_?0_011_?_1001  // 0b010011\\\\n0b??????_??_?0_011_?_1001  // 0b010100\\\\n0b??????_??_?0_011_?_1001  // 0b010101\\\\n0b??????_??_?0_011_?_1001  // 0b010110\\\\n0b??????_??_?0_011_?_1001  // 0b010111\\\\n\\\\n/* OPC type\\\\n0bxxxxxx_01_?0_000_?_0011 \\\\n*/\\\\n0b010000_01_10_000_?_0101  // 0b011000 LD\\\\n0b010000_01_01_000_1_???0  // 0b011001 ST\\\\n0b??????_??_?0_011_?_1001  // 0b011010\\\\n0b??????_??_?0_010_?_0001  // 0b011011 JMP\\\\n0b??????_??_?0_001_?_0001  // 0b011100 BEQ (usesZ)\\\\n0b??????_??_?0_001_?_0001  // 0b011101 BNE (usesZ)\\\\n0b??????_??_?0_011_?_1001  // 0b011110\\\\n0b101010_1?_10_000_?_0101  // 0b011111 LDR\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n/* OP type\\\\n0bxxxxxx_00_?0_000_0_0011 \\\\n*/\\\\n0b010000_00_?0_000_0_0011  // 0b100000 ADD\\\\n0b010001_00_?0_000_0_0011  // 0b100001 SUB\\\\n0b??????_??_?0_011_?_1001  // 0b100010 [normally MUL, but ILLOP for our ALU]\\\\n0b??????_??_?0_011_?_1001  // 0b100011 [normally DIV, but ILOOP for our ALU]\\\\n0b000011_00_?0_000_0_0011  // 0b100100 CMPEQ\\\\n0b000101_00_?0_000_0_0011  // 0b100101 CMPLT\\\\n0b000111_00_?0_000_0_0011  // 0b100110 CMPLE\\\\n0b??????_??_?0_011_?_1001  // 0b100111\\\\n\\\\n0b101000_00_?0_000_0_0011  // 0b101000 AND\\\\n0b101110_00_?0_000_0_0011  // 0b101001 OR\\\\n0b100110_00_?0_000_0_0011  // 0b101010 XOR\\\\n0b101001_00_?0_000_0_0011  // 0b101011 XNOR\\\\n0b110000_00_?0_000_0_0011  // 0b101100 SHL\\\\n0b110001_00_?0_000_0_0011  // 0b101101 SHR\\\\n0b110011_00_?0_000_0_0011  // 0b101110 SRA\\\\n0b??????_??_?0_011_?_1001  // 0b101111\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n/* OPC type\\\\n0bxxxxxx_01_?0_000_?_0011 \\\\n*/\\\\n0b010000_01_?0_000_?_0011  // 0b110000 ADDC\\\\n0b010001_01_?0_000_?_0011  // 0b110001 SUBC\\\\n0b??????_??_?0_011_?_1001  // 0b110010 [normally MULC, but ILLOP for our ALU]\\\\n0b??????_??_?0_011_?_1001  // 0b110011 [normally DIVC, but ILLOP for our ALU]\\\\n0b000011_01_?0_000_?_0011  // 0b110100 CMPEQC\\\\n0b000101_01_?0_000_?_0011  // 0b110101 CMPLTC\\\\n0b000111_01_?0_000_?_0011  // 0b110110 CMPLEC\\\\n0b??????_??_?0_011_?_1001  // 0b110111\\\\n\\\\n0b101000_01_?0_000_?_0011  // 0b111000 ANDC\\\\n0b101110_01_?0_000_?_0011  // 0b111001 ORC\\\\n0b100110_01_?0_000_?_0011  // 0b111010 XORC\\\\n0b101001_01_?0_000_?_0011  // 0b111011 XNORC\\\\n0b110000_01_?0_000_?_0011  // 0b111100 SHLC\\\\n0b110001_01_?0_000_?_0011  // 0b111101 SHRC\\\\n0b110011_01_?0_000_?_0011  // 0b111110 SRAC\\\\n0b??????_??_?0_011_?_1001  // 0b111111\\\\n\\\"}],[\\\"wire\\\",[160,-80,0,-8,0],{\\\"signal\\\":\\\"d[17:12]\\\"}],[\\\"wire\\\",[160,-64,0,-8,0],{\\\"signal\\\":\\\"d[11]\\\"}],[\\\"wire\\\",[56,56,0,-8,0],{\\\"signal\\\":\\\"d_irq[0]\\\"}],[\\\"wire\\\",[56,40,0,-8,0],{\\\"signal\\\":\\\"d_irq[2:1]\\\"}],[\\\"wire\\\",[56,24,0,-8,0],{\\\"signal\\\":\\\"d_irq[3]\\\"}],[\\\"wire\\\",[160,8,0,-8,0],{\\\"signal\\\":\\\"d[4]\\\"}],[\\\"wire\\\",[56,-8,0,-8,0],{\\\"signal\\\":\\\"d_irq[6:4]\\\"}],[\\\"wire\\\",[-96,8,0,-8,0],{\\\"signal\\\":\\\"d_irq[7]\\\"}],[\\\"wire\\\",[160,-32,0,-8,0],{\\\"signal\\\":\\\"d[9]\\\"}],[\\\"wire\\\",[160,-48,0,-8,0],{\\\"signal\\\":\\\"d[10]\\\"}],[\\\"wire\\\",[-104,-96,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-112,-104,0,8,0]],[\\\"wire\\\",[-104,-88,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[-256,144,0]],[\\\"wire\\\",[-256,160,0,-8,0],{\\\"signal\\\":\\\"0'3\\\"}],[\\\"wire\\\",[-256,144,0,-8,0],{\\\"signal\\\":\\\"1'3\\\"}],[\\\"/gates/and2\\\",[-264,-80,0]],[\\\"/gates/mux2\\\",[-232,144,6]],[\\\"/gates/nor2\\\",[-312,-88,0]],[\\\"wire\\\",[-312,-88,0,-8,0],{\\\"signal\\\":\\\"d[7]\\\"}],[\\\"wire\\\",[-312,-72,0,-8,0],{\\\"signal\\\":\\\"d[6]\\\"}],[\\\"wire\\\",[-240,152,0,8,0]],[\\\"wire\\\",[-232,144,0,0,8],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[-216,136,0,8,0],{\\\"signal\\\":\\\"bch[2:0]\\\"}],[\\\"wire\\\",[-232,128,0,-24,0],{\\\"signal\\\":\\\"d[7:5]\\\"}],[\\\"/gates/inverter\\\",[-288,0,0]],[\\\"wire\\\",[-264,-64,0,0,8],{\\\"signal\\\":\\\"d[5]\\\"}],[\\\"wire\\\",[-248,32,0,-8,0],{\\\"signal\\\":\\\"op[0]\\\"}],[\\\"wire\\\",[-216,-72,0,8,0],{\\\"signal\\\":\\\"branch\\\"}],[\\\"wire\\\",[-224,112,0,-32,0],{\\\"signal\\\":\\\"branch\\\"}],[\\\"/gates/mux2\\\",[-256,0,0]],[\\\"wire\\\",[-256,16,0,-32,0]],[\\\"wire\\\",[-288,16,0,0,-16]],[\\\"wire\\\",[-240,8,0,8,0],{\\\"signal\\\":\\\"bne_beq\\\"}],[\\\"wire\\\",[-248,176,0,-16,0],{\\\"signal\\\":\\\"bne_beq\\\"}],[\\\"/gates/mux2\\\",[-96,-8,0]],[\\\"wire\\\",[-96,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[-64,104,0]],[\\\"wire\\\",[-64,120,0,-8,0],{\\\"signal\\\":\\\"d[8],bch[2:0],d[3:0]\\\"}],[\\\"wire\\\",[-64,104,0,-8,0],{\\\"signal\\\":\\\"0b01001001'8\\\"}],[\\\"wire\\\",[-48,112,0,8,0],{\\\"signal\\\":\\\"d_irq[7:0]\\\"}],[\\\"jumper\\\",[160,-32,0]],[\\\"jumper\\\",[56,-8,0]],[\\\"jumper\\\",[160,-80,0]],[\\\"jumper\\\",[160,-64,0]],[\\\"jumper\\\",[160,-48,0]],[\\\"jumper\\\",[160,8,0]],[\\\"jumper\\\",[56,24,0]],[\\\"jumper\\\",[56,40,0]],[\\\"jumper\\\",[56,56,0]],[\\\"wire\\\",[-104,-80,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-32,-104,0,8,0],{\\\"signal\\\":\\\"d[17:0]\\\"}],[\\\"text\\\",[-287,-106,0],{\\\"text\\\":\\\"Detect branch\\\"}],[\\\"text\\\",[-297,-20,0],{\\\"text\\\":\\\"distinquish beq/bne\\\"}],[\\\"text\\\",[-302,69,0],{\\\"text\\\":\\\"if branch,\\\"}],[\\\"text\\\",[-289,81,0],{\\\"text\\\":\\\" z determines outcome, \\\"}],[\\\"text\\\",[-302,94,0],{\\\"text\\\":\\\"else, pass through.\\\"}],[\\\"text\\\",[-139,83,0],{\\\"text\\\":\\\"If IRQ, \\\\noverwrite ROM output\\\"}],[\\\"text\\\",[-127,-28,0],{\\\"text\\\":\\\"If reset, force MWR\\\"}],[\\\"text\\\",[87,-103,0],{\\\"text\\\":\\\"ROM output\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"text\\\",[36,-28,0],{\\\"text\\\":\\\"IRQ overridable\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}]]},\\\"/beta/pc\\\":{\\\"schematic\\\":[[\\\"port\\\",[8,-128,0],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[-40,-168,6],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[-216,16,0],{\\\"signal\\\":\\\"ID[15:0]\\\"}],[\\\"port\\\",[-408,-200,0],{\\\"signal\\\":\\\"JT[31:0]\\\"}],[\\\"port\\\",[-160,-208,0],{\\\"signal\\\":\\\"PCSEL[2:0]\\\"}],[\\\"port\\\",[48,-144,4],{\\\"signal\\\":\\\"PC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-112,4],{\\\"signal\\\":\\\"PC_INC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[32,-72,4],{\\\"signal\\\":\\\"PC_OFFSET[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/dreg\\\",[8,-144,0]],[\\\"wire\\\",[-96,-176,6,0,8],{\\\"signal\\\":\\\"pcsel[2]\\\"}],[\\\"/gates/mux2\\\",[-104,-144,6]],[\\\"/gates/mux4\\\",[-144,-184,0]],[\\\"wire\\\",[-128,-160,0,24,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-120,0,0,16],{\\\"signal\\\":\\\"pcsel[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,-136,6]],[\\\"wire\\\",[-48,-136,0,0,24],{\\\"signal\\\":\\\"0x80000000'32\\\"}],[\\\"/user/add32\\\",[-176,-256,0],{\\\"name\\\":\\\"incrementor\\\"}],[\\\"/user/add32\\\",[-168,-48,0]],[\\\"wire\\\",[-208,-240,0,-16,0],{\\\"signal\\\":\\\"4'32\\\"}],[\\\"wire\\\",[-208,-256,0,-16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-208,-272,0,0,-24],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-200,-48,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"text\\\",[-402,-32,0],{\\\"text\\\":\\\"sign extend and shift:\\\"}],[\\\"wire\\\",[-200,-64,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-144,-184,0,-16,0],{\\\"signal\\\":\\\"0x80000004'32\\\"}],[\\\"wire\\\",[-144,-152,0,-16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"wire\\\",[-104,-144,0,0,16],{\\\"signal\\\":\\\"0x80000008'32\\\"}],[\\\"wire\\\",[-48,-152,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[8,-144,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-200,-32,0,-16,0],{\\\"signal\\\":\\\"id[15]#14,id[15:0],0b00'2\\\"}],[\\\"jumper\\\",[-224,-112,0]],[\\\"wire\\\",[-88,-240,0,16,0],{\\\"signal\\\":\\\"inc[31:0]\\\"}],[\\\"wire\\\",[-80,-32,0,16,0],{\\\"signal\\\":\\\"boff[31:0]\\\"}],[\\\"jumper\\\",[24,-72,0]],[\\\"wire\\\",[24,-72,0,-16,0],{\\\"signal\\\":\\\"pc[31],boff[30:0]\\\"}],[\\\"wire\\\",[-224,-112,0,-8,0]],[\\\"wire\\\",[-232,-112,0,0,-24]],[\\\"wire\\\",[-144,-136,0,-88,0],{\\\"signal\\\":\\\"pc[31],inc[30:0]\\\"}],[\\\"/gates/and2\\\",[-440,-240,0]],[\\\"wire\\\",[-440,-240,0,-16,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-440,-224,0,-16,0],{\\\"signal\\\":\\\"jt[31]\\\"}],[\\\"wire\\\",[-392,-232,0,16,0],{\\\"signal\\\":\\\"supnext\\\"}],[\\\"wire\\\",[-144,-168,0,-16,0],{\\\"signal\\\":\\\"supnext,jt[30:2],0b00'2\\\"}],[\\\"text\\\",[-109,-198,0],{\\\"text\\\":\\\"map 0b1xx to IRQ\\\"}],[\\\"text\\\",[-52,-63,0],{\\\"text\\\":\\\"guard sbit\\\"}],[\\\"text\\\",[-377,-222,0],{\\\"text\\\":\\\"calc next sbit\\\"}],[\\\"text\\\",[-373,-168,0],{\\\"text\\\":\\\"guard sbit, word align address:\\\"}],[\\\"text\\\",[-357,-135,0],{\\\"text\\\":\\\"guard sbit (supervisor bit):\\\"}]]},\\\"/beta/regfile\\\":{\\\"schematic\\\":[[\\\"port\\\",[-152,-152,4],{\\\"signal\\\":\\\"rbdata[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-304,16,0],{\\\"signal\\\":\\\"rc[4:0]\\\"}],[\\\"port\\\",[-160,40,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"port\\\",[-128,48,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-200,-16,0],{\\\"signal\\\":\\\"rb[4:0]\\\"}],[\\\"port\\\",[-160,-56,0],{\\\"signal\\\":\\\"ra[4:0]\\\"}],[\\\"port\\\",[-56,24,4],{\\\"signal\\\":\\\"wdata[31:0]\\\"}],[\\\"port\\\",[-256,0,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"port\\\",[-192,0,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"memory\\\",[-128,-56,0],{\\\"nports\\\":\\\"3\\\",\\\"naddr\\\":\\\"5\\\",\\\"ndata\\\":\\\"32\\\",\\\"name\\\":\\\"refister_file\\\"}],[\\\"wire\\\",[-128,-48,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-128,-8,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-128,32,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,40,0,-32,0]],[\\\"wire\\\",[-128,-32,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,-56,0,-32,0]],[\\\"/gates/mux2\\\",[-264,32,6]],[\\\"/gates/mux2\\\",[-200,-32,0]],[\\\"wire\\\",[-264,32,6,-8,0],{\\\"signal\\\":\\\"0b11110'5\\\"}],[\\\"wire\\\",[-200,-32,0,-104,0]],[\\\"wire\\\",[-264,16,0,-40,0]],[\\\"wire\\\",[-128,-40,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-304,16,0,0,-48]],[\\\"/gates/mux2\\\",[-168,-160,0]],[\\\"wire\\\",[-256,-104,0,-8,0],{\\\"signal\\\":\\\"rbi[1]\\\"}],[\\\"wire\\\",[-256,-120,0,-8,0],{\\\"signal\\\":\\\"rbi[2]\\\"}],[\\\"wire\\\",[-256,-136,0,-8,0],{\\\"signal\\\":\\\"rbi[3]\\\"}],[\\\"wire\\\",[-256,-88,0,-8,0],{\\\"signal\\\":\\\"rbi[0]\\\"}],[\\\"wire\\\",[-168,-144,0,-8,0],{\\\"signal\\\":\\\"0'32\\\"}],[\\\"wire\\\",[-168,-160,0,-8,0],{\\\"signal\\\":\\\"rbo[31:0]\\\"}],[\\\"wire\\\",[-56,-56,0,16,0],{\\\"signal\\\":\\\"rao[31:0]\\\"}],[\\\"port\\\",[-152,-232,4],{\\\"signal\\\":\\\"radata[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/mux2\\\",[-168,-240,0]],[\\\"wire\\\",[-256,-184,0,-8,0],{\\\"signal\\\":\\\"ra[1]\\\"}],[\\\"wire\\\",[-256,-200,0,-8,0],{\\\"signal\\\":\\\"ra[2]\\\"}],[\\\"wire\\\",[-256,-216,0,-8,0],{\\\"signal\\\":\\\"ra[3]\\\"}],[\\\"wire\\\",[-256,-168,0,-8,0],{\\\"signal\\\":\\\"ra[0]\\\"}],[\\\"wire\\\",[-168,-224,0,-8,0],{\\\"signal\\\":\\\"0'32\\\"}],[\\\"wire\\\",[-168,-240,0,-8,0],{\\\"signal\\\":\\\"rao[31:0]\\\"}],[\\\"wire\\\",[-56,-16,0,16,0],{\\\"signal\\\":\\\"rbo[31:0]\\\"}],[\\\"wire\\\",[-128,-16,0,-56,0],{\\\"signal\\\":\\\"rbi[4:0]\\\",\\\"width\\\":\\\"5\\\"}],[\\\"wire\\\",[-184,-24,0,0,8]],[\\\"wire\\\",[-248,24,0,120,0],{\\\"width\\\":\\\"5\\\"}],[\\\"/gates/nand2\\\",[-208,-128,0]],[\\\"wire\\\",[-160,-128,0,0,8]],[\\\"/gates/and4\\\",[-256,-136,0]],[\\\"wire\\\",[-208,-128,0,-8,0],{\\\"signal\\\":\\\"rbi[4]\\\"}],[\\\"/gates/nand2\\\",[-208,-208,0]],[\\\"wire\\\",[-208,-208,0,-8,0],{\\\"signal\\\":\\\"ra[4]\\\"}],[\\\"wire\\\",[-160,-208,0,0,8]],[\\\"/gates/and4\\\",[-256,-216,0]],[\\\"text\\\",[-430,-158,0],{\\\"text\\\":\\\"read R31 gives 0:\\\",\\\"font\\\":\\\"8pt\\\"}],[\\\"text\\\",[-357,45,0],{\\\"text\\\":\\\"R30: exception pointer\\\"}]]},\\\"/project/test\\\":{\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 7n CLK=0 tran 8n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/nor32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/nor2\\\",[-24,144,0]],[\\\"/gates/nor4\\\",[-24,-16,0]],[\\\"wire\\\",[-24,0,0,-16,0],{\\\"signal\\\":\\\"in[23:16]\\\"}],[\\\"wire\\\",[-24,16,0,-16,0],{\\\"signal\\\":\\\"in[15:8]\\\"}],[\\\"wire\\\",[-24,32,0,-16,0],{\\\"signal\\\":\\\"in[7:0]\\\"}],[\\\"wire\\\",[24,8,0,16,0],{\\\"signal\\\":\\\"layer1[7:0]\\\"}],[\\\"wire\\\",[-24,-16,0,-16,0],{\\\"signal\\\":\\\"in[31:24]\\\"}],[\\\"/gates/nand4\\\",[-24,64,0]],[\\\"wire\\\",[-24,64,0,-16,0],{\\\"signal\\\":\\\"layer1[7:6]\\\"}],[\\\"wire\\\",[-24,80,0,-16,0],{\\\"signal\\\":\\\"layer1[5:4]\\\"}],[\\\"wire\\\",[-24,96,0,-16,0],{\\\"signal\\\":\\\"layer1[3:2]\\\"}],[\\\"wire\\\",[-24,112,0,-16,0],{\\\"signal\\\":\\\"layer1[1:0]\\\"}],[\\\"wire\\\",[24,88,0,16,0],{\\\"signal\\\":\\\"layer2[1:0]\\\"}],[\\\"wire\\\",[-24,160,0,-16,0],{\\\"signal\\\":\\\"layer2[0]\\\"}],[\\\"wire\\\",[-24,144,0,-16,0],{\\\"signal\\\":\\\"layer2[1]\\\"}],[\\\"port\\\",[24,152,4],{\\\"signal\\\":\\\"out\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-32,-48,0],{\\\"signal\\\":\\\"in[31:0]\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"in[31:0]\\\"}],[\\\"terminal\\\",[48,0,4],{\\\"name\\\":\\\"out\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"in[31:0]\\\"}],[\\\"text\\\",[35,0,4],{\\\"text\\\":\\\"out\\\"}],[\\\"line\\\",[-24,-8,0,64,0]],[\\\"line\\\",[40,-8,0,0,16]],[\\\"line\\\",[40,19,0,-64,0]],[\\\"line\\\",[-24,8,0,0,-16]],[\\\"property\\\",[-4,12,0],{\\\"format\\\":\\\"{name}\\\"}],[\\\"line\\\",[-24,8,0,0,11]],[\\\"line\\\",[40,19,0,0,-12]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs in[31:0]\\\\n.group outputs out\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n11111111000000001111111100000000 L \\\\n00000000000000000000000000000000 H \\\\n10000000000000000000000000000000 L\\\\n\\\\n10000000000000000000000000000000 L\\\\n01000000000000000000000000000000 L\\\\n00100000000000000000000000000000 L\\\\n00010000000000000000000000000000 L\\\\n00001000000000000000000000000000 L\\\\n00000100000000000000000000000000 L \\\\n00000010000000000000000000000000 L\\\\n00000001000000000000000000000000 L\\\\n00000000100000000000000000000000 L\\\\n00000000010000000000000000000000 L\\\\n00000000001000000000000000000000 L\\\\n00000000000100000000000000000000 L\\\\n00000000000010000000000000000000 L\\\\n00000000000001000000000000000000 L\\\\n00000000000000100000000000000000 L \\\\n00000000000000010000000000000000 L\\\\n00000000000000001000000000000000 L\\\\n00000000000000000100000000000000 L\\\\n00000000000000000010000000000000 L\\\\n00000000000000000001000000000000 L\\\\n00000000000000000000100000000000 L\\\\n00000000000000000000010000000000 L\\\\n00000000000000000000001000000000 L\\\\n00000000000000000000000100000000 L\\\\n00000000000000000000000010000000 L\\\\n00000000000000000000000001000000 L\\\\n00000000000000000000000000100000 L\\\\n00000000000000000000000000010000 L\\\\n00000000000000000000000000001000 L\\\\n00000000000000000000000000000100 L\\\\n00000000000000000000000000000010 L\\\\n00000000000000000000000000000001 L\\\\n\\\\n11111111111111111111111111111111 L\\\\n\\\\n.plot X(in[31:0])\\\\n.plot X(out)\\\\n\\\"]]},\\\"/user/add32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-32,-48,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/alu/FA\\\",[128,48,7]],[\\\"wire\\\",[136,24,0,0,-16],{\\\"signal\\\":\\\"B[0]\\\"}],[\\\"wire\\\",[120,24,0,0,-16],{\\\"signal\\\":\\\"A[0]\\\"}],[\\\"wire\\\",[96,48,0,-16,0],{\\\"signal\\\":\\\"c[1]\\\"}],[\\\"wire\\\",[160,48,0,16,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[128,72,0,0,16],{\\\"signal\\\":\\\"s[0]\\\"}],[\\\"/alu/FA\\\",[-40,96,7]],[\\\"wire\\\",[-48,72,0,0,-16],{\\\"signal\\\":\\\"A[30:1]\\\"}],[\\\"wire\\\",[-72,96,0,-16,0],{\\\"signal\\\":\\\"c[31:2]\\\"}],[\\\"wire\\\",[-8,96,0,16,0],{\\\"signal\\\":\\\"c[30:1]\\\"}],[\\\"wire\\\",[-40,120,0,0,16],{\\\"signal\\\":\\\"s[30:1]\\\"}],[\\\"wire\\\",[-32,72,0,0,-8],{\\\"signal\\\":\\\"B[30:1]\\\"}],[\\\"/alu/FA\\\",[-160,40,7]],[\\\"wire\\\",[-168,16,0,0,-16],{\\\"signal\\\":\\\"A[31]\\\"}],[\\\"wire\\\",[-192,40,0,-16,0],{\\\"signal\\\":\\\"cout\\\"}],[\\\"wire\\\",[-128,40,0,16,0],{\\\"signal\\\":\\\"c[31]\\\"}],[\\\"wire\\\",[-160,64,0,0,16],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"wire\\\",[-152,16,0,0,-8],{\\\"signal\\\":\\\"B[31]\\\"}],[\\\"port\\\",[-32,-32,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-32,-16,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[64,-48,0],{\\\"signal\\\":\\\"s[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,-32,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32\\\\n\\\"}]]},\\\"/user/shiftl32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/mux2\\\",[-120,-48,0],{\\\"name\\\":\\\"mxsh16\\\"}],[\\\"port\\\",[24,-56,0],{\\\"signal\\\":\\\"a[31:0]\\\"}],[\\\"port\\\",[24,-32,0],{\\\"signal\\\":\\\"b[4:0]\\\"}],[\\\"port\\\",[24,88,4],{\\\"signal\\\":\\\"sl[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-120,-48,0,-8,0],{\\\"signal\\\":\\\"a[15:0],ext#16\\\"}],[\\\"wire\\\",[-120,-32,0,-8,0],{\\\"signal\\\":\\\"a[31:0]\\\"}],[\\\"wire\\\",[-112,-16,0,-16,0],{\\\"signal\\\":\\\"b[4]\\\"}],[\\\"wire\\\",[-104,-40,0,16,0],{\\\"signal\\\":\\\"q[31:0]\\\"}],[\\\"/gates/mux2\\\",[8,80,0],{\\\"name\\\":\\\"mxsh1\\\"}],[\\\"wire\\\",[8,80,0,-8,0],{\\\"signal\\\":\\\"t[30:0],ext\\\"}],[\\\"wire\\\",[8,96,0,-8,0],{\\\"signal\\\":\\\"t[31:0]\\\"}],[\\\"wire\\\",[16,112,0,-16,0],{\\\"signal\\\":\\\"b[0]\\\"}],[\\\"/gates/mux2\\\",[-120,16,0],{\\\"name\\\":\\\"mxsh8\\\"}],[\\\"wire\\\",[-120,16,0,-8,0],{\\\"signal\\\":\\\"q[23:0],ext#8\\\"}],[\\\"wire\\\",[-120,32,0,-8,0],{\\\"signal\\\":\\\"q[31:0]\\\"}],[\\\"wire\\\",[-112,48,0,-16,0],{\\\"signal\\\":\\\"b[3]\\\"}],[\\\"wire\\\",[-104,24,0,16,0],{\\\"signal\\\":\\\"r[31:0]\\\"}],[\\\"/gates/mux2\\\",[8,16,0],{\\\"name\\\":\\\"mxsh4\\\"}],[\\\"wire\\\",[8,16,0,-8,0],{\\\"signal\\\":\\\"r[27:0],ext#4\\\"}],[\\\"wire\\\",[8,32,0,-8,0],{\\\"signal\\\":\\\"r[31:0]\\\"}],[\\\"wire\\\",[16,48,0,-16,0],{\\\"signal\\\":\\\"b[2]\\\"}],[\\\"wire\\\",[24,24,0,16,0],{\\\"signal\\\":\\\"s[31:0]\\\"}],[\\\"/gates/mux2\\\",[-120,80,0],{\\\"name\\\":\\\"mxsh2\\\"}],[\\\"wire\\\",[-120,80,0,-8,0],{\\\"signal\\\":\\\"s[29:0],ext#2\\\"}],[\\\"wire\\\",[-120,96,0,-8,0],{\\\"signal\\\":\\\"s[31:0]\\\"}],[\\\"wire\\\",[-112,112,0,-16,0],{\\\"signal\\\":\\\"b[1]\\\"}],[\\\"wire\\\",[-104,88,0,16,0],{\\\"signal\\\":\\\"t[31:0]\\\"}],[\\\"port\\\",[-104,-104,0],{\\\"signal\\\":\\\"arith\\\"}],[\\\"/gates/mux2\\\",[-112,-136,0]],[\\\"wire\\\",[-112,-120,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-112,-136,0,-16,0],{\\\"signal\\\":\\\"a[0]\\\"}],[\\\"/gates/buffer_h\\\",[-88,-128,0]],[\\\"wire\\\",[-56,-128,0,16,0],{\\\"signal\\\":\\\"ext\\\"}],[\\\"jumper\\\",[-96,-128,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs a[31:0] b[4:0] arith\\\\n.group outputs sl[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000000000000000000000000001 00001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL\\\\n00000000000000000000000000000001 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\\\n11111111111111111111111111111111 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\\\n\\\\n00000000000000000000000000000001 00001 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHH\\\\n00000000000000000000000000000001 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\\\n11111111111111111111111111111111 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\\\n\\\\n.plot X(a[31:0])\\\\n.plot X(b[4:0])\\\\n.plot X(sl[31:0])\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-40,-24,0],{\\\"name\\\":\\\"a[31:0]\\\"}],[\\\"terminal\\\",[-40,8,0],{\\\"name\\\":\\\"b[4:0]\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"sl[31:0]\\\"}],[\\\"text\\\",[5,-2,0],{\\\"text\\\":\\\"SL32\\\"}],[\\\"property\\\",[25,17,0],{\\\"format\\\":\\\"{name}\\\"}],[\\\"text\\\",[-30,-23,0],{\\\"text\\\":\\\"a[31:0]\\\"}],[\\\"text\\\",[-24,8,0],{\\\"text\\\":\\\"b[4:0]\\\"}],[\\\"text\\\",[53,-14,4],{\\\"text\\\":\\\"sl[31:0]\\\"}],[\\\"line\\\",[-32,-32,0,88,0]],[\\\"line\\\",[56,-32,0,0,56]],[\\\"line\\\",[56,24,0,-88,0]],[\\\"line\\\",[-32,24,0,0,-56]],[\\\"terminal\\\",[-40,-8,0],{\\\"name\\\":\\\"arith\\\"}],[\\\"text\\\",[-26,-8,0],{\\\"text\\\":\\\"arith\\\"}]]},\\\"/adder/xor2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}}},\\\"/adder/nand2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}}},\\\"/adder/nand3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}}},\\\"/adder/fa\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"port\\\",[-112,-40,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-8,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-112,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-24,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/adder/xor2\\\",[-72,-40,0]],[\\\"/adder/xor2\\\",[-24,-32,0]],[\\\"wire\\\",[-40,-16,0,0,8]],[\\\"/adder/nand2\\\",[-72,-120,0]],[\\\"/adder/nand2\\\",[-72,-88,0]],[\\\"/adder/nand2\\\",[-72,-152,0]],[\\\"wire\\\",[-24,-144,0,0,16]],[\\\"wire\\\",[-88,-40,0,0,-80]],[\\\"wire\\\",[-88,-120,0,16,0]],[\\\"wire\\\",[-72,-120,0,0,-16]],[\\\"wire\\\",[-112,-40,0,24,0]],[\\\"wire\\\",[-72,-104,0,-24,0]],[\\\"wire\\\",[-96,-104,0,0,80]],[\\\"wire\\\",[-112,-24,0,16,0]],[\\\"wire\\\",[-72,-88,0,0,-16]],[\\\"wire\\\",[-72,-72,0,-32,0]],[\\\"wire\\\",[-104,-72,0,0,64]],[\\\"wire\\\",[-40,-8,0,-64,0]],[\\\"wire\\\",[-112,-8,0,8,0]],[\\\"wire\\\",[-104,-72,0,0,-80]],[\\\"wire\\\",[-72,-152,0,-32,0]],[\\\"/adder/nand3\\\",[-24,-128,0]],[\\\"wire\\\",[-24,-80,0,0,-16]],[\\\"wire\\\",[-40,-16,0,16,0]],[\\\"wire\\\",[-96,-24,0,24,0]],[\\\"wire\\\",[-88,-40,0,16,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-24,-8,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[-24,8,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[0,32,3],{\\\"name\\\":\\\"Cin\\\"}],[\\\"terminal\\\",[24,0,4],{\\\"name\\\":\\\"S\\\"}],[\\\"terminal\\\",[0,-32,7],{\\\"name\\\":\\\"Cout\\\"}],[\\\"line\\\",[16,-24,0,-32,0]],[\\\"line\\\",[-16,24,0,32,0]],[\\\"text\\\",[-15,-8,0],{\\\"text\\\":\\\"A\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-15,8,0],{\\\"text\\\":\\\"B\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[15,0,0],{\\\"text\\\":\\\"S\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[0,-23,0],{\\\"text\\\":\\\"Cout\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"top-center\\\"}],[\\\"text\\\",[0,23,0],{\\\"text\\\":\\\"Cin\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[0,0,0],{\\\"text\\\":\\\"FA\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"line\\\",[-16,-24,0,0,48]],[\\\"line\\\",[16,-24,0,0,48]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B Cin\\\\n.group outputs Cout S\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 LL\\\\n001 LH\\\\n010 LH\\\\n011 HL\\\\n100 LH\\\\n101 HL\\\\n110 HL\\\\n111 HH\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Cin\\\\n.plot Cout\\\\n.plot S\\\\n\\\"]]},\\\"/adder/adder3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"readonly\\\":{\\\"label\\\":\\\"Read only\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"/adder/fa\\\",[32,-8,7]],[\\\"/adder/fa\\\",[-32,-8,7]],[\\\"/adder/fa\\\",[-96,-8,7]],[\\\"wire\\\",[40,-32,0,0,-8],{\\\"signal\\\":\\\"B[0]\\\"}],[\\\"wire\\\",[24,-32,0,0,-8],{\\\"signal\\\":\\\"A[0]\\\"}],[\\\"wire\\\",[-24,-32,0,0,-8],{\\\"signal\\\":\\\"B[1]\\\"}],[\\\"wire\\\",[-40,-32,0,0,-8],{\\\"signal\\\":\\\"A[1]\\\"}],[\\\"wire\\\",[-88,-32,0,0,-8],{\\\"signal\\\":\\\"B[2]\\\"}],[\\\"wire\\\",[-104,-32,0,0,-8],{\\\"signal\\\":\\\"A[2]\\\"}],[\\\"wire\\\",[-96,24,0,0,-8],{\\\"signal\\\":\\\"S[2]\\\"}],[\\\"wire\\\",[-32,24,0,0,-8],{\\\"signal\\\":\\\"S[1]\\\"}],[\\\"wire\\\",[32,24,0,0,-8],{\\\"signal\\\":\\\"S[0]\\\"}],[\\\"wire\\\",[-128,24,0,0,-32],{\\\"signal\\\":\\\"S[3]\\\"}],[\\\"ground\\\",[72,-8,0]],[\\\"wire\\\",[72,-8,0,-8,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-32,-24,0],{\\\"name\\\":\\\"A[2:0]\\\"}],[\\\"terminal\\\",[-32,-8,0],{\\\"name\\\":\\\"B[2:0]\\\"}],[\\\"terminal\\\",[8,-16,4],{\\\"name\\\":\\\"S[3:0]\\\"}],[\\\"text\\\",[-12,-16,0],{\\\"text\\\":\\\"+\\\",\\\"font\\\":\\\"12pt bold sans\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-32,0,0,32]],[\\\"line\\\",[-24,0,0,24,0]],[\\\"line\\\",[0,0,0,0,-32]],[\\\"line\\\",[0,-32,0,-24,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[2:0] B[2:0]\\\\n.group outputs S[3:0]\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n000 001 LLLH //  1: a=0, b=1, y=1\\\\n001 000 LLLH //  2: a=1, b=0, y=1\\\\n001 001 LLHL //  3: a=1, b=1, y=2\\\\n010 010 LHLL //  4: a=2, b=2, y=4\\\\n100 100 HLLL //  5: a=4, b=4, y=8\\\\n000 000 LLLL //  6: a=0, b=0, y=0\\\\n001 111 HLLL //  7: a=1, b=7, y=8\\\\n111 001 HLLL //  8: a=7, b=1, y=8\\\\n010 101 LHHH //  9: a=2, b=5, y=7\\\\n101 010 LHHH // 10: a=5, b=2, y=7\\\\n111 111 HHHL // 11: a=7, b=7, y=14\\\\n\\\\n.plot D(A[2:0])\\\\n.plot D(B[2:0])\\\\n.plot D(S[3:0])\\\\n\\\"]]},\\\"/adder/inverter\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"5p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2300\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"1200\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.007p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"10\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n0 H\\\\n1 L\\\\n\\\\n\\\\n.plot A\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"/analog/pfet\\\",[0,-32,0],{\\\"W\\\":\\\"16\\\"}],[\\\"/analog/nfet\\\",[0,0,0],{\\\"W\\\":\\\"4\\\"}],[\\\"vdd\\\",[0,-32,0]],[\\\"ground\\\",[0,32,0]],[\\\"port\\\",[-24,0,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"wire\\\",[-24,-16,0,0,16]],[\\\"wire\\\",[-24,16,0,0,-16]],[\\\"port\\\",[0,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"line\\\":\\\"no\\\",\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,-8,0,0,16]],[\\\"line\\\",[8,8,0,16,-8]],[\\\"line\\\",[24,0,0,-16,-8]],[\\\"property\\\",[16,4,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"circle\\\",[26,0,0,2]],[\\\"line\\\",[32,0,0,-4,0]]]},\\\"/adder/and2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"30p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"120p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2300\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.002p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"13\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n00 L\\\\n01 L\\\\n10 L\\\\n11 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,8,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/adder/nand2\\\",[-48,-8,0]],[\\\"/adder/inverter\\\",[0,0,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,8,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,-4,0,0,24]],[\\\"arc\\\",[20,-4,0,16,12,15,9]],[\\\"arc\\\",[20,20,6,16,12,15,9]],[\\\"line\\\",[8,-4,0,12,0]],[\\\"line\\\",[8,20,0,12,0]],[\\\"property\\\",[33,15,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"line\\\",[40,8,0,-4,0]]]},\\\"/adder/and3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"30p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"150p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2600\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.002p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"17\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 L\\\\n001 L\\\\n010 L\\\\n011 L\\\\n100 L\\\\n101 L\\\\n110 L\\\\n111 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,0,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-48,16,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/adder/nand3\\\",[-48,-16,0]],[\\\"/adder/inverter\\\",[0,0,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,16,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"arc\\\",[20,4,0,16,12,15,9]],[\\\"arc\\\",[20,28,6,16,12,15,9]],[\\\"line\\\",[8,4,0,12,0]],[\\\"line\\\",[8,28,0,12,0]],[\\\"property\\\",[33,23,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"line\\\",[8,-4,0,0,40]],[\\\"line\\\",[40,16,0,-4,0]]]},\\\"/adder/nand4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"10p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"70p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4400\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"3500\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.005p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"17\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C D\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n0000 H\\\\n0001 H\\\\n0010 H\\\\n0011 H\\\\n0100 H\\\\n0101 H\\\\n0110 H\\\\n0111 H\\\\n1000 H\\\\n1001 H\\\\n1010 H\\\\n1011 H\\\\n1100 H\\\\n1101 H\\\\n1110 H\\\\n1111 L\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot D\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-56,32,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-56,16,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[40,32,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-56,48,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-56,64,0],{\\\"signal\\\":\\\"D\\\"}],[\\\"/adder/nand2\\\",[-8,24,0]],[\\\"/adder/and2\\\",[-56,16,0]],[\\\"/adder/and2\\\",[-56,48,0]],[\\\"wire\\\",[-8,40,0,0,16]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,24,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"arc\\\",[20,12,0,16,12,15,9]],[\\\"arc\\\",[20,36,6,16,12,15,9]],[\\\"line\\\",[8,12,0,12,0]],[\\\"line\\\",[8,36,0,12,0]],[\\\"circle\\\",[38,24,0,2]],[\\\"property\\\",[33,31,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"terminal\\\",[0,48,0],{\\\"name\\\":\\\"D\\\"}],[\\\"line\\\",[8,-4,0,0,57]]]},\\\"/adder/and4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"30p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"160p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2800\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.002p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C D\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n0000 L\\\\n0001 L\\\\n0010 L\\\\n0011 L\\\\n0100 L\\\\n0101 L\\\\n0110 L\\\\n0111 L\\\\n1000 L\\\\n1001 L\\\\n1010 L\\\\n1011 L\\\\n1100 L\\\\n1101 L\\\\n1110 L\\\\n1111 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot D\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-24,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-48,8,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-48,24,0],{\\\"signal\\\":\\\"D\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/adder/nand4\\\",[-48,-24,0]],[\\\"/adder/inverter\\\",[0,0,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,24,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"arc\\\",[20,12,0,16,12,15,9]],[\\\"arc\\\",[20,36,6,16,12,15,9]],[\\\"line\\\",[8,12,0,12,0]],[\\\"line\\\",[8,36,0,12,0]],[\\\"property\\\",[33,31,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"terminal\\\",[0,48,0],{\\\"name\\\":\\\"D\\\"}],[\\\"line\\\",[8,-4,0,0,57]],[\\\"line\\\",[40,24,0,-4,0]]]},\\\"/adder/buffer\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"80p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2200\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"1200\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.003p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"13\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n0 L\\\\n1 H\\\\n\\\\n\\\\n.plot A\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"/adder/inverter\\\",[-32,0,0]],[\\\"/adder/inverter\\\",[0,0,0]],[\\\"port\\\",[-32,0,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,-8,0,0,16]],[\\\"line\\\",[8,8,0,16,-8]],[\\\"line\\\",[24,0,0,-16,-8]],[\\\"property\\\",[16,4,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}]]},\\\"/adder/mux2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"120p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2500\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.005p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"27\\\",\\\"label\\\":\\\"Size (Î¼Â²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs D0 D1 S\\\\n.group outputs Y\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 L\\\\n001 L\\\\n010 L\\\\n011 H\\\\n100 H\\\\n101 L\\\\n110 H\\\\n111 H\\\\n\\\\n.plot D0 D1 S\\\\n.plot Y\\\\n\\\"]],\\\"schematic\\\":[[\\\"wire\\\",[-8,-24,0,0,8]],[\\\"wire\\\",[-8,0,0,0,8]],[\\\"port\\\",[-56,-32,0],{\\\"signal\\\":\\\"D0\\\"}],[\\\"port\\\",[-56,0,0],{\\\"signal\\\":\\\"D1\\\"}],[\\\"port\\\",[-56,40,0],{\\\"signal\\\":\\\"S\\\"}],[\\\"port\\\",[40,-8,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Y\\\"}],[\\\"wire\\\",[-56,16,0,-8,0],{\\\"signal\\\":\\\"S\\\"}],[\\\"wire\\\",[-56,-16,0,-8,0],{\\\"signal\\\":\\\"SN\\\"}],[\\\"wire\\\",[-16,40,0,-8,0],{\\\"signal\\\":\\\"SN\\\"}],[\\\"/adder/nand2\\\",[-56,-32,0]],[\\\"/adder/nand2\\\",[-56,0,0]],[\\\"/adder/nand2\\\",[-8,-16,0]],[\\\"/adder/inverter\\\",[-56,40,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"D1\\\",\\\"line\\\":\\\"no\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"D0\\\",\\\"line\\\":\\\"no\\\"}],[\\\"terminal\\\",[8,32,5],{\\\"name\\\":\\\"S\\\"}],[\\\"line\\\",[4,-8,0,0,32]],[\\\"line\\\",[12,0,0,0,16]],[\\\"terminal\\\",[16,8,4],{\\\"name\\\":\\\"Y\\\",\\\"line\\\":\\\"no\\\"}],[\\\"text\\\",[5,0,0],{\\\"text\\\":\\\"1\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[5,16,0],{\\\"text\\\":\\\"0\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[4,-8,0,8,8]],[\\\"line\\\",[0,16,0,4,0]],[\\\"line\\\",[0,0,0,4,0]],[\\\"line\\\",[12,8,0,4,0]],[\\\"line\\\",[4,24,0,8,-8]],[\\\"line\\\",[8,24,0,0,-4]],[\\\"property\\\",[12,20,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}]]},\\\"/adder/mux4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"40p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"190p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2500\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.006p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"66\\\",\\\"label\\\":\\\"Size (Î¼Â²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs D0 D1 D2 D3 S[1] S[0]\\\\n.group outputs Y\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000000 L\\\\n000001 L\\\\n000010 L\\\\n000011 L\\\\n000100 L\\\\n000101 L\\\\n000110 L\\\\n000111 H\\\\n\\\\n001000 L\\\\n001001 L\\\\n001010 H\\\\n001011 L\\\\n001100 L\\\\n001101 L\\\\n001110 H\\\\n001111 H\\\\n\\\\n010000 L\\\\n010001 H\\\\n010010 L\\\\n010011 L\\\\n010100 L\\\\n010101 H\\\\n010110 L\\\\n010111 H\\\\n\\\\n011000 L\\\\n011001 H\\\\n011010 H\\\\n011011 L\\\\n011100 L\\\\n011101 H\\\\n011110 H\\\\n011111 H\\\\n\\\\n100000 H\\\\n100001 L\\\\n100010 L\\\\n100011 L\\\\n100100 H\\\\n100101 L\\\\n100110 L\\\\n100111 H\\\\n\\\\n101000 H\\\\n101001 L\\\\n101010 H\\\\n101011 L\\\\n101100 H\\\\n101101 L\\\\n101110 H\\\\n101111 H\\\\n\\\\n110000 H\\\\n110001 H\\\\n110010 L\\\\n110011 L\\\\n110100 H\\\\n110101 H\\\\n110110 L\\\\n110111 H\\\\n\\\\n111000 H\\\\n111001 H\\\\n111010 H\\\\n111011 L\\\\n111100 H\\\\n111101 H\\\\n111110 H\\\\n111111 H\\\\n\\\\n.plot D0 D1 D2 D3 S[1] S[0]\\\\n.plot Y\\\\n\\\"]],\\\"schematic\\\":[[\\\"wire\\\",[0,8,0,0,16]],[\\\"wire\\\",[0,24,0,16,0]],[\\\"wire\\\",[0,56,0,0,-16]],[\\\"wire\\\",[0,40,0,16,0]],[\\\"wire\\\",[16,8,0,0,-48]],[\\\"wire\\\",[16,-40,0,-16,0]],[\\\"wire\\\",[16,56,0,0,48]],[\\\"wire\\\",[16,104,0,-16,0]],[\\\"port\\\",[-48,-56,0],{\\\"signal\\\":\\\"D0\\\"}],[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"D1\\\"}],[\\\"port\\\",[-48,40,0],{\\\"signal\\\":\\\"D2\\\"}],[\\\"port\\\",[-48,88,0],{\\\"signal\\\":\\\"D3\\\"}],[\\\"port\\\",[-48,136,0],{\\\"signal\\\":\\\"S[1:0]\\\"}],[\\\"port\\\",[64,32,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Y\\\"}],[\\\"wire\\\",[-48,-40,0,-8,0],{\\\"signal\\\":\\\"SN[0]\\\"}],[\\\"wire\\\",[-16,136,0,8,0],{\\\"signal\\\":\\\"SN[1:0]\\\"}],[\\\"wire\\\",[-48,-24,0,-8,0],{\\\"signal\\\":\\\"SN[1]\\\"}],[\\\"wire\\\",[-48,120,0,-8,0],{\\\"signal\\\":\\\"S[1]\\\"}],[\\\"wire\\\",[-48,104,0,-8,0],{\\\"signal\\\":\\\"S[0]\\\"}],[\\\"wire\\\",[-48,56,0,-8,0],{\\\"signal\\\":\\\"SN[0]\\\"}],[\\\"wire\\\",[-48,72,0,-8,0],{\\\"signal\\\":\\\"S[1]\\\"}],[\\\"wire\\\",[-48,24,0,-8,0],{\\\"signal\\\":\\\"SN[1]\\\"}],[\\\"wire\\\",[-48,8,0,-8,0],{\\\"signal\\\":\\\"S[0]\\\"}],[\\\"/adder/nand4\\\",[16,8,0]],[\\\"/adder/nand3\\\",[-48,-56,0]],[\\\"/adder/nand3\\\",[-48,-8,0]],[\\\"/adder/nand3\\\",[-48,40,0]],[\\\"/adder/nand3\\\",[-48,88,0]],[\\\"/adder/inverter\\\",[-48,136,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"D3\\\",\\\"line\\\":\\\"no\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"D2\\\",\\\"line\\\":\\\"no\\\"}],[\\\"terminal\\\",[8,64,5],{\\\"name\\\":\\\"S[1:0]\\\"}],[\\\"terminal\\\",[16,24,4],{\\\"name\\\":\\\"Y\\\",\\\"line\\\":\\\"no\\\"}],[\\\"text\\\",[5,0,0],{\\\"text\\\":\\\"3\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[5,16,0],{\\\"text\\\":\\\"2\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"D1\\\",\\\"line\\\":\\\"no\\\"}],[\\\"terminal\\\",[0,48,0],{\\\"name\\\":\\\"D0\\\",\\\"line\\\":\\\"no\\\"}],[\\\"line\\\",[4,-8,0,0,64]],[\\\"text\\\",[5,32,0],{\\\"text\\\":\\\"1\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[5,48,0],{\\\"text\\\":\\\"0\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[0,0,0,4,0]],[\\\"line\\\",[0,16,0,4,0]],[\\\"line\\\",[0,32,0,4,0]],[\\\"line\\\",[0,48,0,4,0]],[\\\"line\\\",[16,24,0,-4,0]],[\\\"line\\\",[4,-8,0,8,8]],[\\\"line\\\",[4,56,0,8,-8]],[\\\"line\\\",[12,0,0,0,48]],[\\\"line\\\",[8,56,0,0,-4]],[\\\"property\\\",[12,52,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}]]},\\\"/adder/nor2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"10p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"50p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"6700\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2400\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.004p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"10\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n00 H\\\\n01 L\\\\n10 L\\\\n11 L\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-16,-16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[56,-16,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[80,-32,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/analog/nfet\\\",[8,-32,0],{\\\"W\\\":\\\"4\\\"}],[\\\"/analog/nfet\\\",[80,-32,0],{\\\"W\\\":\\\"4\\\"}],[\\\"wire\\\",[8,-32,0,72,0]],[\\\"wire\\\",[8,0,0,72,0]],[\\\"ground\\\",[80,0,0]],[\\\"/analog/pfet\\\",[80,-64,0],{\\\"W\\\":\\\"16\\\"}],[\\\"/analog/pfet\\\",[80,-96,0],{\\\"W\\\":\\\"16\\\"}],[\\\"vdd\\\",[80,-96,0]],[\\\"port\\\",[56,-80,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[56,-48,0],{\\\"signal\\\":\\\"B\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,8,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,20,0,8,0]],[\\\"line\\\",[8,-4,0,8,0]],[\\\"arc\\\",[16,-4,0,20,12,18,9]],[\\\"arc\\\",[16,20,6,20,12,18,9]],[\\\"circle\\\",[38,8,0,2.23606797749979]],[\\\"arc\\\",[8,-4,0,0,24,3,12]],[\\\"line\\\",[8,0,0,2,0]],[\\\"line\\\",[8,16,0,2,0]],[\\\"property\\\",[32,14,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}]]},\\\"/adder/or2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"30p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"150p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2500\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.002p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"13\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n00 L\\\\n01 H\\\\n10 H\\\\n11 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,8,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/adder/nor2\\\",[-48,-8,0]],[\\\"/adder/inverter\\\",[0,0,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,8,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,20,0,8,0]],[\\\"line\\\",[8,-4,0,8,0]],[\\\"arc\\\",[16,-4,0,20,12,18,9]],[\\\"arc\\\",[16,20,6,20,12,18,9]],[\\\"arc\\\",[8,-4,0,0,24,3,12]],[\\\"line\\\",[8,0,0,2,0]],[\\\"line\\\",[8,16,0,2,0]],[\\\"property\\\",[32,14,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"line\\\",[40,8,0,-4,0]]]},\\\"/adder/nor3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"80p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"8500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2400\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\".005p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"13\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 H\\\\n001 L\\\\n010 L\\\\n011 L\\\\n100 L\\\\n101 L\\\\n110 L\\\\n111 L\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-32,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-32,-40,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[40,-40,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-32,-72,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"/adder/nor2\\\",[-8,-48,0]],[\\\"wire\\\",[-32,-40,0,0,-16]],[\\\"wire\\\",[-8,-48,0,24,-16]],[\\\"wire\\\",[-32,-8,0,24,-24]],[\\\"/adder/or2\\\",[-32,-72,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,16,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,28,0,8,0]],[\\\"line\\\",[8,4,0,8,0]],[\\\"arc\\\",[16,4,0,20,12,18,9]],[\\\"arc\\\",[16,28,6,20,12,18,9]],[\\\"circle\\\",[38,16,0,2.23606797749979]],[\\\"arc\\\",[8,4,0,0,24,3,12]],[\\\"property\\\",[32,22,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"arc\\\",[8,-4,0,0,8,2,4]],[\\\"line\\\",[8,0,0,2,0]],[\\\"line\\\",[8,16,0,3,0]],[\\\"line\\\",[8,32,0,2,0]],[\\\"arc\\\",[8,28,0,0,8,2,5]]]},\\\"/adder/nor4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"120p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"9500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2400\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.005p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C D\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n0000 H\\\\n0001 L\\\\n0010 L\\\\n0011 L\\\\n0100 L\\\\n0101 L\\\\n0110 L\\\\n0111 L\\\\n1000 L\\\\n1001 L\\\\n1010 L\\\\n1011 L\\\\n1100 L\\\\n1101 L\\\\n1110 L\\\\n1111 L\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot D\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[16,-40,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-48,-72,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-48,-88,0],{\\\"signal\\\":\\\"D\\\"}],[\\\"/adder/or2\\\",[-48,-88,0]],[\\\"/adder/or2\\\",[-48,-24,0]],[\\\"/adder/nor2\\\",[-32,-48,0]],[\\\"wire\\\",[-32,-32,0,32,16]],[\\\"wire\\\",[-32,-48,0,32,-32]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,24,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,36,0,8,0]],[\\\"line\\\",[8,12,0,8,0]],[\\\"arc\\\",[16,12,0,20,12,18,9]],[\\\"arc\\\",[16,36,6,20,12,18,9]],[\\\"circle\\\",[38,24,0,2.23606797749979]],[\\\"arc\\\",[8,12,0,0,24,3,12]],[\\\"property\\\",[32,30,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"terminal\\\",[0,48,0],{\\\"name\\\":\\\"D\\\"}],[\\\"arc\\\",[8,36,0,0,17,2,12]],[\\\"arc\\\",[8,12,6,0,17,2,12]],[\\\"line\\\",[8,0,0,2,0]],[\\\"line\\\",[8,16,0,2,0]],[\\\"line\\\",[8,32,0,2,0]],[\\\"line\\\",[8,48,0,2,0]]]},\\\"/adder/or3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"40p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"210p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2500\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"0.003p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"17\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 L\\\\n001 H\\\\n010 H\\\\n011 H\\\\n100 H\\\\n101 H\\\\n110 H\\\\n111 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,0,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-48,16,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"/adder/nor3\\\",[-48,-16,0]],[\\\"/adder/inverter\\\",[0,0,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,16,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,28,0,8,0]],[\\\"line\\\",[8,4,0,8,0]],[\\\"arc\\\",[16,4,0,20,12,18,9]],[\\\"arc\\\",[16,28,6,20,12,18,9]],[\\\"arc\\\",[8,4,0,0,24,3,12]],[\\\"property\\\",[32,22,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"arc\\\",[8,-4,0,0,8,2,4]],[\\\"line\\\",[8,0,0,2,0]],[\\\"line\\\",[8,16,0,3,0]],[\\\"line\\\",[8,32,0,2,0]],[\\\"arc\\\",[8,28,0,0,8,2,5]],[\\\"line\\\",[40,16,0,-4,0]]]},\\\"/adder/or4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"tcd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"60p\\\",\\\"label\\\":\\\"Contamination delay (s)\\\"},\\\"tpd\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"290p\\\",\\\"label\\\":\\\"Propagation delay (s)\\\"},\\\"tr\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"4500\\\",\\\"label\\\":\\\"Output rise time (s/F)\\\"},\\\"tf\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"2600\\\",\\\"label\\\":\\\"Output fall time (s/F)\\\"},\\\"cin\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\".003p\\\",\\\"label\\\":\\\"Input capacitance (F)\\\"},\\\"size\\\":{\\\"edit\\\":\\\"no\\\",\\\"choices\\\":[\\\"\\\"],\\\"type\\\":\\\"number\\\",\\\"value\\\":\\\"20\\\",\\\"label\\\":\\\"Size (μ²)\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C D\\\\n.group outputs Z\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n0000 L\\\\n0001 H\\\\n0010 H\\\\n0011 H\\\\n0100 H\\\\n0101 H\\\\n0110 H\\\\n0111 H\\\\n1000 H\\\\n1001 H\\\\n1010 H\\\\n1011 H\\\\n1100 H\\\\n1101 H\\\\n1110 H\\\\n1111 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot D\\\\n.plot Z\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-48,-24,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-48,-8,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-48,8,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[32,0,4],{\\\"direction\\\":\\\"out\\\",\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-48,24,0],{\\\"signal\\\":\\\"D\\\"}],[\\\"/adder/nor4\\\",[-48,-24,0]],[\\\"/adder/inverter\\\",[0,0,0]]],\\\"icon\\\":[[\\\"terminal\\\",[0,0,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,16,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[48,24,4],{\\\"name\\\":\\\"Z\\\"}],[\\\"line\\\",[8,36,0,8,0]],[\\\"line\\\",[8,12,0,8,0]],[\\\"arc\\\",[16,12,0,20,12,18,9]],[\\\"arc\\\",[16,36,6,20,12,18,9]],[\\\"arc\\\",[8,12,0,0,24,3,12]],[\\\"property\\\",[32,30,0],{\\\"align\\\":\\\"top-left\\\",\\\"format\\\":\\\"{name}\\\"}],[\\\"terminal\\\",[0,32,0],{\\\"name\\\":\\\"C\\\"}],[\\\"terminal\\\",[0,48,0],{\\\"name\\\":\\\"D\\\"}],[\\\"arc\\\",[8,36,0,0,17,2,12]],[\\\"arc\\\",[8,12,6,0,17,2,12]],[\\\"line\\\",[8,0,0,2,0]],[\\\"line\\\",[8,16,0,2,0]],[\\\"line\\\",[8,32,0,2,0]],[\\\"line\\\",[8,48,0,2,0]],[\\\"line\\\",[40,24,0,-4,0]]]},\\\"/caches/equal24\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"icon-readonly\\\":\\\"true\\\",\\\"schematic-readonly\\\":\\\"true\\\"},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-80,-128,0],{\\\"signal\\\":\\\"A[23:0]\\\"}],[\\\"port\\\",[-80,-112,0],{\\\"signal\\\":\\\"B[23:0]\\\"}],[\\\"wire\\\",[-32,-120,0,8,0],{\\\"signal\\\":\\\"eq[23:0]\\\"}],[\\\"wire\\\",[-80,-48,0,-8,0],{\\\"signal\\\":\\\"eq[5:0]\\\"}],[\\\"wire\\\",[-80,-64,0,-8,0],{\\\"signal\\\":\\\"eq[11:6]\\\"}],[\\\"wire\\\",[-80,-80,0,-8,0],{\\\"signal\\\":\\\"eq[17:12]\\\"}],[\\\"wire\\\",[-80,-96,0,-8,0],{\\\"signal\\\":\\\"eq[23:18]\\\"}],[\\\"wire\\\",[-32,-72,0,8,0],{\\\"signal\\\":\\\"mx[5:0]\\\"}],[\\\"/gates/nand4\\\",[-80,-96,0]],[\\\"/gates/xnor2\\\",[-80,-128,0]],[\\\"wire\\\",[-80,0,0,-8,0],{\\\"signal\\\":\\\"mx[1:0]\\\"}],[\\\"wire\\\",[-80,-16,0,-8,0],{\\\"signal\\\":\\\"mx[3:2]\\\"}],[\\\"wire\\\",[-80,-32,0,-8,0],{\\\"signal\\\":\\\"mx[5:4]\\\"}],[\\\"/gates/nor3\\\",[-80,-32,0]],[\\\"wire\\\",[-32,-16,0,8,0],{\\\"signal\\\":\\\"my[1:0]\\\"}],[\\\"/gates/nand2\\\",[-80,16,0]],[\\\"wire\\\",[-80,16,0,-8,0],{\\\"signal\\\":\\\"my[1]\\\"}],[\\\"wire\\\",[-80,32,0,-8,0],{\\\"signal\\\":\\\"my[0]\\\"}],[\\\"/gates/inverter\\\",[-32,24,0]],[\\\"port\\\",[0,24,4],{\\\"signal\\\":\\\"equal\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-40,-16,0],{\\\"name\\\":\\\"A[23:0]\\\"}],[\\\"terminal\\\",[-40,0,0],{\\\"name\\\":\\\"B[23:0]\\\"}],[\\\"terminal\\\",[24,-8,4],{\\\"name\\\":\\\"equal\\\"}],[\\\"text\\\",[-30,-16,0],{\\\"text\\\":\\\"A\\\"}],[\\\"text\\\",[-30,0,0],{\\\"text\\\":\\\"B\\\"}],[\\\"text\\\",[14,-8,0],{\\\"text\\\":\\\"equal\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[-8,-26,0],{\\\"text\\\":\\\"equal24\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"8pt bold sans-serif\\\"}],[\\\"line\\\",[-32,-32,0,0,40]],[\\\"line\\\",[-32,8,0,48,0]],[\\\"line\\\",[16,8,0,0,-40]],[\\\"line\\\",[16,-32,0,-48,0]]]},\\\"/caches/icache\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"icon-readonly\\\":\\\"true\\\"},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"schematic\\\":[[\\\"port\\\",[-216,-520,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"port\\\",[-216,-504,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-216,-488,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-248,-376,4],{\\\"signal\\\":\\\"xdata[63:0]\\\"}],[\\\"port\\\",[-216,-552,0],{\\\"signal\\\":\\\"irdy\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-255,-565,0],{\\\"text\\\":\\\"CPU interface\\\"}],[\\\"text\\\",[-268,-410,0],{\\\"text\\\":\\\"Main memory interface\\\"}],[\\\"jumper\\\",[-256,-392,0]],[\\\"wire\\\",[-256,-392,0,-8,0],{\\\"signal\\\":\\\"ia[31:3]\\\"}],[\\\"port\\\",[-248,-392,4],{\\\"signal\\\":\\\"xma[31:3]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-536,0],{\\\"signal\\\":\\\"id[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[-232,-448,0]],[\\\"wire\\\",[-224,-448,0,8,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[-232,-448,0,-8,0],{\\\"signal\\\":\\\"ia[7:3]\\\"}],[\\\"jumper\\\",[-232,-464,0]],[\\\"wire\\\",[-224,-464,0,8,0],{\\\"signal\\\":\\\"offset\\\"}],[\\\"wire\\\",[-232,-464,0,-8,0],{\\\"signal\\\":\\\"ia[2]\\\"}],[\\\"jumper\\\",[-232,-432,0]],[\\\"wire\\\",[-224,-432,0,8,0],{\\\"signal\\\":\\\"atag[23:0]\\\"}],[\\\"wire\\\",[-232,-432,0,-8,0],{\\\"signal\\\":\\\"ia[31:8]\\\"}],[\\\"memory\\\",[-256,-328,0],{\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"5\\\",\\\"ndata\\\":\\\"89\\\",\\\"contents\\\":\\\"0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\",\\\"name\\\":\\\"way0\\\"}],[\\\"wire\\\",[-256,-320,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-256,-312,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-304,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-328,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[-256,-288,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[-256,-280,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-272,0,-16,0],{\\\"signal\\\":\\\"cwe0\\\"}],[\\\"wire\\\",[-256,-264,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-184,-328,0,16,0],{\\\"signal\\\":\\\"valid0,tag0[23:0],cdata0[63:0]\\\"}],[\\\"wire\\\",[-184,-288,0,16,0],{\\\"signal\\\":\\\"1'1,ia[31:8],xdata[63:0]\\\"}],[\\\"memory\\\",[0,-328,0],{\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"5\\\",\\\"ndata\\\":\\\"89\\\",\\\"contents\\\":\\\"0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\",\\\"name\\\":\\\"way1\\\"}],[\\\"wire\\\",[0,-320,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[0,-312,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[0,-304,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[0,-328,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[0,-288,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[0,-280,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[0,-272,0,-16,0],{\\\"signal\\\":\\\"cwe1\\\"}],[\\\"wire\\\",[0,-264,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[72,-328,0,16,0],{\\\"signal\\\":\\\"valid1,tag1[23:0],cdata1[63:0]\\\"}],[\\\"wire\\\",[72,-288,0,16,0],{\\\"signal\\\":\\\"1'1,ia[31:8],xdata[63:0]\\\"}],[\\\"/caches/equal24\\\",[-24,-192,0]],[\\\"wire\\\",[-64,-208,0,-16,0],{\\\"signal\\\":\\\"tag0[23:0]\\\"}],[\\\"wire\\\",[-64,-192,0,-16,0],{\\\"signal\\\":\\\"atag[23:0]\\\"}],[\\\"wire\\\",[0,-200,0,40,0],{\\\"signal\\\":\\\"match0\\\"}],[\\\"/gates/and3\\\",[40,-200,0]],[\\\"/gates/inverter\\\",[8,-168,0]],[\\\"wire\\\",[88,-184,0,16,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"wire\\\",[8,-168,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"/caches/equal24\\\",[-24,-104,0]],[\\\"wire\\\",[-64,-120,0,-16,0],{\\\"signal\\\":\\\"tag1[23:0]\\\"}],[\\\"wire\\\",[-64,-104,0,-16,0],{\\\"signal\\\":\\\"atag[23:0]\\\"}],[\\\"/gates/and3\\\",[40,-112,0]],[\\\"/gates/inverter\\\",[8,-80,0]],[\\\"wire\\\",[88,-96,0,16,0],{\\\"signal\\\":\\\"hit1\\\"}],[\\\"wire\\\",[8,-80,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[40,-96,0,-16,0],{\\\"signal\\\":\\\"valid1\\\"}],[\\\"wire\\\",[40,-184,0,-24,0],{\\\"signal\\\":\\\"valid0\\\"}],[\\\"wire\\\",[0,-112,0,40,0],{\\\"signal\\\":\\\"match1\\\"}],[\\\"memory\\\",[-328,-160,0],{\\\"naddr\\\":\\\"3\\\",\\\"ndata\\\":\\\"4\\\",\\\"name\\\":\\\"cache_fsm\\\",\\\"contents\\\":\\\"0b0010 //state: 00, miss: 0\\\\n//       nstate: 0, rdy=1, cwe=0\\\\n0b0100 //state: 00, miss: 1\\\\n//       nstate: 1, rdy=0, cwe=0\\\\n0b1000 //state: 01, miss: 0\\\\n0b1000 //state: 01, miss: 1\\\\n0b0011 //state: 10, miss: 0\\\\n0b0011 //state: 10, miss: 1\\\\n\\\"}],[\\\"wire\\\",[-328,-160,0,-16,0],{\\\"signal\\\":\\\"state[1:0],miss\\\"}],[\\\"wire\\\",[-328,-152,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-328,-144,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-328,-136,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-160,0,16,0],{\\\"signal\\\":\\\"nstate[1:0],irdy,cwe\\\"}],[\\\"/gates/dreg\\\",[-280,-80,0]],[\\\"wire\\\",[-240,-80,0,16,0],{\\\"signal\\\":\\\"state[1:0]\\\"}],[\\\"wire\\\",[-280,-64,0,0,16],{\\\"signal\\\":\\\"clk\\\"}],[\\\"/gates/and2\\\",[-344,-88,0]],[\\\"wire\\\",[-296,-80,0,16,0],{\\\"width\\\":\\\"2\\\"}],[\\\"wire\\\",[-344,-88,0,-16,0],{\\\"signal\\\":\\\"nstate[1:0]\\\"}],[\\\"wire\\\",[-344,-72,0,-16,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"text\\\",[-199,-552,0],{\\\"text\\\":\\\"instruction ready\\\"}],[\\\"text\\\",[-194,-536,0],{\\\"text\\\":\\\"instruction data\\\\n\\\"}],[\\\"text\\\",[-166,-433,0],{\\\"text\\\":\\\"cache tag\\\"}],[\\\"text\\\",[-166,-448,0],{\\\"text\\\":\\\"cache line\\\"}],[\\\"text\\\",[-195,-520,0],{\\\"text\\\":\\\"instruction adress\\\"}],[\\\"text\\\",[-169,-316,0],{\\\"text\\\":\\\"read port\\\"}],[\\\"text\\\",[-167,-276,0],{\\\"text\\\":\\\"write port\\\"}],[\\\"text\\\",[-164,-377,0],{\\\"text\\\":\\\"data fetched from main mem\\\"}],[\\\"/gates/nor2\\\",[-352,-216,0]],[\\\"wire\\\",[-352,-216,0,-16,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"wire\\\",[-352,-200,0,-16,0],{\\\"signal\\\":\\\"hit1\\\"}],[\\\"wire\\\",[-304,-208,0,16,0],{\\\"signal\\\":\\\"miss\\\"}],[\\\"/gates/mux2\\\",[144,-240,0]],[\\\"wire\\\",[160,-232,0,16,0],{\\\"signal\\\":\\\"waysel[63:0]\\\"}],[\\\"wire\\\",[144,-240,0,-16,0],{\\\"signal\\\":\\\"cdata0[63:0]\\\"}],[\\\"wire\\\",[144,-224,0,-16,0],{\\\"signal\\\":\\\"cdata1[63:0]\\\"}],[\\\"/gates/mux2\\\",[200,-192,0]],[\\\"wire\\\",[200,-192,0,-16,0],{\\\"signal\\\":\\\"waysel[63:32]\\\"}],[\\\"wire\\\",[200,-176,0,-16,0],{\\\"signal\\\":\\\"waysel[31:0]\\\"}],[\\\"wire\\\",[216,-184,0,16,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[152,-208,0,-24,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"wire\\\",[184,-160,0,24,0],{\\\"signal\\\":\\\"offset\\\"}],[\\\"memory\\\",[48,-520,0],{\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"5\\\",\\\"name\\\":\\\"lru_state\\\",\\\"contents\\\":\\\"0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\"}],[\\\"wire\\\",[48,-520,0,-16,0],{\\\"signal\\\":\\\"ia[7:3]\\\"}],[\\\"wire\\\",[48,-512,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-504,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,-496,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,-480,0,-16,0],{\\\"signal\\\":\\\"ia[7:3]\\\"}],[\\\"wire\\\",[48,-472,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,-456,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[120,-520,0,32,0],{\\\"signal\\\":\\\"lru_is_1\\\"}],[\\\"wire\\\",[120,-480,0,16,0]],[\\\"/gates/inverter\\\",[152,-520,0]],[\\\"wire\\\",[184,-520,0,16,0],{\\\"signal\\\":\\\"lru_is_0\\\"}],[\\\"/gates/or2\\\",[184,-488,4]],[\\\"wire\\\",[184,-488,0,16,0],{\\\"signal\\\":\\\"cwe0\\\"}],[\\\"wire\\\",[184,-472,0,16,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"/gates/and2\\\",[-32,-472,0]],[\\\"wire\\\",[48,-464,0,-32,0]],[\\\"wire\\\",[-32,-472,0,-8,0],{\\\"signal\\\":\\\"irdy\\\"}],[\\\"wire\\\",[-32,-456,0,-8,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"/gates/inverter\\\",[-72,-456,0]],[\\\"wire\\\",[-72,-456,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"/gates/and3\\\",[296,-536,0]],[\\\"/gates/and3\\\",[296,-488,0]],[\\\"wire\\\",[344,-520,0,16,0],{\\\"signal\\\":\\\"cwe0\\\"}],[\\\"wire\\\",[344,-472,0,16,0],{\\\"signal\\\":\\\"cwe1\\\"}],[\\\"wire\\\",[296,-536,0,-16,0],{\\\"signal\\\":\\\"cwe\\\"}],[\\\"wire\\\",[296,-520,0,-16,0],{\\\"signal\\\":\\\"lru_is_0\\\"}],[\\\"wire\\\",[296,-504,0,-16,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"wire\\\",[296,-488,0,-16,0],{\\\"signal\\\":\\\"cwe\\\"}],[\\\"wire\\\",[296,-472,0,-16,0],{\\\"signal\\\":\\\"lru_is_1\\\"}],[\\\"wire\\\",[296,-456,0,-16,0],{\\\"signal\\\":\\\"resetn\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-88,-80,0],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"terminal\\\",[-88,-64,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-88,-48,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-88,-120,6],{\\\"name\\\":\\\"irdy\\\"}],[\\\"terminal\\\",[24,-120,2],{\\\"name\\\":\\\"xma[31:3]\\\"}],[\\\"terminal\\\",[24,-104,2],{\\\"name\\\":\\\"xdata[63:0]\\\"}],[\\\"terminal\\\",[-88,-104,6],{\\\"name\\\":\\\"id[31:0]\\\"}],[\\\"text\\\",[-78,-80,0],{\\\"text\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[-78,-64,0],{\\\"text\\\":\\\"reset\\\"}],[\\\"text\\\",[-78,-48,0],{\\\"text\\\":\\\"clk\\\"}],[\\\"text\\\",[-78,-120,0],{\\\"text\\\":\\\"irdy\\\"}],[\\\"text\\\",[-78,-104,0],{\\\"text\\\":\\\"id[31:0]\\\"}],[\\\"text\\\",[14,-120,4],{\\\"text\\\":\\\"xma[31:3]\\\"}],[\\\"text\\\",[14,-104,4],{\\\"text\\\":\\\"xdata[63:0]\\\"}],[\\\"text\\\",[-32,-134,0],{\\\"text\\\":\\\"ICACHE\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"10pt bold sans-serif\\\"}],[\\\"line\\\",[-80,-40,0,96,0]],[\\\"line\\\",[16,-144,0,-96,0]],[\\\"line\\\",[-80,-144,0,0,104]],[\\\"line\\\",[16,-144,0,0,104]]]},\\\"/caches/test\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"icon-readonly\\\":\\\"true\\\",\\\"test-readonly\\\":\\\"true\\\",\\\"schematic-readonly\\\":\\\"true\\\"},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs reset ia[31:0]\\\\n.group outputs irdy id[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 10n assert inputs tran 40n CLK=0 tran 49n sample outputs tran 1n\\\\n\\\\n1 -------------------------------- - -------------------------------- //  1 reset\\\\n\\\\n// read 0x000.  It's a miss, so fetch the 2-word block at locns 0 and 4 from main memory\\\\n// way 0 is LRU, so put the data there in line 0.  then make way 1 LRU for cache line 0.\\\\n0 00000000000000000000000000000000 L -------------------------------- //  2 read locn 0 =&gt; miss\\\\n0 00000000000000000000000000000000 L -------------------------------- //  3 read locn 0 RD1\\\\n0 00000000000000000000000000000000 H LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  4 read locn 0 RD2 =&gt; done\\\\n\\\\n// read 0x004  Expect a hit in line 0, way 0.\\\\n0 00000000000000000000000000000100 H LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  5 read locn 4 =&gt; hit\\\\n\\\\n// read 0x100 (which also maps to cache line 0) =&gt; a miss, but fill line 0 in way 1\\\\n// way 0 now becomes LRU for cache line 0\\\\n0 00000000000000000000000100000000 L -------------------------------- //  6 read locn 100 =&gt; miss\\\\n0 00000000000000000000000100000000 L -------------------------------- //  7 read locn 100 RD1\\\\n0 00000000000000000000000100000000 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL //  8 read locn 100 RD2 =&gt; done\\\\n\\\\n// read 0x004.  Should still be a hit in line 0, way 0.\\\\n0 00000000000000000000000000000100 H LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  9 read locn 4 =&gt; hit\\\\n\\\\n// read 0x104.  Expect a hit in line 0, way 1.\\\\n0 00000000000000000000000100000100 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLH // 10 read locn 104 =&gt; hit\\\\n\\\\n// read 0x204.  Expect a miss; refill line 0, way 0; way 1 becomes LRU\\\\n0 00000000000000000000001000000100 L -------------------------------- // 11 read locn 204 =&gt; miss\\\\n0 00000000000000000000001000000100 L -------------------------------- // 12 read locn 204 RD1\\\\n0 00000000000000000000001000000100 H LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLH // 13 read locn 204 RD2 =&gt; done\\\\n\\\\n// read 0x104.  Expect a hit since it should still be in line 0, way 1.\\\\n0 00000000000000000000000100000100 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLH // 14 read locn 104 =&gt; hit\\\\n\\\\n// read 0x3FC =&gt; a miss, fill line 31, way 0\\\\n0 00000000000000000000001111111100 L -------------------------------- // 15 read locn 3FC =&gt; miss\\\\n0 00000000000000000000001111111100 L -------------------------------- // 16 read locn 3FC RD1\\\\n0 00000000000000000000001111111100 H LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH // 17 read locn 3FC RD2 =&gt; done\\\\n\\\\n// read 0x100.  Expect a hit in line 0, way 1\\\\n0 00000000000000000000000100000000 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL // 18 read locn 100 =&gt; hit\\\\n// read 0x200.  Expect a hit in line 0, way 0\\\\n0 00000000000000000000001000000000 H LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL // 19 read locn 200 =&gt; hit\\\\n// read 0x3F8.  Expect a hit in line 31, way 0\\\\n0 00000000000000000000001111111000 H LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHL // 20 read locn 3F8 =&gt; done\\\\n\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot irdy\\\\n.plot X(id[31:0])\\\\n.plot X(xma[31:3])\\\\n.plot X(xdata[63:32])\\\\n.plot X(xdata[31:0])\\\\n\\\\n\\\\n\\\"]],\\\"schematic\\\":[[\\\"memory\\\",[80,-40,0],{\\\"ndata\\\":\\\"64\\\",\\\"name\\\":\\\"Main\\\",\\\"naddr\\\":\\\"9\\\",\\\"contents\\\":\\\"0x0000000100000000\\\\n0x0000000300000002\\\\n0x0000000500000004\\\\n0x0000000700000006\\\\n0x0000000900000008\\\\n0x0000000B0000000A\\\\n0x0000000D0000000C\\\\n0x0000000F0000000E\\\\n\\\\n0x0000001100000010\\\\n0x0000001300000012\\\\n0x0000001500000014\\\\n0x0000001700000016\\\\n0x0000001900000018\\\\n0x0000001B0000001A\\\\n0x0000001D0000001C\\\\n0x0000001F0000001E\\\\n\\\\n0x0000002100000020\\\\n0x0000002300000022\\\\n0x0000002500000024\\\\n0x0000002700000026\\\\n0x0000002900000028\\\\n0x0000002B0000002A\\\\n0x0000002D0000002C\\\\n0x0000002F0000002E\\\\n\\\\n0x0000003100000030\\\\n0x0000003300000032\\\\n0x0000003500000034\\\\n0x0000003700000036\\\\n0x0000003900000038\\\\n0x0000003B0000003A\\\\n0x0000003D0000003C\\\\n0x0000003F0000003E\\\\n\\\\n0x0000004100000040\\\\n0x0000004300000042\\\\n0x0000004500000044\\\\n0x0000004700000046\\\\n0x0000004900000048\\\\n0x0000004B0000004A\\\\n0x0000004D0000004C\\\\n0x0000004F0000004E\\\\n\\\\n0x0000005100000050\\\\n0x0000005300000052\\\\n0x0000005500000054\\\\n0x0000005700000056\\\\n0x0000005900000058\\\\n0x0000005B0000005A\\\\n0x0000005D0000005C\\\\n0x0000005F0000005E\\\\n\\\\n0x0000006100000060\\\\n0x0000006300000062\\\\n0x0000006500000064\\\\n0x0000006700000066\\\\n0x0000006900000068\\\\n0x0000006B0000006A\\\\n0x0000006D0000006C\\\\n0x0000006F0000006E\\\\n\\\\n0x0000007100000070\\\\n0x0000007300000072\\\\n0x0000007500000074\\\\n0x0000007700000076\\\\n0x0000007900000078\\\\n0x0000007B0000007A\\\\n0x0000007D0000007C\\\\n0x0000007F0000007E\\\\n\\\\n0x0000008100000080\\\\n0x0000008300000082\\\\n0x0000008500000084\\\\n0x0000008700000086\\\\n0x0000008900000088\\\\n0x0000008B0000008A\\\\n0x0000008D0000008C\\\\n0x0000008F0000008E\\\\n\\\\n0x0000009100000090\\\\n0x0000009300000092\\\\n0x0000009500000094\\\\n0x0000009700000096\\\\n0x0000009900000098\\\\n0x0000009B0000009A\\\\n0x0000009D0000009C\\\\n0x0000009F0000009E\\\\n\\\\n0x000000A1000000A0\\\\n0x000000A3000000A2\\\\n0x000000A5000000A4\\\\n0x000000A7000000A6\\\\n0x000000A9000000A8\\\\n0x000000AB000000AA\\\\n0x000000AD000000AC\\\\n0x000000AF000000AE\\\\n\\\\n0x000000B1000000B0\\\\n0x000000B3000000B2\\\\n0x000000B5000000B4\\\\n0x000000B7000000B6\\\\n0x000000B9000000B8\\\\n0x000000BB000000BA\\\\n0x000000BD000000BC\\\\n0x000000BF000000BE\\\\n\\\\n0x000000C1000000C0\\\\n0x000000C3000000C2\\\\n0x000000C5000000C4\\\\n0x000000C7000000C6\\\\n0x000000C9000000C8\\\\n0x000000CB000000CA\\\\n0x000000CD000000CC\\\\n0x000000CF000000CE\\\\n\\\\n0x000000D1000000D0\\\\n0x000000D3000000D2\\\\n0x000000D5000000D4\\\\n0x000000D7000000D6\\\\n0x000000D9000000D8\\\\n0x000000DB000000DA\\\\n0x000000DD000000DC\\\\n0x000000DF000000DE\\\\n\\\\n0x000000E1000000E0\\\\n0x000000E3000000E2\\\\n0x000000E5000000E4\\\\n0x000000E7000000E6\\\\n0x000000E9000000E8\\\\n0x000000EB000000EA\\\\n0x000000ED000000EC\\\\n0x000000EF000000EE\\\\n\\\\n0x000000F1000000F0\\\\n0x000000F3000000F2\\\\n0x000000F5000000F4\\\\n0x000000F7000000F6\\\\n0x000000F9000000F8\\\\n0x000000FB000000FA\\\\n0x000000FD000000FC\\\\n0x000000FF000000FE\\\"}],[\\\"wire\\\",[80,-40,0,-8,0],{\\\"signal\\\":\\\"xma[11:3]\\\"}],[\\\"wire\\\",[80,-32,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[80,-24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[80,-16,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[152,-40,0,8,0],{\\\"signal\\\":\\\"xdata[63:0]\\\"}],[\\\"wire\\\",[-16,-56,0,8,0],{\\\"signal\\\":\\\"xdata[63:0]\\\"}],[\\\"wire\\\",[-16,-72,0,8,0],{\\\"signal\\\":\\\"xma[31:3]\\\"}],[\\\"wire\\\",[-128,-16,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-128,0,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"/caches/icache\\\",[-40,48,0],{\\\"name\\\":\\\"icache\\\"}],[\\\"wire\\\",[-128,-72,0,-8,0],{\\\"signal\\\":\\\"irdy\\\"}],[\\\"wire\\\",[-128,-56,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-128,-32,0,-8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}]]},\\\"/cmos/F\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":\\\"true\\\"},\\\"schematic\\\":[[\\\"port\\\",[0,16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-72,32,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[0,48,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[72,0,4],{\\\"signal\\\":\\\"F\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"vdd\\\",[-8,-72,0]],[\\\"ground\\\",[-16,64,0]],[\\\"/analog/nfet\\\",[24,32,0]],[\\\"/analog/nfet\\\",[24,0,0]],[\\\"/analog/nfet\\\",[-48,16,0]],[\\\"/analog/pfet\\\",[-8,-72,0]],[\\\"/analog/pfet\\\",[-48,-40,0]],[\\\"wire\\\",[24,0,0,-72,0]],[\\\"wire\\\",[-48,0,0,0,16]],[\\\"wire\\\",[-48,48,0,0,16]],[\\\"wire\\\",[-48,64,0,32,0]],[\\\"wire\\\",[24,64,0,-40,0]],[\\\"/analog/pfet\\\",[24,-40,0]],[\\\"wire\\\",[24,-40,0,-32,0]],[\\\"port\\\",[-32,-56,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-72,-24,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[0,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"wire\\\",[-8,-40,0,-40,0]],[\\\"wire\\\",[24,-8,0,-72,0]],[\\\"wire\\\",[24,-8,0,0,8]],[\\\"/analog/pfet\\\",[72,-32,0]],[\\\"/analog/nfet\\\",[72,0,0]],[\\\"wire\\\",[24,-8,0,24,0]],[\\\"wire\\\",[48,-16,0,0,8]],[\\\"wire\\\",[48,16,0,0,-24]],[\\\"wire\\\",[-8,-72,0,80,0]],[\\\"wire\\\",[72,-32,0,0,-40]],[\\\"wire\\\",[24,64,0,48,0]],[\\\"wire\\\",[72,32,0,0,32]]],\\\"icon\\\":[[\\\"terminal\\\",[-32,-24,0]],[\\\"terminal\\\",[-32,-8,0]],[\\\"terminal\\\",[-32,8,0]],[\\\"terminal\\\",[8,-8,4]],[\\\"text\\\",[-12,-8,0],{\\\"text\\\":\\\"F\\\",\\\"font\\\":\\\"12pt bold serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,16,0,0,-48]],[\\\"line\\\",[-24,-32,0,24,0]],[\\\"line\\\",[0,-32,0,0,48]],[\\\"line\\\",[0,16,0,-24,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B C\\\\n.group outputs F\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 L\\\\n001 H\\\\n010 L\\\\n011 H\\\\n100 L\\\\n101 H\\\\n000 L\\\\n110 H\\\\n000 L\\\\n111 H\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot C\\\\n.plot F\\\\n.plot I(Vdd)\\\\n\\\"]]},\\\"/fsm/fsm\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":\\\"true\\\"},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET IN\\\\n.group outputs U V\\\\n.mode gate\\\\n\\\\n.cycle CLK=0 assert inputs tran 10n CLK=1 tran 20n CLK=0 tran 5n sample outputs tran 5n\\\\n\\\\n1 0 LH //  1. now in SA\\\\n0 0 LH //  2. now in SA\\\\n0 1 LL //  3. now in SB\\\\n0 0 LL //  4. now in SD\\\\n0 1 HL //  5. now in SF\\\\n0 1 HL //  6. now in SF\\\\n0 0 LH //  7. now in SA\\\\n0 1 LL //  8. now in SB\\\\n0 1 HH //  9. now in SC\\\\n0 0 LL // 10. now in SD\\\\n0 0 LL // 11. now in SE\\\\n0 1 HH // 12. now in SC\\\\n0 1 LL // 13. now in SE\\\\n0 0 HL // 14. now in SF\\\\n0 0 LH // 15. now in SA\\\\n\\\\n// now test that RESET always returns us SA\\\\n1 0 LH // 16. now in SA (reset asserted)\\\\n0 1 LL // 17. now in SB\\\\n1 0 LH // 18. now in SA (reset asserted)\\\\n0 1 LL // 19. now in SB\\\\n0 1 HH // 20. now in SC\\\\n1 0 LH // 21. now in SA (reset asserted)\\\\n0 1 LL // 22. now in SB\\\\n0 0 LL // 23. now in SD\\\\n1 0 LH // 24. now in SA (reset asserted)\\\\n0 1 LL // 25. now in SB\\\\n0 0 LL // 26. now in SD\\\\n0 1 HL // 27. now in SF\\\\n1 0 LH // 28. now in SA (reset asserted)\\\\n0 1 LL // 29. now in SB\\\\n0 0 LL // 30. now in SD\\\\n0 0 LL // 31. now in SE\\\\n1 0 LH // 32. now in SA (reset asserted)\\\\n\\\\n// test RESET again this time with IN=1 on reset cycles\\\\n1 1 LH // 33. now in SA (reset asserted)\\\\n0 1 LL // 34. now in SB\\\\n1 1 LH // 35. now in SA (reset asserted)\\\\n0 1 LL // 36. now in SB\\\\n0 1 HH // 37. now in SC\\\\n1 1 LH // 38. now in SA (reset asserted)\\\\n0 1 LL // 39. now in SB\\\\n0 0 LL // 40. now in SD\\\\n1 1 LH // 41. now in SA (reset asserted)\\\\n0 1 LL // 42. now in SB\\\\n0 0 LL // 43. now in SD\\\\n0 1 HL // 44. now in SF\\\\n1 1 LH // 45. now in SA (reset asserted)\\\\n0 1 LL // 46. now in SB\\\\n0 0 LL // 47. now in SD\\\\n0 0 LL // 48. now in SE\\\\n1 1 LH // 49. now in SA (reset asserted)\\\\n\\\\n.plot CLK\\\\n.plot RESET\\\\n.plot IN\\\\n.plot U\\\\n.plot V\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[736,-176,4],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[792,-216,7],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[632,-272,0],{\\\"signal\\\":\\\"IN\\\"}],[\\\"port\\\",[872,-304,4],{\\\"signal\\\":\\\"U\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[872,-328,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/untitled\\\",[72,-56,0]],[\\\"memory\\\",[720,-296,0],{\\\"naddr\\\":\\\"4\\\",\\\"ndata\\\":\\\"4\\\",\\\"name\\\":\\\"ROM2\\\",\\\"contents\\\":\\\"0b0100 //D -> E \\\\n0b1000 //  -> F\\\\n0b0000 //B -> D\\\\n0b1110 //  -> C\\\\n0b1000 //E -> F\\\\n0b1110 //  -> C\\\\n0b0111 //A -> A\\\\n0b0011 //  -> B\\\\n0b0110 //F -> A\\\\n0b1000 //  -> F\\\\n// unused locations\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0001 //C -> D\\\\n0b0101 //  -> E\\\"}],[\\\"wire\\\",[720,-288,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[720,-280,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[720,-272,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[800,-184,2]],[\\\"wire\\\",[800,-184,0,24,0],{\\\"signal\\\":\\\"011'3\\\"}],[\\\"wire\\\",[800,-200,0,16,0],{\\\"width\\\":\\\"3\\\",\\\"signal\\\":\\\"D[2:0]\\\"}],[\\\"/gates/dreg\\\",[736,-192,4]],[\\\"wire\\\",[736,-192,0,48,0],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[696,-192,0,-24,0],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[632,-272,0,16,0]],[\\\"/gates/buffer\\\",[648,-328,0]],[\\\"wire\\\",[648,-272,0,0,-56]],[\\\"wire\\\",[680,-328,0,16,0],{\\\"signal\\\":\\\"A[3]\\\"}],[\\\"/gates/buffer\\\",[672,-192,4]],[\\\"wire\\\",[640,-192,0,-16,0],{\\\"signal\\\":\\\"A[2:0]\\\",\\\"width\\\":\\\"3\\\"}],[\\\"/gates/buffer\\\",[840,-304,0]],[\\\"wire\\\",[840,-304,0,-16,0],{\\\"signal\\\":\\\"D[3]\\\"}],[\\\"wire\\\",[872,-328,0,-40,0]],[\\\"/gates/buffer\\\",[800,-328,0]],[\\\"wire\\\",[800,-328,0,-8,0],{\\\"signal\\\":\\\"A[3]\\\"}],[\\\"wire\\\",[720,-296,0,-16,0],{\\\"signal\\\":\\\"0000'4\\\"}]]},\\\"/user/checktests\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/beta/beta\\\",[-128,40,0],{\\\"name\\\":\\\"beta\\\"}],[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"3\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"+ 0x73df000a 0x73ff0003 0x6ffe0000 0xc3e00000 0x73fffffe 0xd01e0004 0x73e00002 0x801ef800\\\\n+ 0x73fffffa 0xc0210001 0x6ffe0000 0x73ff0002 0xc01f0005 0x73fffff5 0xd01f0000 0x77e00002\\\\n+ 0xc01f0006 0x73fffff1 0xd81f0000 0x77e00002 0xc01f0007 0x73ffffed 0xd41f0001 0x77e00002\\\\n+ 0xc01f0008 0x73ffffe9 0xd01fffff 0x73e00002 0xc01f0009 0x73ffffe5 0xd81fffff 0x73e00002\\\\n+ 0xc01f000a 0x73ffffe1 0xd41fffff 0x73e00002 0xc01f000b 0x73ffffdd 0xc03f0001 0xf021001f\\\\n+ 0xc4410001 0xa4611000 0xd063ffff 0x77e30002 0xc01f000c 0x73ffffd5 0x98611000 0x77e30002\\\\n+ 0xc01f000d 0x73ffffd1 0x98620800 0x73e30002 0xc01f000e 0x73ffffcd 0x801ff800 0x73e00002\\\\n+ 0xc01f000f 0x73ffffc9 0xc01f0000 0x73e00002 0xc01f0010 0x73ffffc5 0x9020f800 0xd0010001\\\\n+ 0x77e00002 0xc01f0012 0x73ffffc0 0xf0410001 0xd0020002 0x77e00002 0xc01f0013 0x73ffffbb\\\\n+ 0x80611000 0xd0030003 0x77e00002 0xc01f0014 0x73ffffb6 0xc0810003 0xd0040004 0x77e00002\\\\n+ 0xc01f0015 0x73ffffb1 0xe8bfffff 0xe8a5fffa 0xd0050005 0x77e00002 0xc01f0016 0x73ffffab\\\\n+ 0xa4c41000 0xd0060006 0x77e00002 0xc01f0017 0x73ffffa6 0xc4ff0001 0xf4e7001d 0xd0070007\\\\n+ 0x77e00002 0xc01f0018 0x73ffffa0 0xb1011800 0xd0080008 0x77e00002 0xc01f0019 0x73ffff9b\\\\n+ 0x99284000 0xc529fff8 0xd0090009 0x77e00002 0xc01f001a 0x73ffff95 0xa9481000 0xd00a000a\\\\n+ 0x77e00002 0xc01f001b 0x73ffff90 0xe5630008 0xd00b000b 0x77e00002 0xc01f001c 0x73ffff8b\\\\n+ 0x859f0800 0xf58c001d 0x818c2800 0xd00c000c 0x77e00002 0xc01f0018 0x73ffff84 0xa5a82800\\\\n+ 0xd00d000d 0x77e00002 0xc01f001e 0x73ffff7f 0x95cc6800 0x81cd7000 0xd00e000e 0x77e00002\\\\n+ 0xc01f001f 0x73ffff79 0xf1e10004 0x85ef0800 0xd00f000f 0x77e00002 0xc01f0020 0x73ffff73\\\\n+ 0xb60f1000 0x82106800 0xd0100010 0x77e00002 0xc01f0021 0x73ffff6d 0xee30fffe 0xd0110011\\\\n+ 0x77e00002 0xc01f0022 0x73ffff68 0xa24f1000 0xe6520010 0xd0120012 0x77e00002 0xc01f0023\\\\n+ 0x73ffff62 0xba6c1000 0xae709800 0xee730000 0xd0130013 0x77e00002 0xc01f0024 0x73ffff5b\\\\n+ 0xc29f001f 0xe2940014 0xd0140014 0x77e00002 0xc01f0025 0x73ffff55 0xe6b40001 0xd0150015\\\\n+ 0x77e00002 0xc01f0026 0x73ffff50 0xc2d10005 0xd0160016 0x77e00002 0xc01f0027 0x73ffff4b\\\\n+ 0xaaf60800 0xd0170017 0x77e00002 0xc01f0028 0x73ffff46 0xe31700fc 0x83182000 0xd0180018\\\\n+ 0x77e00002 0xc01f0029 0x73ffff40 0x8337c000 0xc339ffea 0xd0190019 0x77e00002 0xc01f002a\\\\n+ 0x73ffff3a 0xb3431800 0xa742d000 0xd01a001a 0x77e00002 0xc01f002b 0x73ffff34 0x836e6800\\\\n+ 0xd01b001b 0x77e00002 0xc01f002c 0x73ffff2f 0xc797fffb 0xd01c001c 0x77e00002 0xc01f002d\\\\n+ 0x73ffff2a 0xc7bfffe3 0xd01d001d 0x77e00002 0xc01f002e 0x73ffff25 0xc3df001f 0xf7de0001\\\\n+ 0xf3de0001 0xd01e001e 0x77e00002 0xc01f002f 0x73ffff1e 0x7000ff1d 0xc3fe0011 0x73ff0002\\\\n+ 0xc01f0030 0x73ffff19 0xc23f03c4 0xf021001f 0xa6218800 0x6f910000 0x77ff0002 0xc01f0032\\\\n+ 0x73ffff12 0xf39c0001 0xf79c0001 0xd2fc03b8 0x77f70002 0xc01f0033 0x73ffff0c 0x7f1f00c0\\\\n+ 0x7f3f00c0 0x8358c800 0xd37affff 0x77fb0002 0xc01f0034 0x73ffff05 0x8358c000 0x875ac800\\\\n+ 0xd37affff 0x77fb0002 0xc01f0035 0x73fffeff 0x8359c800 0x875ac000 0x73fa0002 0xc01f0036\\\\n+ 0x73fffefa 0xc23f0001 0xc6510001 0x73f20002 0xc01f0037 0x73fffef5 0xc17f0f0f 0xc19f7f00\\\\n+ 0xa1ab6000 0xd1cd0f00 0x77ee0002 0xc01f0038 0x73fffeee 0xa5ab6000 0xd1cd7f0f 0x77ee0002\\\\n+ 0xc01f0039 0x73fffee9 0xa9ab6000 0xd1cd700f 0x77ee0002 0xc01f003a 0x73fffee4 0xadab6000\\\\n+ 0xd1cd8ff0 0x77ee0002 0xc01f003b 0x73fffedf 0xc37f0001 0xf39b0020 0xd3bc0001 0x77fd0002\\\\n+ 0xc01f003c 0x73fffed9 0xf39b001f 0xfb5c0011 0xd33ac000 0x77f90002 0xc01f003d 0x73fffed3\\\\n+ 0xf75c0011 0xd33a4000 0x77f90002 0xc01f003e 0x73fffece 0xc3df0000 0xc03f0000 0x00000014\\\\n+ 0xf3de0001 0xf7de0001 0xd01e04e0 0x77e00002 0xc01f003f 0x73fffec5 0x04000000 0x08000000\\\\n+ 0x0c000000 0x10000000 0x14000000 0x18000000 0x1c000000 0x20000000 0x24000000 0x28000000\\\\n+ 0x2c000000 0x30000000 0x34000000 0x38000000 0x3c000000 0x40000000 0x44000000 0x48000000\\\\n+ 0x4c000000 0x50000000 0x54000000 0x58000000 0x5c000000 0x68000000 0x78000000 0x9c000000\\\\n+ 0xbc000000 0xdc000000 0xfc000000 0xd001001e 0x77e00002 0xc01f0040 0x73fffea4 0xc09f06e8\\\\n+ 0x7d3f0057 0xe809ffff 0x65240000 0x641f06ec 0x65240008 0x641f06f4 0x60c40000 0x7cbf0051\\\\n+ 0x90064800 0x77e00002 0xc01f0041 0x73fffe97 0x60ff06ec 0x90072800 0x77e00002 0xc01f0042\\\\n+ 0x73fffe92 0x61040008 0x90084800 0x77e00002 0xc01f0043 0x73fffe8d 0x613f06f4 0x90092800\\\\n+ 0x77e00002 0xc01f0044 0x73fffe88 0x801fa000 0x80200000 0x80400000 0x80600000 0x80800000\\\\n+ 0x80a11000 0x80a32800 0x80a42800 0xd00500a0 0x77e00002 0xc01f0045 0x73fffe7c 0x741f0000\\\\n+ 0x80200000 0x80400000 0x80600000 0x80800000 0x80a11000 0x80a32800 0x80a42800 0xd0053100\\\\n+ 0x77e00002 0xc01f0046 0x73fffe70 0xc01f0654 0x6fe00000 0x73ff0001 0x73ff0003 0x77ff0002\\\\n+ 0xc01f0047 0x73fffe69 0xd01e0658 0x77e00002 0xc01f0048 0x73fffe65 0xc01f068c 0xc03f0001\\\\n+ 0xf021001f 0xa4010000 0x6c200000 0x701f0000 0xd0200690 0x77e10002 0xc01f0049 0x73fffe5b\\\\n+ 0x601f06e0 0x73e00007 0x601f06e4 0x73e00005 0xc01f0000 0x77e00003 0xc03f0001 0xc05f0020\\\\n+ 0x77e10002 0xc01f004a 0x73fffe50 0xf0210001 0xc4420001 0x77e2fffa 0xc3ff0000 0x73fffffe\\\\n+ 0xaaaaaaaa 0x55555555 0x00000000 0x00000000 0x00000000 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[120,16,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[120,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,56,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,64,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,72,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,80,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Beta test program.\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET IRQ\\\\n.group outputs IA[31:0] ID[31:0] MA[31:0] MOE MWR MRD[31:0] MWD[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 5n assert inputs tran 45n CLK=0 tran 49n sample outputs tran 1n\\\\n\\\\n10 -------------------------------- -------------------------------- -------------------------------- -L -------------------------------- -------------------------------- //   1: reset\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHLLHHHHLHHHHHLLLLLLLLLLLLHLHL -------------------------------- -L -------------------------------- -------------------------------- //   2: [000] BEQ(R31,0x2c,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   3: [02c] BEQ(R31,0x38,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHLLL HHLHLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   4: [038] CMPEQC(R31,0x0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   5: [03c] BNE(R0,0x48,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHLLL HHLHHLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   6: [048] CMPLEC(R31,0x0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   7: [04c] BNE(R0,0x58,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHLLL HHLHLHLLLLLHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   8: [058] CMPLTC(R31,0x1,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   9: [05c] BNE(R0,0x68,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHLLL HHLHLLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  10: [068] CMPEQC(R31,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  11: [06c] BEQ(R0,0x78,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL HHLHHLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  12: [078] CMPLEC(R31,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  13: [07c] BEQ(R0,0x88,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHLLL HHLHLHLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  14: [088] CMPLTC(R31,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  15: [08c] BEQ(R0,0x98,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  16: [098] ADDC(R31,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  17: [09c] SHLC(R1,0x1f,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL HHLLLHLLLHLLLLLHLLLLLLLLLLLLLLLH LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  18: [0a0] SUBC(R1,0x1,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLHLL HLHLLHLLLHHLLLLHLLLHLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  19: [0a4] OR(R1,R2,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHLLL HHLHLLLLLHHLLLHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  20: [0a8] CMPEQC(R3,0xffff,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  21: [0ac] BNE(R3,0xb8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHLLL HLLHHLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  22: [0b8] CMPLE(R1,R2,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  23: [0bc] BNE(R3,0xc8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHLLL HLLHHLLLLHHLLLHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  24: [0c8] CMPLE(R2,R1,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHHLL LHHHLLHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  25: [0cc] BEQ(R3,0xd8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHLLL HLLLLLLLLLLHHHHHHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  26: [0d8] ADD(R31,R31,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  27: [0dc] BEQ(R0,0xe8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  28: [0e8] ADDC(R31,0x0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  29: [0ec] BEQ(R0,0xf8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHLLL HLLHLLLLLLHLLLLLHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  30: [0f8] CMPEQ(R0,R31,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  31: [0fc] CMPEQC(R1,0x1,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  32: [100] BNE(R0,0x10c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLHHLL HHHHLLLLLHLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  33: [10c] SHLC(R1,0x1,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLLLL HHLHLLLLLLLLLLHLLLLLLLLLLLLLLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  34: [110] CMPEQC(R2,0x2,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  35: [114] BNE(R0,0x120,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLLLL HLLLLLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  36: [120] ADD(R1,R2,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLHLL HHLHLLLLLLLLLLHHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  37: [124] CMPEQC(R3,0x3,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  38: [128] BNE(R0,0x134,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHLHLL HHLLLLLLHLLLLLLHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- //  39: [134] ADDC(R1,0x3,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHLLL HHLHLLLLLLLLLHLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  40: [138] CMPEQC(R4,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  41: [13c] BNE(R0,0x148,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHLLL HHHLHLLLHLHHHHHHHHHHHHHHHHHHHHHH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  42: [148] XORC(R31,0xffff,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHHLL HHHLHLLLHLHLLHLHHHHHHHHHHHHHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- //  43: [14c] XORC(R5,0xfffa,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLLLL HHLHLLLLLLLLLHLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  44: [150] CMPEQC(R5,0x5,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  45: [154] BNE(R0,0x160,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLLLL HLHLLHLLHHLLLHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- //  46: [160] OR(R4,R2,R6)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLHLL HHLHLLLLLLLLLHHLLLLLLLLLLLLLLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  47: [164] CMPEQC(R6,0x6,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  48: [168] BNE(R0,0x174,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHLHLL HHLLLHLLHHHHHHHHLLLLLLLLLLLLLLLH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  49: [174] SUBC(R31,0x1,R7)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHLLL HHHHLHLLHHHLLHHHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  50: [178] SHRC(R7,0x1d,R7)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHHLL HHLHLLLLLLLLLHHHLLLLLLLLLLLLLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  51: [17c] CMPEQC(R7,0x7,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  52: [180] BNE(R0,0x18c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLHHLL HLHHLLLHLLLLLLLHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- //  53: [18c] SHL(R1,R3,R8)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLLLL HHLHLLLLLLLLHLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  54: [190] CMPEQC(R8,0x8,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  55: [194] BNE(R0,0x1a0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLLLL HLLHHLLHLLHLHLLLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  56: [1a0] CMPLE(R8,R8,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLHLL HHLLLHLHLLHLHLLHHHHHHHHHHHHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- //  57: [1a4] SUBC(R9,0xfff8,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHLLL HHLHLLLLLLLLHLLHLLLLLLLLLLLLHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  58: [1a8] CMPEQC(R9,0x9,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  59: [1ac] BNE(R0,0x1b8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHLLL HLHLHLLHLHLLHLLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- //  60: [1b8] XOR(R8,R2,R10)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHHLL HHLHLLLLLLLLHLHLLLLLLLLLLLLLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  61: [1bc] CMPEQC(R10,0xa,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  62: [1c0] BNE(R0,0x1cc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLHHLL HHHLLHLHLHHLLLHHLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- //  63: [1cc] ORC(R3,0x8,R11)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLLLL HHLHLLLLLLLLHLHHLLLLLLLLLLLLHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  64: [1d0] CMPEQC(R11,0xb,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  65: [1d4] BNE(R0,0x1e0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLLLL HLLLLHLHHLLHHHHHLLLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  66: [1e0] SUB(R31,R1,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLHLL HHHHLHLHHLLLHHLLLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  67: [1e4] SHRC(R12,0x1d,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHLLL HLLLLLLHHLLLHHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- //  68: [1e8] ADD(R12,R5,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHHLL HHLHLLLLLLLLHHLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  69: [1ec] CMPEQC(R12,0xc,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  70: [1f0] BNE(R0,0x1fc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHHHLL HLHLLHLHHLHLHLLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- //  71: [1fc] OR(R8,R5,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL HHLHLLLLLLLLHHLHLLLLLLLLLLLLHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  72: [200] CMPEQC(R13,0xd,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  73: [204] BNE(R0,0x210,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLLLL HLLHLHLHHHLLHHLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  74: [210] CMPLT(R12,R13,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLHLL HLLLLLLHHHLLHHLHLHHHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- //  75: [214] ADD(R13,R14,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHLLL HHLHLLLLLLLLHHHLLLLLLLLLLLLLHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  76: [218] CMPEQC(R14,0xe,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  77: [21c] BNE(R0,0x228,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHLLL HHHHLLLHHHHLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  78: [228] SHLC(R1,0x4,R15)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHHLL HLLLLHLHHHHLHHHHLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- //  79: [22c] SUB(R15,R1,R15)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLLLL HHLHLLLLLLLLHHHHLLLLLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  80: [230] CMPEQC(R15,0xf,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  81: [234] BNE(R0,0x240,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLLLL HLHHLHHLLLLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  82: [240] SHR(R15,R2,R16)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLHLL HLLLLLHLLLLHLLLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  83: [244] ADD(R16,R13,R16)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHLLL HHLHLLLLLLLHLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  84: [248] CMPEQC(R16,0x10,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  85: [24c] BNE(R0,0x258,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHLLL HHHLHHHLLLHHLLLLHHHHHHHHHHHHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- //  86: [258] XNORC(R16,0xfffe,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHHLL HHLHLLLLLLLHLLLHLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  87: [25c] CMPEQC(R17,0x11,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  88: [260] BNE(R0,0x26c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLHHLL HLHLLLHLLHLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  89: [26c] AND(R15,R2,R18)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLLLL HHHLLHHLLHLHLLHLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- //  90: [270] ORC(R18,0x10,R18)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLHLL HHLHLLLLLLLHLLHLLLLLLLLLLLLHLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  91: [274] CMPEQC(R18,0x12,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  92: [278] BNE(R0,0x284,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLLHLL HLHHHLHLLHHLHHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  93: [284] SRA(R12,R2,R19)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHLLL HLHLHHHLLHHHLLLLHLLHHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHLHHLL -L -------------------------------- -------------------------------- //  94: [288] XNOR(R16,R19,R19)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHHLL HHHLHHHLLHHHLLHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- //  95: [28c] XNORC(R19,0x0,R19)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLLLL HHLHLLLLLLLHLLHHLLLLLLLLLLLHLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  96: [290] CMPEQC(R19,0x13,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  97: [294] BNE(R0,0x2a0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLLLL HHLLLLHLHLLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- //  98: [2a0] ADDC(R31,0x1f,R20)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLHLL HHHLLLHLHLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- //  99: [2a4] ANDC(R20,0x14,R20)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHLLL HHLHLLLLLLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 100: [2a8] CMPEQC(R20,0x14,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 101: [2ac] BNE(R0,0x2b8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHLLL HHHLLHHLHLHHLHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 102: [2b8] ORC(R20,0x1,R21)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHHLL HHLHLLLLLLLHLHLHLLLLLLLLLLLHLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 103: [2bc] CMPEQC(R21,0x15,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 104: [2c0] BNE(R0,0x2cc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLHHLL HHLLLLHLHHLHLLLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 105: [2cc] ADDC(R17,0x5,R22)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLLLL HHLHLLLLLLLHLHHLLLLLLLLLLLLHLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 106: [2d0] CMPEQC(R22,0x16,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 107: [2d4] BNE(R0,0x2e0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLLLL HLHLHLHLHHHHLHHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 108: [2e0] XOR(R22,R1,R23)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLHLL HHLHLLLLLLLHLHHHLLLLLLLLLLLHLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 109: [2e4] CMPEQC(R23,0x17,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 110: [2e8] BNE(R0,0x2f4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHLHLL HHHLLLHHLLLHLHHHLLLLLLLLHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 111: [2f4] ANDC(R23,0xfc,R24)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHLLL HLLLLLHHLLLHHLLLLLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 112: [2f8] ADD(R24,R4,R24)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHHLL HHLHLLLLLLLHHLLLLLLLLLLLLLLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 113: [2fc] CMPEQC(R24,0x18,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 114: [300] BNE(R0,0x30c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLHHLL HLLLLLHHLLHHLHHHHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 115: [30c] ADD(R23,R24,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLLLL HHLLLLHHLLHHHLLHHHHHHHHHHHHLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 116: [310] ADDC(R25,0xffea,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLHLL HHLHLLLLLLLHHLLHLLLLLLLLLLLHHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 117: [314] CMPEQC(R25,0x19,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 118: [318] BNE(R0,0x324,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLLHLL HLHHLLHHLHLLLLHHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 119: [324] SHL(R3,R3,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHLLL HLHLLHHHLHLLLLHLHHLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 120: [328] OR(R2,R26,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHHLL HHLHLLLLLLLHHLHLLLLLLLLLLLLHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 121: [32c] CMPEQC(R26,0x1a,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 122: [330] BNE(R0,0x33c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHHHLL HLLLLLHHLHHLHHHLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 123: [33c] ADD(R14,R13,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLLLL HHLHLLLLLLLHHLHHLLLLLLLLLLLHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 124: [340] CMPEQC(R27,0x1b,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 125: [344] BNE(R0,0x350,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLLLL HHLLLHHHHLLHLHHHHHHHHHHHHHHHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 126: [350] SUBC(R23,0xfffb,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLHLL HHLHLLLLLLLHHHLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 127: [354] CMPEQC(R28,0x1c,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 128: [358] BNE(R0,0x364,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLLHLL HHLLLHHHHLHHHHHHHHHHHHHHHHHLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 129: [364] SUBC(R31,0xffe3,R29)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHLLL HHLHLLLLLLLHHHLHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 130: [368] CMPEQC(R29,0x1d,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 131: [36c] BNE(R0,0x378,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHLLL HHLLLLHHHHLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 132: [378] ADDC(R31,0x1f,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 133: [37c] SHRC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 134: [380] SHLC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 135: [384] CMPEQC(R30,0x1e,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 136: [388] BNE(R0,0x394,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHLHLL LHHHLLLLLLLLLLLLHHHHHHHHLLLHHHLH -------------------------------- -L -------------------------------- -------------------------------- // 137: [394] BEQ(R0,0xc,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHLLL HHLLLLHHHHHHHHHLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 138: [398] ADDC(R30,0x11,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 139: [39c] BEQ(R31,0x3a8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHLLL HHLLLLHLLLHHHHHHLLLLLLHHHHLLLHLL LLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 140: [3a8] ADDC(R31,0x3c4,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 141: [3ac] SHLC(R1,0x1f,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLLLL HLHLLHHLLLHLLLLHHLLLHLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 142: [3b0] OR(R1,R17,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLHLL LHHLHHHHHLLHLLLHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 143: [3b4] JMP(R17,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL HHHHLLHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHHHLHHHLLLL -L -------------------------------- -------------------------------- // 144: [3c4] SHLC(R28,0x1,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHLLL HHHHLHHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHHHLHHHLLL -L -------------------------------- -------------------------------- // 145: [3c8] SHRC(R28,0x1,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHHLL HHLHLLHLHHHHHHLLLLLLLLHHHLHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 146: [3cc] CMPEQC(R28,0x3b8,R23)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHLLLL LHHHLHHHHHHHLHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 147: [3d0] BNE(R23,0x3dc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHHHLL LHHHHHHHLLLHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 148: [3dc] LDR(0x6e0,R24)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLLLL LHHHHHHHLLHHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 149: [3e0] LDR(0x6e4,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLHLL HLLLLLHHLHLHHLLLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 150: [3e4] ADD(R24,R25,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 151: [3e8] CMPEQC(R26,0xffff,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 152: [3ec] BNE(R27,0x3f8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHLLL HLLLLLHHLHLHHLLLHHLLLLLLLLLLLLLL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL -L -------------------------------- -------------------------------- // 153: [3f8] ADD(R24,R24,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHHLL HLLLLHHHLHLHHLHLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 154: [3fc] SUB(R26,R25,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 155: [400] CMPEQC(R26,0xffff,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 156: [404] BNE(R27,0x410,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLLLL HLLLLLHHLHLHHLLHHHLLHLLLLLLLLLLL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -L -------------------------------- -------------------------------- // 157: [410] ADD(R25,R25,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLHLL HLLLLHHHLHLHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 158: [414] SUB(R26,R24,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHHLLL LHHHLLHHHHHHHLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 159: [418] BEQ(R26,0x424,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLLHLL HHLLLLHLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 160: [424] ADDC(R31,0x1,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHLLL HHLLLHHLLHLHLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 161: [428] SUBC(R17,0x1,R18)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHHLL LHHHLLHHHHHHLLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 162: [42c] BEQ(R18,0x438,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHLLL HHLLLLLHLHHHHHHHLLLLHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 163: [438] ADDC(R31,0xf0f,R11)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHHLL HHLLLLLHHLLHHHHHLHHHHHHHLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 164: [43c] ADDC(R31,0x7f00,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLLLL HLHLLLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 165: [440] AND(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLHLL HHLHLLLHHHLLHHLHLLLLHHHHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 166: [444] CMPEQC(R13,0xf00,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLHLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 167: [448] BNE(R14,0x454,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHLHLL HLHLLHLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 168: [454] OR(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHLLL HHLHLLLHHHLLHHLHLHHHHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 169: [458] CMPEQC(R13,0x7f0f,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 170: [45c] BNE(R14,0x468,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHLLL HLHLHLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 171: [468] XOR(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHHLL HHLHLLLHHHLLHHLHLHHHLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 172: [46c] CMPEQC(R13,0x700f,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHLLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 173: [470] BNE(R14,0x47c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHHHLL HLHLHHLHHLHLHLHHLHHLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHLLLHHHHHHHHLLLL -L -------------------------------- -------------------------------- // 174: [47c] XNOR(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLLLL HHLHLLLHHHLLHHLHHLLLHHHHHHHHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 175: [480] CMPEQC(R13,0x8ff0,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 176: [484] BNE(R14,0x490,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLLLL HHLLLLHHLHHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 177: [490] ADDC(R31,0x1,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLHLL HHHHLLHHHLLHHLHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 178: [494] SHLC(R27,0x20,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHLLL HHLHLLHHHLHHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 179: [498] CMPEQC(R28,0x1,R29)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHHLL LHHHLHHHHHHHHHLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 180: [49c] BNE(R29,0x4a8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHLLL HHHHLLHHHLLHHLHHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 181: [4a8] SHLC(R27,0x1f,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHHLL HHHHHLHHLHLHHHLLLLLLLLLLLLLHLLLH HHHHHHHHHHHHHHHHHHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 182: [4ac] SRAC(R28,0x11,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLLLL HHLHLLHHLLHHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 183: [4b0] CMPEQC(R26,0xc000,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLHLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 184: [4b4] BNE(R25,0x4c0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLLLL HHHHLHHHLHLHHHLLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 185: [4c0] SHRC(R28,0x11,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLHLL HHLHLLHHLLHHHLHLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 186: [4c4] CMPEQC(R26,0x4000,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLHLLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 187: [4c8] BNE(R25,0x4d4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHLHLL HHLLLLHHHHLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 188: [4d4] ADDC(R31,0x0,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 189: [4d8] ADDC(R31,0x0,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -------------------------------- -L -------------------------------- -------------------------------- // 190: [4dc] illop op=0b000000\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 191: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 192: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 193: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 194: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 195: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLHHHLLLLLL -L -------------------------------- -------------------------------- // 196: [4e0] SHLC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL -L -------------------------------- -------------------------------- // 197: [4e4] SHRC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHLLL HHLHLLLLLLLHHHHLLLLLLHLLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 198: [4e8] CMPEQC(R30,0x4e0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 199: [4ec] BNE(R0,0x4f8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHLLL LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 200: [4f8] illop op=0b000001\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 201: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 202: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 203: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 204: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 205: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHHLL LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 206: [4fc] illop op=0b000010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 207: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 208: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 209: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 210: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 211: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLLLL LLLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 212: [500] illop op=0b000011\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 213: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 214: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 215: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 216: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 217: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLHLL LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 218: [504] illop op=0b000100\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 219: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 220: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 221: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 222: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 223: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHLLL LLLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 224: [508] illop op=0b000101\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 225: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 226: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 227: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 228: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 229: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHHLL LLLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 230: [50c] illop op=0b000110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 231: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 232: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 233: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 234: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 235: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLLLL LLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 236: [510] illop op=0b000111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 237: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 238: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 239: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 240: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 241: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLHLL LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 242: [514] illop op=0b001000\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 243: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 244: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 245: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 246: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 247: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHLLL LLHLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 248: [518] illop op=0b001001\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 249: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 250: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 251: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 252: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 253: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHHLL LLHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 254: [51c] illop op=0b001010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 255: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 256: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 257: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 258: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 259: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLLLL LLHLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 260: [520] illop op=0b001011\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 261: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 262: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 263: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 264: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 265: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLHLL LLHHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 266: [524] illop op=0b001100\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 267: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 268: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 269: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 270: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 271: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHLLL LLHHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 272: [528] illop op=0b001101\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 273: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 274: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 275: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 276: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 277: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHHLL LLHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 278: [52c] illop op=0b001110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 279: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 280: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 281: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 282: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 283: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLLLL LLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 284: [530] illop op=0b001111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 285: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 286: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 287: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 288: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 289: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLHLL LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 290: [534] illop op=0b010000\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 291: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 292: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 293: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 294: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 295: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHLLL LHLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 296: [538] illop op=0b010001\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 297: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 298: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 299: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 300: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 301: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHHLL LHLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 302: [53c] illop op=0b010010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 303: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 304: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 305: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 306: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 307: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLLLL LHLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 308: [540] illop op=0b010011\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 309: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 310: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 311: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 312: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 313: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLHLL LHLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 314: [544] illop op=0b010100\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 315: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 316: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 317: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 318: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 319: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHLLL LHLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 320: [548] illop op=0b010101\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 321: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 322: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 323: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 324: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 325: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHHLL LHLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 326: [54c] illop op=0b010110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 327: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 328: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 329: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 330: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 331: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLLLL LHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 332: [550] illop op=0b010111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 333: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 334: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 335: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 336: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 337: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLHLL LHHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 338: [554] illop op=0b011010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 339: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 340: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 341: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 342: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 343: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHLLL LHHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 344: [558] illop op=0b011110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 345: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 346: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 347: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 348: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 349: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHHLL HLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 350: [55c] illop op=0b100111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 351: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 352: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 353: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 354: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 355: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLLLL HLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 356: [560] illop op=0b101111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 357: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 358: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 359: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 360: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 361: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLHLL HHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 362: [564] illop op=0b110111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 363: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 364: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 365: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 366: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 367: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHLLL HHHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 368: [568] illop op=0b111111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 369: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 370: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 371: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 372: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 373: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 374: [56c] CMPEQC(R1,0x1e,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 375: [570] BNE(R0,0x57c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHHHLL HHLLLLLLHLLHHHHHLLLLLHHLHHHLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL -L -------------------------------- -------------------------------- // 376: [57c] ADDC(R31,0x6e8,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLLLL LHHHHHLHLLHHHHHHLLLLLLLLLHLHLHHH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 377: [580] LDR(0x6e0,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLHLL HHHLHLLLLLLLHLLHHHHHHHHHHHHHHHHH LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -L -------------------------------- -------------------------------- // 378: [584] XORC(R9,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 379: [588] ST(R9,0x0,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 380: [58c] ST(R0,0x6ec,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 381: [590] ST(R9,0x8,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 382: [594] ST(R0,0x6f4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHLLL LHHLLLLLHHLLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 383: [598] LD(R4,0x0,R6)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHHLL LHHHHHLLHLHHHHHHLLLLLLLLLHLHLLLH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 384: [59c] LDR(0x6e4,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLLLL HLLHLLLLLLLLLHHLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 385: [5a0] CMPEQ(R6,R9,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 386: [5a4] BNE(R0,0x5b0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLLLL LHHLLLLLHHHHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 387: [5b0] LD(R31,0x6ec,R7)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLHLL HLLHLLLLLLLLLHHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 388: [5b4] CMPEQ(R7,R5,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 389: [5b8] BNE(R0,0x5c4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLLHLL LHHLLLLHLLLLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 390: [5c4] LD(R4,0x8,R8)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHLLL HLLHLLLLLLLLHLLLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 391: [5c8] CMPEQ(R8,R9,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 392: [5cc] BNE(R0,0x5d8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHLLL LHHLLLLHLLHHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 393: [5d8] LD(R31,0x6f4,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHHLL HLLHLLLLLLLLHLLHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 394: [5dc] CMPEQ(R9,R5,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 395: [5e0] BNE(R0,0x5ec,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLHHLL HLLLLLLLLLLHHHHHHLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 396: [5ec] ADD(R31,R20,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 397: [5f0] ADD(R0,R0,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 398: [5f4] ADD(R0,R0,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 399: [5f8] ADD(R0,R0,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 400: [5fc] ADD(R0,R0,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLL -L -------------------------------- -------------------------------- // 401: [600] ADD(R1,R2,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL -L -------------------------------- -------------------------------- // 402: [604] ADD(R3,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL -L -------------------------------- -------------------------------- // 403: [608] ADD(R4,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHHLL HHLHLLLLLLLLLHLHLLLLLLLLHLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 404: [60c] CMPEQC(R5,0xa0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 405: [610] BNE(R0,0x61c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHHHLL LHHHLHLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 406: [61c] BNE(R31,0x620,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 407: [620] ADD(R0,R0,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 408: [624] ADD(R0,R0,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 409: [628] ADD(R0,R0,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 410: [62c] ADD(R0,R0,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLHHLLLHLLLLLLL -L -------------------------------- -------------------------------- // 411: [630] ADD(R1,R2,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHLLHLLHHLLLLLL -L -------------------------------- -------------------------------- // 412: [634] ADD(R3,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHHLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 413: [638] ADD(R4,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHHLL HHLHLLLLLLLLLHLHLLHHLLLHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 414: [63c] CMPEQC(R5,0x3100,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 415: [640] BNE(R0,0x64c,R31)\\\\n01 HLLLLLLLLLLLLLLLLLLLLHHLLHLLHHLL HHLLLLLLLLLHHHHHLLLLLHHLLHLHLHLL LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL -L -------------------------------- -------------------------------- // 416: [64c] ADDC(R31,0x654,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLHLLLL LHHLHHHHHHHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 417: [650] JMP(R0,R31)\\\\n01 LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLLH -------------------------------- -L -------------------------------- -------------------------------- // 418: interrupt\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 419: [008] JMP(R30,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHLHHLLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 420: [658] BEQ(R31,0x668,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHLLL HHLHLLLLLLLHHHHLLLLLLHHLLHLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 421: [668] CMPEQC(R30,0x658,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 422: [66c] BNE(R0,0x678,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHLLL HHLLLLLLLLLHHHHHLLLLLHHLHLLLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 423: [678] ADDC(R31,0x68c,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHHLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 424: [67c] ADDC(R31,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLLLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 425: [680] SHLC(R1,0x1f,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLHLL HLHLLHLLLLLLLLLHLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 426: [684] OR(R1,R0,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHLLL LHHLHHLLLLHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 427: [688] JMP(R0,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL LHHHLLLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 428: [68c] BEQ(R31,0x690,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLLLL HHLHLLLLLLHLLLLLLLLLLHHLHLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 429: [690] CMPEQC(R0,0x690,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLHLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 430: [694] BNE(R1,0x6a0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 431: [6a0] LD(R31,0x6e0,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHHH -------------------------------- -L -------------------------------- -------------------------------- // 432: [6a4] BEQ(R0,0x6c4,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 433: [6a8] LD(R31,0x6e4,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHLH -------------------------------- -L -------------------------------- -------------------------------- // 434: [6ac] BEQ(R0,0x6c4,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 435: [6b0] ADDC(R31,0x0,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 436: [6b4] BNE(R0,0x6c4,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 437: [6b8] ADDC(R31,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHHLL HHLLLLLLLHLHHHHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 438: [6bc] ADDC(R31,0x20,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 439: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 440: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 441: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 442: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 443: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 444: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 445: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 446: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 447: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 448: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 449: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 450: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 451: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 452: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 453: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 454: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 455: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 456: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 457: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 458: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 459: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL -L -------------------------------- -------------------------------- // 460: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 461: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 462: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 463: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL -L -------------------------------- -------------------------------- // 464: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 465: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 466: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 467: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 468: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 469: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 470: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 471: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL -L -------------------------------- -------------------------------- // 472: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 473: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 474: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 475: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL -L -------------------------------- -------------------------------- // 476: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 477: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 478: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 479: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL -L -------------------------------- -------------------------------- // 480: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 481: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 482: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 483: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 484: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 485: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 486: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 487: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 488: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 489: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 490: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 491: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 492: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 493: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 494: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 495: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 496: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 497: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 498: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 499: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 500: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 501: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 502: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 503: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 504: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 505: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 506: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 507: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 508: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 509: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 510: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 511: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 512: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 513: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 514: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 515: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 516: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 517: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 518: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 519: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 520: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 521: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 522: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 523: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 524: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 525: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 526: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 527: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 528: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 529: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 530: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 531: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 532: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 533: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 534: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 535: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 536: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 537: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 538: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 539: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 540: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 541: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 542: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 543: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 544: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 545: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 546: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 547: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 548: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 549: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 550: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 551: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 552: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 553: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 554: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 555: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 556: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 557: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 558: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 559: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 560: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 561: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 562: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 563: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 564: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 565: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 566: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHLLL HHLLLLHHHHHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 567: [6d8] ADDC(R31,0x0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHHLL LHHHLLHHHHHHHHHHHHHHHHHHHHHHHHHL -------------------------------- -L -------------------------------- -------------------------------- // 568: [6dc] BEQ(R31,0x6d8,R31)\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot irq\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\"]]},\\\"/user/test_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/beta/beta\\\",[-128,40,0],{\\\"name\\\":\\\"beta\\\"}],[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 7n CLK=0 tran 8n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/ha\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"/gates/xor2\\\",[-88,-80,0]],[\\\"port\\\",[-120,-80,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-104,-64,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"wire\\\",[-40,-72,0,16,0],{\\\"signal\\\":\\\"S\\\"}],[\\\"wire\\\",[-120,-80,0,0,-40]],[\\\"wire\\\",[-88,-120,0,-32,0]],[\\\"wire\\\",[-120,-80,0,32,0]],[\\\"wire\\\",[-104,-64,0,16,0]],[\\\"wire\\\",[-88,-104,0,-16,0]],[\\\"wire\\\",[-104,-104,0,0,40]],[\\\"wire\\\",[-40,-112,0,16,0],{\\\"signal\\\":\\\"cout\\\"}],[\\\"/gates/and2\\\",[-88,-120,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-24,-8,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[0,32,3],{\\\"name\\\":\\\"Cin\\\"}],[\\\"terminal\\\",[24,0,4],{\\\"name\\\":\\\"S\\\"}],[\\\"terminal\\\",[0,-32,7],{\\\"name\\\":\\\"Cout\\\"}],[\\\"line\\\",[16,-24,0,-32,0]],[\\\"line\\\",[-16,24,0,32,0]],[\\\"text\\\",[-15,-8,0],{\\\"text\\\":\\\"A\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[15,0,0],{\\\"text\\\":\\\"S\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[0,-23,0],{\\\"text\\\":\\\"Cout\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"top-center\\\"}],[\\\"text\\\",[0,23,0],{\\\"text\\\":\\\"Cin\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[0,0,0],{\\\"text\\\":\\\"HA\\\\n\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"line\\\",[-16,-24,0,0,48]],[\\\"line\\\",[16,-24,0,0,48]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B Cin\\\\n.group outputs Cout S\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 LL\\\\n001 LH\\\\n010 LH\\\\n011 HL\\\\n100 LH\\\\n101 HL\\\\n110 HL\\\\n111 HH\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Cin\\\\n.plot Cout\\\\n.plot S\\\\n\\\"]]},\\\"/user/incr\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"wire\\\",[-128,32,0,0,-16],{\\\"signal\\\":\\\"A[31:4]\\\"}],[\\\"wire\\\",[-152,56,0,-16,0],{\\\"signal\\\":\\\"c[32:5]\\\"}],[\\\"wire\\\",[-88,56,0,16,0],{\\\"signal\\\":\\\"c[31:4]\\\"}],[\\\"wire\\\",[-120,80,0,0,16],{\\\"signal\\\":\\\"s[31:4]\\\"}],[\\\"port\\\",[-32,-32,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[64,-48,0],{\\\"signal\\\":\\\"s[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,-32,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/ha\\\",[-120,56,7]],[\\\"jumper\\\",[64,-48,0]],[\\\"wire\\\",[72,-48,0,16,0],{\\\"signal\\\":\\\"s[31:2],0'2\\\"}],[\\\"wire\\\",[104,112,1,16,0],{\\\"signal\\\":\\\"S[2]\\\"}],[\\\"/gates/inverter\\\",[104,80,1]],[\\\"wire\\\",[48,48,0,0,-16],{\\\"signal\\\":\\\"A[3]\\\"}],[\\\"wire\\\",[24,72,0,-16,0],{\\\"signal\\\":\\\"c[4]\\\"}],[\\\"wire\\\",[56,96,0,0,16],{\\\"signal\\\":\\\"s[3]\\\"}],[\\\"/user/ha\\\",[56,72,7]],[\\\"wire\\\",[88,72,0,16,0]],[\\\"wire\\\",[104,80,0,0,-8]],[\\\"wire\\\",[104,72,0,0,-40],{\\\"signal\\\":\\\"A[2]\\\"}],[\\\"jumper\\\",[64,-32,0]],[\\\"wire\\\",[72,-32,0,16,0],{\\\"signal\\\":\\\"c[32]\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"incr\\\\n\\\"}]]},\\\"/user/pc_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]},\\\"test-readonly\\\":{\\\"label\\\":\\\"test-readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"icon\\\":[[\\\"terminal\\\",[-8,8,0],{\\\"name\\\":\\\"ID[15:0]\\\"}],[\\\"terminal\\\",[-8,24,0],{\\\"name\\\":\\\"JT[31:2]\\\"}],[\\\"terminal\\\",[88,24,4],{\\\"name\\\":\\\"PC[31:0]\\\"}],[\\\"text\\\",[40,-3,0],{\\\"text\\\":\\\"PC_v2\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"text\\\",[1,8,0],{\\\"text\\\":\\\"ID[15:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[1,24,0],{\\\"text\\\":\\\"JT[31:2]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[1,56,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[79,24,0],{\\\"text\\\":\\\"PC[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"terminal\\\",[-8,40,0],{\\\"name\\\":\\\"PCSEL[2:0]\\\"}],[\\\"text\\\",[1,40,1],{\\\"text\\\":\\\"PCSEL[2:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[0,76,1,-4,-8]],[\\\"line\\\",[8,72,1,-4,8]],[\\\"terminal\\\",[88,40,4],{\\\"name\\\":\\\"PC_INC[31:0]\\\"}],[\\\"text\\\",[79,40,0],{\\\"text\\\":\\\"PC_INC[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"property\\\",[40,-10,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"terminal\\\",[-8,56,0],{\\\"name\\\":\\\"RESET\\\"}],[\\\"terminal\\\",[-8,72,0],{\\\"name\\\":\\\"CLK\\\"}],[\\\"terminal\\\",[88,56,4],{\\\"name\\\":\\\"PC_OFFSET[31:0]\\\"}],[\\\"text\\\",[79,56,0],{\\\"text\\\":\\\"PC_OFFSET[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"line\\\",[0,-8,0,0,88]],[\\\"line\\\",[0,80,0,80,0]],[\\\"line\\\",[80,80,0,0,-88]],[\\\"line\\\",[80,-8,0,-80,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET PCSEL[2:0] ID[15:0] JT[31:0]\\\\n.group outputs PC[31:0] PC_INC[31:0] PC_OFFSET[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle CLK=0 assert inputs tran 50n CLK=1 tran 49n sample outputs tran 1n\\\\n\\\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\\\n1 100 0000000000000000 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   2: reset, PC==0x80000000\\\\n0 100 1111111111111110 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   3: xadr, PC==0x80000008, offset=-2\\\\n0 011 0111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLHLLLLLLLLLLLLLLHLL //   4: illop, PC==0x80000004, offset=0x7fff\\\\n0 010 0000000000000000 11111111111111111111111111110000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   5: jmp, pc==0XFFFFFFF0\\\\n0 000 1111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   6: inc, pc==0xFFFFFFF4, offset=-1\\\\n0 000 1111111111111110 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   7: inc, pc==0xFFFFFFF8, offset=-1\\\\n0 000 1111111111111101 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   8: inc, pc==0xFFFFFFFC, offset=-1\\\\n0 000 1111111111111100 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   9: inc, pc==0x80000000, offset=-1\\\\n0 010 1000000000000000 01111111111111111111111111111111 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHHHHHHHHHHHHLLLLLLLLLLLLLLLLL //  10: jmp to user mode, PC==0x7FFFFFFC, offset=0x8000\\\\n0 010 1111111111110111 10000111011001010100001100100001 LLLLLHHHLHHLLHLHLHLLLLHHLLHLLLLL LLLLLHHHLHHLLHLHLHLLLLHHLLHLLHLL LLLLLHHHLHHLLHLHLHLLLLHHLLLLLLLL //  11: jmp to super mode?, PC==0x07654320, offset=-9\\\\n0 010 0000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL //  12: jmp, PC==0x0\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL //  13: inc\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL //  14: inc\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL //  15: inc\\\\n0 001 0000000000000010 00000000000000000000000011110000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL //  16: br, offset=3, PC==0x1C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL //  17: inc\\\\n0 010 0000000000000000 00000000000000000000000000111100 LLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL //  18: jmp, PC==0x3C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL //  19: inc\\\\n0 010 0000000000000000 00000000000000000000000001111100 LLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL //  20: jmp, PC==0x7C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL //  21: inc\\\\n0 010 0000000000000000 00000000000000001111111111111100 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL //  22: jmp, PC==0xFFFC\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL //  23: inc\\\\n0 010 0000000000000000 00000000111111111111111111111100 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL //  24: jmp, PC==0xFFFFFC\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL //  25: inc\\\\n0 010 0000000000000000 01111111111111111111111111111100 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  26: jmp, PC==0x7FFFFFFC\\\\n0 000 1111111111111110 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL //  27: inc\\\\n\\\\n.plot CLK\\\\n.plot RESET\\\\n.plot B(PCSEL[2:0])\\\\n.plot X(ID[15:0])\\\\n.plot X(JT[31:0])\\\\n.plot X(PC[31:0])\\\\n.plot X(PC_INC[31:0])\\\\n.plot X(PC_OFFSET[31:0])\\\"]],\\\"schematic\\\":[[\\\"port\\\",[8,-128,0],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[-40,-168,6],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[-216,16,0],{\\\"signal\\\":\\\"ID[15:0]\\\"}],[\\\"port\\\",[-408,-200,0],{\\\"signal\\\":\\\"JT[31:0]\\\"}],[\\\"port\\\",[-160,-208,0],{\\\"signal\\\":\\\"PCSEL[2:0]\\\"}],[\\\"port\\\",[48,-144,4],{\\\"signal\\\":\\\"PC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-112,4],{\\\"signal\\\":\\\"PC_INC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[32,-72,4],{\\\"signal\\\":\\\"PC_OFFSET[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/dreg\\\",[8,-144,0]],[\\\"wire\\\",[-96,-176,6,0,8],{\\\"signal\\\":\\\"pcsel[2]\\\"}],[\\\"/gates/mux2\\\",[-104,-144,6]],[\\\"/gates/mux4\\\",[-144,-184,0]],[\\\"wire\\\",[-128,-160,0,24,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-120,0,0,16],{\\\"signal\\\":\\\"pcsel[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,-136,6]],[\\\"wire\\\",[-48,-136,0,0,24],{\\\"signal\\\":\\\"0x80000000'32\\\"}],[\\\"/user/add32\\\",[-168,-48,0]],[\\\"wire\\\",[-160,-296,0,-16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-200,-48,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"text\\\",[-402,-32,0],{\\\"text\\\":\\\"sign extend and shift:\\\"}],[\\\"wire\\\",[-200,-64,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-144,-184,0,-16,0],{\\\"signal\\\":\\\"0x80000004'32\\\"}],[\\\"wire\\\",[-144,-152,0,-16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"wire\\\",[-104,-144,0,0,16],{\\\"signal\\\":\\\"0x80000008'32\\\"}],[\\\"wire\\\",[-48,-152,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[8,-144,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-200,-32,0,-16,0],{\\\"signal\\\":\\\"id[15]#14,id[15:0],0b00'2\\\"}],[\\\"jumper\\\",[-224,-112,0]],[\\\"wire\\\",[-40,-280,0,16,0],{\\\"signal\\\":\\\"inc[31:0]\\\"}],[\\\"wire\\\",[-80,-32,0,16,0],{\\\"signal\\\":\\\"boff[31:0]\\\"}],[\\\"jumper\\\",[24,-72,0]],[\\\"wire\\\",[24,-72,0,-16,0],{\\\"signal\\\":\\\"pc[31],boff[30:0]\\\"}],[\\\"wire\\\",[-224,-112,0,-8,0]],[\\\"wire\\\",[-232,-112,0,0,-24]],[\\\"wire\\\",[-144,-136,0,-88,0],{\\\"signal\\\":\\\"pc[31],inc[30:0]\\\"}],[\\\"/gates/and2\\\",[-440,-240,0]],[\\\"wire\\\",[-440,-240,0,-16,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-440,-224,0,-16,0],{\\\"signal\\\":\\\"jt[31]\\\"}],[\\\"wire\\\",[-392,-232,0,16,0],{\\\"signal\\\":\\\"supnext\\\"}],[\\\"wire\\\",[-144,-168,0,-16,0],{\\\"signal\\\":\\\"supnext,jt[30:2],0b00'2\\\"}],[\\\"text\\\",[-109,-198,0],{\\\"text\\\":\\\"map 0b1xx to IRQ\\\"}],[\\\"text\\\",[-52,-63,0],{\\\"text\\\":\\\"guard sbit\\\"}],[\\\"text\\\",[-377,-222,0],{\\\"text\\\":\\\"calc next sbit\\\"}],[\\\"text\\\",[-373,-168,0],{\\\"text\\\":\\\"guard sbit, word align address:\\\"}],[\\\"text\\\",[-357,-135,0],{\\\"text\\\":\\\"guard sbit (supervisor bit):\\\"}],[\\\"/user/incr\\\",[-128,-296,0]],[\\\"text\\\",[-387,-312,0],{\\\"text\\\":\\\"v2: incrementer\\\"}]]},\\\"/user/beta_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-232,-448,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-360,-392,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-104,-312,4],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/ctl\\\",[-368,-216,0]],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/alu/alu\\\",[-168,-200,1]],[\\\"/gates/mux2\\\",[-208,-272,7]],[\\\"/gates/mux2\\\",[-144,-272,7]],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-144,-272,0,0,-16],{\\\"signal\\\":\\\"id[15]#16,id[15:0]\\\"}],[\\\"wire\\\",[-112,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-152,-232,0,16,0]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"id[15:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1]],[\\\"/gates/mux2\\\",[-160,-136,1]],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"jumper\\\",[-368,-392,0]],[\\\"wire\\\",[-368,-392,0,-32,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"wire\\\",[-104,-272,0,0,-40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-128,-320,0,24,0]],[\\\"wire\\\",[-104,-320,0,0,8]],[\\\"wire\\\",[-128,-272,0,24,0]],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]],[\\\"/user/pc_v2\\\",[-488,-416,0]]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-32,-32,0],{\\\"name\\\":\\\"mrd[31:0]\\\"}],[\\\"terminal\\\",[-32,-48,0],{\\\"name\\\":\\\"id[31:0]\\\"}],[\\\"text\\\",[-23,-48,0],{\\\"text\\\":\\\"ID[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-32,0],{\\\"text\\\":\\\"MRD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[-16,16,0,-8,4]],[\\\"line\\\",[-16,16,0,-8,-4]],[\\\"terminal\\\",[64,-48,4],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[55,-48,4],{\\\"text\\\":\\\"IA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-32,4],{\\\"name\\\":\\\"ma[31:0]\\\"}],[\\\"text\\\",[55,-32,4],{\\\"text\\\":\\\"MA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"moe\\\"}],[\\\"text\\\",[55,-16,4],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,0,4],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[55,0,4],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,16,4],{\\\"name\\\":\\\"mwd[31:0]\\\"}],[\\\"text\\\",[55,16,4],{\\\"text\\\":\\\"MWD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[16,-59,0],{\\\"text\\\":\\\"BETA_v2\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-64,0,0,88]],[\\\"line\\\",[-24,24,0,80,0]],[\\\"line\\\",[56,24,0,0,-88]],[\\\"line\\\",[56,-64,0,-80,0]],[\\\"property\\\",[16,-66,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}]]},\\\"/user/test_v3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"/user/beta_v2\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 7n CLK=0 tran 8n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/ctl_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"test-readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"icon\\\":[[\\\"terminal\\\",[-56,-8,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-56,8,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-56,24,0],{\\\"name\\\":\\\"z\\\"}],[\\\"terminal\\\",[-56,-24,0],{\\\"name\\\":\\\"op[5:0]\\\"}],[\\\"terminal\\\",[24,72,2],{\\\"name\\\":\\\"ra2sel\\\"}],[\\\"terminal\\\",[24,-8,2],{\\\"name\\\":\\\"asel\\\"}],[\\\"terminal\\\",[24,8,2],{\\\"name\\\":\\\"bsel\\\"}],[\\\"terminal\\\",[24,-24,2],{\\\"name\\\":\\\"alufn[5:0]\\\"}],[\\\"terminal\\\",[24,104,2],{\\\"name\\\":\\\"wdsel[1:0]\\\"}],[\\\"terminal\\\",[24,88,2],{\\\"name\\\":\\\"wasel\\\"}],[\\\"terminal\\\",[24,120,2],{\\\"name\\\":\\\"werf\\\"}],[\\\"terminal\\\",[24,56,2],{\\\"name\\\":\\\"pcsel[2:0]\\\"}],[\\\"terminal\\\",[24,24,2],{\\\"name\\\":\\\"moe\\\"}],[\\\"terminal\\\",[24,40,2],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[-47,-24,0],{\\\"text\\\":\\\"OP[5:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-47,-8,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-47,8,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-47,24,0],{\\\"text\\\":\\\"Z\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[15,72,0],{\\\"text\\\":\\\"RA2SEL\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,-8,0],{\\\"text\\\":\\\"ASEL\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,8,0],{\\\"text\\\":\\\"BSEL\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,-24,0],{\\\"text\\\":\\\"ALUFN[5:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,104,0],{\\\"text\\\":\\\"WDSEL[1:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,88,0],{\\\"text\\\":\\\"WASEL\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,120,0],{\\\"text\\\":\\\"WERF\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,56,0],{\\\"text\\\":\\\"PCSEL[2:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,24,0],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[15,40,0],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[-16,-35,0],{\\\"text\\\":\\\"CTL_v2\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-48,-40,0,0,168]],[\\\"line\\\",[-48,128,0,64,0]],[\\\"line\\\",[16,128,0,0,-168]],[\\\"line\\\",[16,-40,0,-64,0]],[\\\"property\\\",[-16,-42,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs OP[5:0] RESET IRQ Z\\\\n.group outputs ALUFN[5:0] ASEL BSEL MOE MWR PCSEL[2:0] RA2SEL WASEL WDSEL[1:0] WERF\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n000000 000 ------ -- -L LHH - HLLH //   1: op=0b000000 ???\\\\n000000 001 ------ -- -L LHH - HLLH //   2: op=0b000000 ???\\\\n000000 010 ------ -- -L HLL - HLLH //   3: op=0b000000 ???\\\\n000000 011 ------ -- -L HLL - HLLH //   4: op=0b000000 ???\\\\n000000 100 ------ -- -L --- - ---- //   5: op=0b000000 ???\\\\n000000 101 ------ -- -L --- - ---- //   6: op=0b000000 ???\\\\n000000 110 ------ -- -L --- - ---- //   7: op=0b000000 ???\\\\n000000 111 ------ -- -L --- - ---- //   8: op=0b000000 ???\\\\n000001 000 ------ -- -L LHH - HLLH //   9: op=0b000001 ???\\\\n000001 001 ------ -- -L LHH - HLLH //  10: op=0b000001 ???\\\\n000001 010 ------ -- -L HLL - HLLH //  11: op=0b000001 ???\\\\n000001 011 ------ -- -L HLL - HLLH //  12: op=0b000001 ???\\\\n000001 100 ------ -- -L --- - ---- //  13: op=0b000001 ???\\\\n000001 101 ------ -- -L --- - ---- //  14: op=0b000001 ???\\\\n000001 110 ------ -- -L --- - ---- //  15: op=0b000001 ???\\\\n000001 111 ------ -- -L --- - ---- //  16: op=0b000001 ???\\\\n000010 000 ------ -- -L LHH - HLLH //  17: op=0b000010 ???\\\\n000010 001 ------ -- -L LHH - HLLH //  18: op=0b000010 ???\\\\n000010 010 ------ -- -L HLL - HLLH //  19: op=0b000010 ???\\\\n000010 011 ------ -- -L HLL - HLLH //  20: op=0b000010 ???\\\\n000010 100 ------ -- -L --- - ---- //  21: op=0b000010 ???\\\\n000010 101 ------ -- -L --- - ---- //  22: op=0b000010 ???\\\\n000010 110 ------ -- -L --- - ---- //  23: op=0b000010 ???\\\\n000010 111 ------ -- -L --- - ---- //  24: op=0b000010 ???\\\\n000011 000 ------ -- -L LHH - HLLH //  25: op=0b000011 ???\\\\n000011 001 ------ -- -L LHH - HLLH //  26: op=0b000011 ???\\\\n000011 010 ------ -- -L HLL - HLLH //  27: op=0b000011 ???\\\\n000011 011 ------ -- -L HLL - HLLH //  28: op=0b000011 ???\\\\n000011 100 ------ -- -L --- - ---- //  29: op=0b000011 ???\\\\n000011 101 ------ -- -L --- - ---- //  30: op=0b000011 ???\\\\n000011 110 ------ -- -L --- - ---- //  31: op=0b000011 ???\\\\n000011 111 ------ -- -L --- - ---- //  32: op=0b000011 ???\\\\n000100 000 ------ -- -L LHH - HLLH //  33: op=0b000100 ???\\\\n000100 001 ------ -- -L LHH - HLLH //  34: op=0b000100 ???\\\\n000100 010 ------ -- -L HLL - HLLH //  35: op=0b000100 ???\\\\n000100 011 ------ -- -L HLL - HLLH //  36: op=0b000100 ???\\\\n000100 100 ------ -- -L --- - ---- //  37: op=0b000100 ???\\\\n000100 101 ------ -- -L --- - ---- //  38: op=0b000100 ???\\\\n000100 110 ------ -- -L --- - ---- //  39: op=0b000100 ???\\\\n000100 111 ------ -- -L --- - ---- //  40: op=0b000100 ???\\\\n000101 000 ------ -- -L LHH - HLLH //  41: op=0b000101 ???\\\\n000101 001 ------ -- -L LHH - HLLH //  42: op=0b000101 ???\\\\n000101 010 ------ -- -L HLL - HLLH //  43: op=0b000101 ???\\\\n000101 011 ------ -- -L HLL - HLLH //  44: op=0b000101 ???\\\\n000101 100 ------ -- -L --- - ---- //  45: op=0b000101 ???\\\\n000101 101 ------ -- -L --- - ---- //  46: op=0b000101 ???\\\\n000101 110 ------ -- -L --- - ---- //  47: op=0b000101 ???\\\\n000101 111 ------ -- -L --- - ---- //  48: op=0b000101 ???\\\\n000110 000 ------ -- -L LHH - HLLH //  49: op=0b000110 ???\\\\n000110 001 ------ -- -L LHH - HLLH //  50: op=0b000110 ???\\\\n000110 010 ------ -- -L HLL - HLLH //  51: op=0b000110 ???\\\\n000110 011 ------ -- -L HLL - HLLH //  52: op=0b000110 ???\\\\n000110 100 ------ -- -L --- - ---- //  53: op=0b000110 ???\\\\n000110 101 ------ -- -L --- - ---- //  54: op=0b000110 ???\\\\n000110 110 ------ -- -L --- - ---- //  55: op=0b000110 ???\\\\n000110 111 ------ -- -L --- - ---- //  56: op=0b000110 ???\\\\n000111 000 ------ -- -L LHH - HLLH //  57: op=0b000111 ???\\\\n000111 001 ------ -- -L LHH - HLLH //  58: op=0b000111 ???\\\\n000111 010 ------ -- -L HLL - HLLH //  59: op=0b000111 ???\\\\n000111 011 ------ -- -L HLL - HLLH //  60: op=0b000111 ???\\\\n000111 100 ------ -- -L --- - ---- //  61: op=0b000111 ???\\\\n000111 101 ------ -- -L --- - ---- //  62: op=0b000111 ???\\\\n000111 110 ------ -- -L --- - ---- //  63: op=0b000111 ???\\\\n000111 111 ------ -- -L --- - ---- //  64: op=0b000111 ???\\\\n001000 000 ------ -- -L LHH - HLLH //  65: op=0b001000 ???\\\\n001000 001 ------ -- -L LHH - HLLH //  66: op=0b001000 ???\\\\n001000 010 ------ -- -L HLL - HLLH //  67: op=0b001000 ???\\\\n001000 011 ------ -- -L HLL - HLLH //  68: op=0b001000 ???\\\\n001000 100 ------ -- -L --- - ---- //  69: op=0b001000 ???\\\\n001000 101 ------ -- -L --- - ---- //  70: op=0b001000 ???\\\\n001000 110 ------ -- -L --- - ---- //  71: op=0b001000 ???\\\\n001000 111 ------ -- -L --- - ---- //  72: op=0b001000 ???\\\\n001001 000 ------ -- -L LHH - HLLH //  73: op=0b001001 ???\\\\n001001 001 ------ -- -L LHH - HLLH //  74: op=0b001001 ???\\\\n001001 010 ------ -- -L HLL - HLLH //  75: op=0b001001 ???\\\\n001001 011 ------ -- -L HLL - HLLH //  76: op=0b001001 ???\\\\n001001 100 ------ -- -L --- - ---- //  77: op=0b001001 ???\\\\n001001 101 ------ -- -L --- - ---- //  78: op=0b001001 ???\\\\n001001 110 ------ -- -L --- - ---- //  79: op=0b001001 ???\\\\n001001 111 ------ -- -L --- - ---- //  80: op=0b001001 ???\\\\n001010 000 ------ -- -L LHH - HLLH //  81: op=0b001010 ???\\\\n001010 001 ------ -- -L LHH - HLLH //  82: op=0b001010 ???\\\\n001010 010 ------ -- -L HLL - HLLH //  83: op=0b001010 ???\\\\n001010 011 ------ -- -L HLL - HLLH //  84: op=0b001010 ???\\\\n001010 100 ------ -- -L --- - ---- //  85: op=0b001010 ???\\\\n001010 101 ------ -- -L --- - ---- //  86: op=0b001010 ???\\\\n001010 110 ------ -- -L --- - ---- //  87: op=0b001010 ???\\\\n001010 111 ------ -- -L --- - ---- //  88: op=0b001010 ???\\\\n001011 000 ------ -- -L LHH - HLLH //  89: op=0b001011 ???\\\\n001011 001 ------ -- -L LHH - HLLH //  90: op=0b001011 ???\\\\n001011 010 ------ -- -L HLL - HLLH //  91: op=0b001011 ???\\\\n001011 011 ------ -- -L HLL - HLLH //  92: op=0b001011 ???\\\\n001011 100 ------ -- -L --- - ---- //  93: op=0b001011 ???\\\\n001011 101 ------ -- -L --- - ---- //  94: op=0b001011 ???\\\\n001011 110 ------ -- -L --- - ---- //  95: op=0b001011 ???\\\\n001011 111 ------ -- -L --- - ---- //  96: op=0b001011 ???\\\\n001100 000 ------ -- -L LHH - HLLH //  97: op=0b001100 ???\\\\n001100 001 ------ -- -L LHH - HLLH //  98: op=0b001100 ???\\\\n001100 010 ------ -- -L HLL - HLLH //  99: op=0b001100 ???\\\\n001100 011 ------ -- -L HLL - HLLH // 100: op=0b001100 ???\\\\n001100 100 ------ -- -L --- - ---- // 101: op=0b001100 ???\\\\n001100 101 ------ -- -L --- - ---- // 102: op=0b001100 ???\\\\n001100 110 ------ -- -L --- - ---- // 103: op=0b001100 ???\\\\n001100 111 ------ -- -L --- - ---- // 104: op=0b001100 ???\\\\n001101 000 ------ -- -L LHH - HLLH // 105: op=0b001101 ???\\\\n001101 001 ------ -- -L LHH - HLLH // 106: op=0b001101 ???\\\\n001101 010 ------ -- -L HLL - HLLH // 107: op=0b001101 ???\\\\n001101 011 ------ -- -L HLL - HLLH // 108: op=0b001101 ???\\\\n001101 100 ------ -- -L --- - ---- // 109: op=0b001101 ???\\\\n001101 101 ------ -- -L --- - ---- // 110: op=0b001101 ???\\\\n001101 110 ------ -- -L --- - ---- // 111: op=0b001101 ???\\\\n001101 111 ------ -- -L --- - ---- // 112: op=0b001101 ???\\\\n001110 000 ------ -- -L LHH - HLLH // 113: op=0b001110 ???\\\\n001110 001 ------ -- -L LHH - HLLH // 114: op=0b001110 ???\\\\n001110 010 ------ -- -L HLL - HLLH // 115: op=0b001110 ???\\\\n001110 011 ------ -- -L HLL - HLLH // 116: op=0b001110 ???\\\\n001110 100 ------ -- -L --- - ---- // 117: op=0b001110 ???\\\\n001110 101 ------ -- -L --- - ---- // 118: op=0b001110 ???\\\\n001110 110 ------ -- -L --- - ---- // 119: op=0b001110 ???\\\\n001110 111 ------ -- -L --- - ---- // 120: op=0b001110 ???\\\\n001111 000 ------ -- -L LHH - HLLH // 121: op=0b001111 ???\\\\n001111 001 ------ -- -L LHH - HLLH // 122: op=0b001111 ???\\\\n001111 010 ------ -- -L HLL - HLLH // 123: op=0b001111 ???\\\\n001111 011 ------ -- -L HLL - HLLH // 124: op=0b001111 ???\\\\n001111 100 ------ -- -L --- - ---- // 125: op=0b001111 ???\\\\n001111 101 ------ -- -L --- - ---- // 126: op=0b001111 ???\\\\n001111 110 ------ -- -L --- - ---- // 127: op=0b001111 ???\\\\n001111 111 ------ -- -L --- - ---- // 128: op=0b001111 ???\\\\n010000 000 ------ -- -L LHH - HLLH // 129: op=0b010000 ???\\\\n010000 001 ------ -- -L LHH - HLLH // 130: op=0b010000 ???\\\\n010000 010 ------ -- -L HLL - HLLH // 131: op=0b010000 ???\\\\n010000 011 ------ -- -L HLL - HLLH // 132: op=0b010000 ???\\\\n010000 100 ------ -- -L --- - ---- // 133: op=0b010000 ???\\\\n010000 101 ------ -- -L --- - ---- // 134: op=0b010000 ???\\\\n010000 110 ------ -- -L --- - ---- // 135: op=0b010000 ???\\\\n010000 111 ------ -- -L --- - ---- // 136: op=0b010000 ???\\\\n010001 000 ------ -- -L LHH - HLLH // 137: op=0b010001 ???\\\\n010001 001 ------ -- -L LHH - HLLH // 138: op=0b010001 ???\\\\n010001 010 ------ -- -L HLL - HLLH // 139: op=0b010001 ???\\\\n010001 011 ------ -- -L HLL - HLLH // 140: op=0b010001 ???\\\\n010001 100 ------ -- -L --- - ---- // 141: op=0b010001 ???\\\\n010001 101 ------ -- -L --- - ---- // 142: op=0b010001 ???\\\\n010001 110 ------ -- -L --- - ---- // 143: op=0b010001 ???\\\\n010001 111 ------ -- -L --- - ---- // 144: op=0b010001 ???\\\\n010010 000 ------ -- -L LHH - HLLH // 145: op=0b010010 ???\\\\n010010 001 ------ -- -L LHH - HLLH // 146: op=0b010010 ???\\\\n010010 010 ------ -- -L HLL - HLLH // 147: op=0b010010 ???\\\\n010010 011 ------ -- -L HLL - HLLH // 148: op=0b010010 ???\\\\n010010 100 ------ -- -L --- - ---- // 149: op=0b010010 ???\\\\n010010 101 ------ -- -L --- - ---- // 150: op=0b010010 ???\\\\n010010 110 ------ -- -L --- - ---- // 151: op=0b010010 ???\\\\n010010 111 ------ -- -L --- - ---- // 152: op=0b010010 ???\\\\n010011 000 ------ -- -L LHH - HLLH // 153: op=0b010011 ???\\\\n010011 001 ------ -- -L LHH - HLLH // 154: op=0b010011 ???\\\\n010011 010 ------ -- -L HLL - HLLH // 155: op=0b010011 ???\\\\n010011 011 ------ -- -L HLL - HLLH // 156: op=0b010011 ???\\\\n010011 100 ------ -- -L --- - ---- // 157: op=0b010011 ???\\\\n010011 101 ------ -- -L --- - ---- // 158: op=0b010011 ???\\\\n010011 110 ------ -- -L --- - ---- // 159: op=0b010011 ???\\\\n010011 111 ------ -- -L --- - ---- // 160: op=0b010011 ???\\\\n010100 000 ------ -- -L LHH - HLLH // 161: op=0b010100 ???\\\\n010100 001 ------ -- -L LHH - HLLH // 162: op=0b010100 ???\\\\n010100 010 ------ -- -L HLL - HLLH // 163: op=0b010100 ???\\\\n010100 011 ------ -- -L HLL - HLLH // 164: op=0b010100 ???\\\\n010100 100 ------ -- -L --- - ---- // 165: op=0b010100 ???\\\\n010100 101 ------ -- -L --- - ---- // 166: op=0b010100 ???\\\\n010100 110 ------ -- -L --- - ---- // 167: op=0b010100 ???\\\\n010100 111 ------ -- -L --- - ---- // 168: op=0b010100 ???\\\\n010101 000 ------ -- -L LHH - HLLH // 169: op=0b010101 ???\\\\n010101 001 ------ -- -L LHH - HLLH // 170: op=0b010101 ???\\\\n010101 010 ------ -- -L HLL - HLLH // 171: op=0b010101 ???\\\\n010101 011 ------ -- -L HLL - HLLH // 172: op=0b010101 ???\\\\n010101 100 ------ -- -L --- - ---- // 173: op=0b010101 ???\\\\n010101 101 ------ -- -L --- - ---- // 174: op=0b010101 ???\\\\n010101 110 ------ -- -L --- - ---- // 175: op=0b010101 ???\\\\n010101 111 ------ -- -L --- - ---- // 176: op=0b010101 ???\\\\n010110 000 ------ -- -L LHH - HLLH // 177: op=0b010110 ???\\\\n010110 001 ------ -- -L LHH - HLLH // 178: op=0b010110 ???\\\\n010110 010 ------ -- -L HLL - HLLH // 179: op=0b010110 ???\\\\n010110 011 ------ -- -L HLL - HLLH // 180: op=0b010110 ???\\\\n010110 100 ------ -- -L --- - ---- // 181: op=0b010110 ???\\\\n010110 101 ------ -- -L --- - ---- // 182: op=0b010110 ???\\\\n010110 110 ------ -- -L --- - ---- // 183: op=0b010110 ???\\\\n010110 111 ------ -- -L --- - ---- // 184: op=0b010110 ???\\\\n010111 000 ------ -- -L LHH - HLLH // 185: op=0b010111 ???\\\\n010111 001 ------ -- -L LHH - HLLH // 186: op=0b010111 ???\\\\n010111 010 ------ -- -L HLL - HLLH // 187: op=0b010111 ???\\\\n010111 011 ------ -- -L HLL - HLLH // 188: op=0b010111 ???\\\\n010111 100 ------ -- -L --- - ---- // 189: op=0b010111 ???\\\\n010111 101 ------ -- -L --- - ---- // 190: op=0b010111 ???\\\\n010111 110 ------ -- -L --- - ---- // 191: op=0b010111 ???\\\\n010111 111 ------ -- -L --- - ---- // 192: op=0b010111 ???\\\\n011000 000 LHLLLL LH HL LLL - LHLH // 193: op=0b011000 LD\\\\n011000 001 LHLLLL LH HL LLL - LHLH // 194: op=0b011000 LD\\\\n011000 010 ------ -- -L HLL - HLLH // 195: op=0b011000 LD\\\\n011000 011 ------ -- -L HLL - HLLH // 196: op=0b011000 LD\\\\n011000 100 ------ -- -L --- - ---- // 197: op=0b011000 LD\\\\n011000 101 ------ -- -L --- - ---- // 198: op=0b011000 LD\\\\n011000 110 ------ -- -L --- - ---- // 199: op=0b011000 LD\\\\n011000 111 ------ -- -L --- - ---- // 200: op=0b011000 LD\\\\n011001 000 LHLLLL LH LH LLL H ---L // 201: op=0b011001 ST\\\\n011001 001 LHLLLL LH LH LLL H ---L // 202: op=0b011001 ST\\\\n011001 010 ------ -- -L HLL - HLLH // 203: op=0b011001 ST\\\\n011001 011 ------ -- -L HLL - HLLH // 204: op=0b011001 ST\\\\n011001 100 ------ -- -L --- - ---- // 205: op=0b011001 ST\\\\n011001 101 ------ -- -L --- - ---- // 206: op=0b011001 ST\\\\n011001 110 ------ -- -L --- - ---- // 207: op=0b011001 ST\\\\n011001 111 ------ -- -L --- - ---- // 208: op=0b011001 ST\\\\n011010 000 ------ -- -L LHH - HLLH // 209: op=0b011010 ???\\\\n011010 001 ------ -- -L LHH - HLLH // 210: op=0b011010 ???\\\\n011010 010 ------ -- -L HLL - HLLH // 211: op=0b011010 ???\\\\n011010 011 ------ -- -L HLL - HLLH // 212: op=0b011010 ???\\\\n011010 100 ------ -- -L --- - ---- // 213: op=0b011010 ???\\\\n011010 101 ------ -- -L --- - ---- // 214: op=0b011010 ???\\\\n011010 110 ------ -- -L --- - ---- // 215: op=0b011010 ???\\\\n011010 111 ------ -- -L --- - ---- // 216: op=0b011010 ???\\\\n011011 000 ------ -- -L LHL - LLLH // 217: op=0b011011 JMP\\\\n011011 001 ------ -- -L LHL - LLLH // 218: op=0b011011 JMP\\\\n011011 010 ------ -- -L HLL - HLLH // 219: op=0b011011 JMP\\\\n011011 011 ------ -- -L HLL - HLLH // 220: op=0b011011 JMP\\\\n011011 100 ------ -- -L --- - ---- // 221: op=0b011011 JMP\\\\n011011 101 ------ -- -L --- - ---- // 222: op=0b011011 JMP\\\\n011011 110 ------ -- -L --- - ---- // 223: op=0b011011 JMP\\\\n011011 111 ------ -- -L --- - ---- // 224: op=0b011011 JMP\\\\n011100 000 ------ -- -L LLL - LLLH // 225: op=0b011100 BEQ\\\\n011100 001 ------ -- -L LLH - LLLH // 226: op=0b011100 BEQ\\\\n011100 010 ------ -- -L HLL - HLLH // 227: op=0b011100 BEQ\\\\n011100 011 ------ -- -L HLL - HLLH // 228: op=0b011100 BEQ\\\\n011100 100 ------ -- -L --- - ---- // 229: op=0b011100 BEQ\\\\n011100 101 ------ -- -L --- - ---- // 230: op=0b011100 BEQ\\\\n011100 110 ------ -- -L --- - ---- // 231: op=0b011100 BEQ\\\\n011100 111 ------ -- -L --- - ---- // 232: op=0b011100 BEQ\\\\n011101 000 ------ -- -L LLH - LLLH // 233: op=0b011101 BNE\\\\n011101 001 ------ -- -L LLL - LLLH // 234: op=0b011101 BNE\\\\n011101 010 ------ -- -L HLL - HLLH // 235: op=0b011101 BNE\\\\n011101 011 ------ -- -L HLL - HLLH // 236: op=0b011101 BNE\\\\n011101 100 ------ -- -L --- - ---- // 237: op=0b011101 BNE\\\\n011101 101 ------ -- -L --- - ---- // 238: op=0b011101 BNE\\\\n011101 110 ------ -- -L --- - ---- // 239: op=0b011101 BNE\\\\n011101 111 ------ -- -L --- - ---- // 240: op=0b011101 BNE\\\\n011110 000 ------ -- -L LHH - HLLH // 241: op=0b011110 ???\\\\n011110 001 ------ -- -L LHH - HLLH // 242: op=0b011110 ???\\\\n011110 010 ------ -- -L HLL - HLLH // 243: op=0b011110 ???\\\\n011110 011 ------ -- -L HLL - HLLH // 244: op=0b011110 ???\\\\n011110 100 ------ -- -L --- - ---- // 245: op=0b011110 ???\\\\n011110 101 ------ -- -L --- - ---- // 246: op=0b011110 ???\\\\n011110 110 ------ -- -L --- - ---- // 247: op=0b011110 ???\\\\n011110 111 ------ -- -L --- - ---- // 248: op=0b011110 ???\\\\n011111 000 HLHLHL H- HL LLL - LHLH // 249: op=0b011111 LDR\\\\n011111 001 HLHLHL H- HL LLL - LHLH // 250: op=0b011111 LDR\\\\n011111 010 ------ -- -L HLL - HLLH // 251: op=0b011111 LDR\\\\n011111 011 ------ -- -L HLL - HLLH // 252: op=0b011111 LDR\\\\n011111 100 ------ -- -L --- - ---- // 253: op=0b011111 LDR\\\\n011111 101 ------ -- -L --- - ---- // 254: op=0b011111 LDR\\\\n011111 110 ------ -- -L --- - ---- // 255: op=0b011111 LDR\\\\n011111 111 ------ -- -L --- - ---- // 256: op=0b011111 LDR\\\\n100000 000 LHLLLL LL -L LLL L LLHH // 257: op=0b100000 ADD\\\\n100000 001 LHLLLL LL -L LLL L LLHH // 258: op=0b100000 ADD\\\\n100000 010 ------ -- -L HLL - HLLH // 259: op=0b100000 ADD\\\\n100000 011 ------ -- -L HLL - HLLH // 260: op=0b100000 ADD\\\\n100000 100 ------ -- -L --- - ---- // 261: op=0b100000 ADD\\\\n100000 101 ------ -- -L --- - ---- // 262: op=0b100000 ADD\\\\n100000 110 ------ -- -L --- - ---- // 263: op=0b100000 ADD\\\\n100000 111 ------ -- -L --- - ---- // 264: op=0b100000 ADD\\\\n100001 000 LHLLLH LL -L LLL L LLHH // 265: op=0b100001 SUB\\\\n100001 001 LHLLLH LL -L LLL L LLHH // 266: op=0b100001 SUB\\\\n100001 010 ------ -- -L HLL - HLLH // 267: op=0b100001 SUB\\\\n100001 011 ------ -- -L HLL - HLLH // 268: op=0b100001 SUB\\\\n100001 100 ------ -- -L --- - ---- // 269: op=0b100001 SUB\\\\n100001 101 ------ -- -L --- - ---- // 270: op=0b100001 SUB\\\\n100001 110 ------ -- -L --- - ---- // 271: op=0b100001 SUB\\\\n100001 111 ------ -- -L --- - ---- // 272: op=0b100001 SUB\\\\n100010 000 ------ -- -L LHH - HLLH // 273: op=0b100010 MUL\\\\n100010 001 ------ -- -L LHH - HLLH // 274: op=0b100010 MUL\\\\n100010 010 ------ -- -L HLL - HLLH // 275: op=0b100010 MUL\\\\n100010 011 ------ -- -L HLL - HLLH // 276: op=0b100010 MUL\\\\n100010 100 ------ -- -L --- - ---- // 277: op=0b100010 MUL\\\\n100010 101 ------ -- -L --- - ---- // 278: op=0b100010 MUL\\\\n100010 110 ------ -- -L --- - ---- // 279: op=0b100010 MUL\\\\n100010 111 ------ -- -L --- - ---- // 280: op=0b100010 MUL\\\\n100011 000 ------ -- -L LHH - HLLH // 281: op=0b100011 DIV\\\\n100011 001 ------ -- -L LHH - HLLH // 282: op=0b100011 DIV\\\\n100011 010 ------ -- -L HLL - HLLH // 283: op=0b100011 DIV\\\\n100011 011 ------ -- -L HLL - HLLH // 284: op=0b100011 DIV\\\\n100011 100 ------ -- -L --- - ---- // 285: op=0b100011 DIV\\\\n100011 101 ------ -- -L --- - ---- // 286: op=0b100011 DIV\\\\n100011 110 ------ -- -L --- - ---- // 287: op=0b100011 DIV\\\\n100011 111 ------ -- -L --- - ---- // 288: op=0b100011 DIV\\\\n100100 000 LLLLHH LL -L LLL L LLHH // 289: op=0b100100 CMPEQ\\\\n100100 001 LLLLHH LL -L LLL L LLHH // 290: op=0b100100 CMPEQ\\\\n100100 010 ------ -- -L HLL - HLLH // 291: op=0b100100 CMPEQ\\\\n100100 011 ------ -- -L HLL - HLLH // 292: op=0b100100 CMPEQ\\\\n100100 100 ------ -- -L --- - ---- // 293: op=0b100100 CMPEQ\\\\n100100 101 ------ -- -L --- - ---- // 294: op=0b100100 CMPEQ\\\\n100100 110 ------ -- -L --- - ---- // 295: op=0b100100 CMPEQ\\\\n100100 111 ------ -- -L --- - ---- // 296: op=0b100100 CMPEQ\\\\n100101 000 LLLHLH LL -L LLL L LLHH // 297: op=0b100101 CMPLT\\\\n100101 001 LLLHLH LL -L LLL L LLHH // 298: op=0b100101 CMPLT\\\\n100101 010 ------ -- -L HLL - HLLH // 299: op=0b100101 CMPLT\\\\n100101 011 ------ -- -L HLL - HLLH // 300: op=0b100101 CMPLT\\\\n100101 100 ------ -- -L --- - ---- // 301: op=0b100101 CMPLT\\\\n100101 101 ------ -- -L --- - ---- // 302: op=0b100101 CMPLT\\\\n100101 110 ------ -- -L --- - ---- // 303: op=0b100101 CMPLT\\\\n100101 111 ------ -- -L --- - ---- // 304: op=0b100101 CMPLT\\\\n100110 000 LLLHHH LL -L LLL L LLHH // 305: op=0b100110 CMPLE\\\\n100110 001 LLLHHH LL -L LLL L LLHH // 306: op=0b100110 CMPLE\\\\n100110 010 ------ -- -L HLL - HLLH // 307: op=0b100110 CMPLE\\\\n100110 011 ------ -- -L HLL - HLLH // 308: op=0b100110 CMPLE\\\\n100110 100 ------ -- -L --- - ---- // 309: op=0b100110 CMPLE\\\\n100110 101 ------ -- -L --- - ---- // 310: op=0b100110 CMPLE\\\\n100110 110 ------ -- -L --- - ---- // 311: op=0b100110 CMPLE\\\\n100110 111 ------ -- -L --- - ---- // 312: op=0b100110 CMPLE\\\\n100111 000 ------ -- -L LHH - HLLH // 313: op=0b100111 ???\\\\n100111 001 ------ -- -L LHH - HLLH // 314: op=0b100111 ???\\\\n100111 010 ------ -- -L HLL - HLLH // 315: op=0b100111 ???\\\\n100111 011 ------ -- -L HLL - HLLH // 316: op=0b100111 ???\\\\n100111 100 ------ -- -L --- - ---- // 317: op=0b100111 ???\\\\n100111 101 ------ -- -L --- - ---- // 318: op=0b100111 ???\\\\n100111 110 ------ -- -L --- - ---- // 319: op=0b100111 ???\\\\n100111 111 ------ -- -L --- - ---- // 320: op=0b100111 ???\\\\n101000 000 HLHLLL LL -L LLL L LLHH // 321: op=0b101000 AND\\\\n101000 001 HLHLLL LL -L LLL L LLHH // 322: op=0b101000 AND\\\\n101000 010 ------ -- -L HLL - HLLH // 323: op=0b101000 AND\\\\n101000 011 ------ -- -L HLL - HLLH // 324: op=0b101000 AND\\\\n101000 100 ------ -- -L --- - ---- // 325: op=0b101000 AND\\\\n101000 101 ------ -- -L --- - ---- // 326: op=0b101000 AND\\\\n101000 110 ------ -- -L --- - ---- // 327: op=0b101000 AND\\\\n101000 111 ------ -- -L --- - ---- // 328: op=0b101000 AND\\\\n101001 000 HLHHHL LL -L LLL L LLHH // 329: op=0b101001 OR\\\\n101001 001 HLHHHL LL -L LLL L LLHH // 330: op=0b101001 OR\\\\n101001 010 ------ -- -L HLL - HLLH // 331: op=0b101001 OR\\\\n101001 011 ------ -- -L HLL - HLLH // 332: op=0b101001 OR\\\\n101001 100 ------ -- -L --- - ---- // 333: op=0b101001 OR\\\\n101001 101 ------ -- -L --- - ---- // 334: op=0b101001 OR\\\\n101001 110 ------ -- -L --- - ---- // 335: op=0b101001 OR\\\\n101001 111 ------ -- -L --- - ---- // 336: op=0b101001 OR\\\\n101010 000 HLLHHL LL -L LLL L LLHH // 337: op=0b101010 XOR\\\\n101010 001 HLLHHL LL -L LLL L LLHH // 338: op=0b101010 XOR\\\\n101010 010 ------ -- -L HLL - HLLH // 339: op=0b101010 XOR\\\\n101010 011 ------ -- -L HLL - HLLH // 340: op=0b101010 XOR\\\\n101010 100 ------ -- -L --- - ---- // 341: op=0b101010 XOR\\\\n101010 101 ------ -- -L --- - ---- // 342: op=0b101010 XOR\\\\n101010 110 ------ -- -L --- - ---- // 343: op=0b101010 XOR\\\\n101010 111 ------ -- -L --- - ---- // 344: op=0b101010 XOR\\\\n101011 000 HLHLLH LL -L LLL L LLHH // 345: op=0b101011 XNOR\\\\n101011 001 HLHLLH LL -L LLL L LLHH // 346: op=0b101011 XNOR\\\\n101011 010 ------ -- -L HLL - HLLH // 347: op=0b101011 XNOR\\\\n101011 011 ------ -- -L HLL - HLLH // 348: op=0b101011 XNOR\\\\n101011 100 ------ -- -L --- - ---- // 349: op=0b101011 XNOR\\\\n101011 101 ------ -- -L --- - ---- // 350: op=0b101011 XNOR\\\\n101011 110 ------ -- -L --- - ---- // 351: op=0b101011 XNOR\\\\n101011 111 ------ -- -L --- - ---- // 352: op=0b101011 XNOR\\\\n101100 000 HHLLLL LL -L LLL L LLHH // 353: op=0b101100 SHL\\\\n101100 001 HHLLLL LL -L LLL L LLHH // 354: op=0b101100 SHL\\\\n101100 010 ------ -- -L HLL - HLLH // 355: op=0b101100 SHL\\\\n101100 011 ------ -- -L HLL - HLLH // 356: op=0b101100 SHL\\\\n101100 100 ------ -- -L --- - ---- // 357: op=0b101100 SHL\\\\n101100 101 ------ -- -L --- - ---- // 358: op=0b101100 SHL\\\\n101100 110 ------ -- -L --- - ---- // 359: op=0b101100 SHL\\\\n101100 111 ------ -- -L --- - ---- // 360: op=0b101100 SHL\\\\n101101 000 HHLLLH LL -L LLL L LLHH // 361: op=0b101101 SHR\\\\n101101 001 HHLLLH LL -L LLL L LLHH // 362: op=0b101101 SHR\\\\n101101 010 ------ -- -L HLL - HLLH // 363: op=0b101101 SHR\\\\n101101 011 ------ -- -L HLL - HLLH // 364: op=0b101101 SHR\\\\n101101 100 ------ -- -L --- - ---- // 365: op=0b101101 SHR\\\\n101101 101 ------ -- -L --- - ---- // 366: op=0b101101 SHR\\\\n101101 110 ------ -- -L --- - ---- // 367: op=0b101101 SHR\\\\n101101 111 ------ -- -L --- - ---- // 368: op=0b101101 SHR\\\\n101110 000 HHLLHH LL -L LLL L LLHH // 369: op=0b101110 SRA\\\\n101110 001 HHLLHH LL -L LLL L LLHH // 370: op=0b101110 SRA\\\\n101110 010 ------ -- -L HLL - HLLH // 371: op=0b101110 SRA\\\\n101110 011 ------ -- -L HLL - HLLH // 372: op=0b101110 SRA\\\\n101110 100 ------ -- -L --- - ---- // 373: op=0b101110 SRA\\\\n101110 101 ------ -- -L --- - ---- // 374: op=0b101110 SRA\\\\n101110 110 ------ -- -L --- - ---- // 375: op=0b101110 SRA\\\\n101110 111 ------ -- -L --- - ---- // 376: op=0b101110 SRA\\\\n101111 000 ------ -- -L LHH - HLLH // 377: op=0b101111 ???\\\\n101111 001 ------ -- -L LHH - HLLH // 378: op=0b101111 ???\\\\n101111 010 ------ -- -L HLL - HLLH // 379: op=0b101111 ???\\\\n101111 011 ------ -- -L HLL - HLLH // 380: op=0b101111 ???\\\\n101111 100 ------ -- -L --- - ---- // 381: op=0b101111 ???\\\\n101111 101 ------ -- -L --- - ---- // 382: op=0b101111 ???\\\\n101111 110 ------ -- -L --- - ---- // 383: op=0b101111 ???\\\\n101111 111 ------ -- -L --- - ---- // 384: op=0b101111 ???\\\\n110000 000 LHLLLL LH -L LLL - LLHH // 385: op=0b110000 ADDC\\\\n110000 001 LHLLLL LH -L LLL - LLHH // 386: op=0b110000 ADDC\\\\n110000 010 ------ -- -L HLL - HLLH // 387: op=0b110000 ADDC\\\\n110000 011 ------ -- -L HLL - HLLH // 388: op=0b110000 ADDC\\\\n110000 100 ------ -- -L --- - ---- // 389: op=0b110000 ADDC\\\\n110000 101 ------ -- -L --- - ---- // 390: op=0b110000 ADDC\\\\n110000 110 ------ -- -L --- - ---- // 391: op=0b110000 ADDC\\\\n110000 111 ------ -- -L --- - ---- // 392: op=0b110000 ADDC\\\\n110001 000 LHLLLH LH -L LLL - LLHH // 393: op=0b110001 SUBC\\\\n110001 001 LHLLLH LH -L LLL - LLHH // 394: op=0b110001 SUBC\\\\n110001 010 ------ -- -L HLL - HLLH // 395: op=0b110001 SUBC\\\\n110001 011 ------ -- -L HLL - HLLH // 396: op=0b110001 SUBC\\\\n110001 100 ------ -- -L --- - ---- // 397: op=0b110001 SUBC\\\\n110001 101 ------ -- -L --- - ---- // 398: op=0b110001 SUBC\\\\n110001 110 ------ -- -L --- - ---- // 399: op=0b110001 SUBC\\\\n110001 111 ------ -- -L --- - ---- // 400: op=0b110001 SUBC\\\\n110010 000 ------ -- -L LHH - HLLH // 401: op=0b110010 MULC\\\\n110010 001 ------ -- -L LHH - HLLH // 402: op=0b110010 MULC\\\\n110010 010 ------ -- -L HLL - HLLH // 403: op=0b110010 MULC\\\\n110010 011 ------ -- -L HLL - HLLH // 404: op=0b110010 MULC\\\\n110010 100 ------ -- -L --- - ---- // 405: op=0b110010 MULC\\\\n110010 101 ------ -- -L --- - ---- // 406: op=0b110010 MULC\\\\n110010 110 ------ -- -L --- - ---- // 407: op=0b110010 MULC\\\\n110010 111 ------ -- -L --- - ---- // 408: op=0b110010 MULC\\\\n110011 000 ------ -- -L LHH - HLLH // 409: op=0b110011 DIVC\\\\n110011 001 ------ -- -L LHH - HLLH // 410: op=0b110011 DIVC\\\\n110011 010 ------ -- -L HLL - HLLH // 411: op=0b110011 DIVC\\\\n110011 011 ------ -- -L HLL - HLLH // 412: op=0b110011 DIVC\\\\n110011 100 ------ -- -L --- - ---- // 413: op=0b110011 DIVC\\\\n110011 101 ------ -- -L --- - ---- // 414: op=0b110011 DIVC\\\\n110011 110 ------ -- -L --- - ---- // 415: op=0b110011 DIVC\\\\n110011 111 ------ -- -L --- - ---- // 416: op=0b110011 DIVC\\\\n110100 000 LLLLHH LH -L LLL - LLHH // 417: op=0b110100 CMPEQC\\\\n110100 001 LLLLHH LH -L LLL - LLHH // 418: op=0b110100 CMPEQC\\\\n110100 010 ------ -- -L HLL - HLLH // 419: op=0b110100 CMPEQC\\\\n110100 011 ------ -- -L HLL - HLLH // 420: op=0b110100 CMPEQC\\\\n110100 100 ------ -- -L --- - ---- // 421: op=0b110100 CMPEQC\\\\n110100 101 ------ -- -L --- - ---- // 422: op=0b110100 CMPEQC\\\\n110100 110 ------ -- -L --- - ---- // 423: op=0b110100 CMPEQC\\\\n110100 111 ------ -- -L --- - ---- // 424: op=0b110100 CMPEQC\\\\n110101 000 LLLHLH LH -L LLL - LLHH // 425: op=0b110101 CMPLTC\\\\n110101 001 LLLHLH LH -L LLL - LLHH // 426: op=0b110101 CMPLTC\\\\n110101 010 ------ -- -L HLL - HLLH // 427: op=0b110101 CMPLTC\\\\n110101 011 ------ -- -L HLL - HLLH // 428: op=0b110101 CMPLTC\\\\n110101 100 ------ -- -L --- - ---- // 429: op=0b110101 CMPLTC\\\\n110101 101 ------ -- -L --- - ---- // 430: op=0b110101 CMPLTC\\\\n110101 110 ------ -- -L --- - ---- // 431: op=0b110101 CMPLTC\\\\n110101 111 ------ -- -L --- - ---- // 432: op=0b110101 CMPLTC\\\\n110110 000 LLLHHH LH -L LLL - LLHH // 433: op=0b110110 CMPLEC\\\\n110110 001 LLLHHH LH -L LLL - LLHH // 434: op=0b110110 CMPLEC\\\\n110110 010 ------ -- -L HLL - HLLH // 435: op=0b110110 CMPLEC\\\\n110110 011 ------ -- -L HLL - HLLH // 436: op=0b110110 CMPLEC\\\\n110110 100 ------ -- -L --- - ---- // 437: op=0b110110 CMPLEC\\\\n110110 101 ------ -- -L --- - ---- // 438: op=0b110110 CMPLEC\\\\n110110 110 ------ -- -L --- - ---- // 439: op=0b110110 CMPLEC\\\\n110110 111 ------ -- -L --- - ---- // 440: op=0b110110 CMPLEC\\\\n110111 000 ------ -- -L LHH - HLLH // 441: op=0b110111 ???\\\\n110111 001 ------ -- -L LHH - HLLH // 442: op=0b110111 ???\\\\n110111 010 ------ -- -L HLL - HLLH // 443: op=0b110111 ???\\\\n110111 011 ------ -- -L HLL - HLLH // 444: op=0b110111 ???\\\\n110111 100 ------ -- -L --- - ---- // 445: op=0b110111 ???\\\\n110111 101 ------ -- -L --- - ---- // 446: op=0b110111 ???\\\\n110111 110 ------ -- -L --- - ---- // 447: op=0b110111 ???\\\\n110111 111 ------ -- -L --- - ---- // 448: op=0b110111 ???\\\\n111000 000 HLHLLL LH -L LLL - LLHH // 449: op=0b111000 ANDC\\\\n111000 001 HLHLLL LH -L LLL - LLHH // 450: op=0b111000 ANDC\\\\n111000 010 ------ -- -L HLL - HLLH // 451: op=0b111000 ANDC\\\\n111000 011 ------ -- -L HLL - HLLH // 452: op=0b111000 ANDC\\\\n111000 100 ------ -- -L --- - ---- // 453: op=0b111000 ANDC\\\\n111000 101 ------ -- -L --- - ---- // 454: op=0b111000 ANDC\\\\n111000 110 ------ -- -L --- - ---- // 455: op=0b111000 ANDC\\\\n111000 111 ------ -- -L --- - ---- // 456: op=0b111000 ANDC\\\\n111001 000 HLHHHL LH -L LLL - LLHH // 457: op=0b111001 ORC\\\\n111001 001 HLHHHL LH -L LLL - LLHH // 458: op=0b111001 ORC\\\\n111001 010 ------ -- -L HLL - HLLH // 459: op=0b111001 ORC\\\\n111001 011 ------ -- -L HLL - HLLH // 460: op=0b111001 ORC\\\\n111001 100 ------ -- -L --- - ---- // 461: op=0b111001 ORC\\\\n111001 101 ------ -- -L --- - ---- // 462: op=0b111001 ORC\\\\n111001 110 ------ -- -L --- - ---- // 463: op=0b111001 ORC\\\\n111001 111 ------ -- -L --- - ---- // 464: op=0b111001 ORC\\\\n111010 000 HLLHHL LH -L LLL - LLHH // 465: op=0b111010 XORC\\\\n111010 001 HLLHHL LH -L LLL - LLHH // 466: op=0b111010 XORC\\\\n111010 010 ------ -- -L HLL - HLLH // 467: op=0b111010 XORC\\\\n111010 011 ------ -- -L HLL - HLLH // 468: op=0b111010 XORC\\\\n111010 100 ------ -- -L --- - ---- // 469: op=0b111010 XORC\\\\n111010 101 ------ -- -L --- - ---- // 470: op=0b111010 XORC\\\\n111010 110 ------ -- -L --- - ---- // 471: op=0b111010 XORC\\\\n111010 111 ------ -- -L --- - ---- // 472: op=0b111010 XORC\\\\n111011 000 HLHLLH LH -L LLL - LLHH // 473: op=0b111011 XNORC\\\\n111011 001 HLHLLH LH -L LLL - LLHH // 474: op=0b111011 XNORC\\\\n111011 010 ------ -- -L HLL - HLLH // 475: op=0b111011 XNORC\\\\n111011 011 ------ -- -L HLL - HLLH // 476: op=0b111011 XNORC\\\\n111011 100 ------ -- -L --- - ---- // 477: op=0b111011 XNORC\\\\n111011 101 ------ -- -L --- - ---- // 478: op=0b111011 XNORC\\\\n111011 110 ------ -- -L --- - ---- // 479: op=0b111011 XNORC\\\\n111011 111 ------ -- -L --- - ---- // 480: op=0b111011 XNORC\\\\n111100 000 HHLLLL LH -L LLL - LLHH // 481: op=0b111100 SHLC\\\\n111100 001 HHLLLL LH -L LLL - LLHH // 482: op=0b111100 SHLC\\\\n111100 010 ------ -- -L HLL - HLLH // 483: op=0b111100 SHLC\\\\n111100 011 ------ -- -L HLL - HLLH // 484: op=0b111100 SHLC\\\\n111100 100 ------ -- -L --- - ---- // 485: op=0b111100 SHLC\\\\n111100 101 ------ -- -L --- - ---- // 486: op=0b111100 SHLC\\\\n111100 110 ------ -- -L --- - ---- // 487: op=0b111100 SHLC\\\\n111100 111 ------ -- -L --- - ---- // 488: op=0b111100 SHLC\\\\n111101 000 HHLLLH LH -L LLL - LLHH // 489: op=0b111101 SHRC\\\\n111101 001 HHLLLH LH -L LLL - LLHH // 490: op=0b111101 SHRC\\\\n111101 010 ------ -- -L HLL - HLLH // 491: op=0b111101 SHRC\\\\n111101 011 ------ -- -L HLL - HLLH // 492: op=0b111101 SHRC\\\\n111101 100 ------ -- -L --- - ---- // 493: op=0b111101 SHRC\\\\n111101 101 ------ -- -L --- - ---- // 494: op=0b111101 SHRC\\\\n111101 110 ------ -- -L --- - ---- // 495: op=0b111101 SHRC\\\\n111101 111 ------ -- -L --- - ---- // 496: op=0b111101 SHRC\\\\n111110 000 HHLLHH LH -L LLL - LLHH // 497: op=0b111110 SRAC\\\\n111110 001 HHLLHH LH -L LLL - LLHH // 498: op=0b111110 SRAC\\\\n111110 010 ------ -- -L HLL - HLLH // 499: op=0b111110 SRAC\\\\n111110 011 ------ -- -L HLL - HLLH // 500: op=0b111110 SRAC\\\\n111110 100 ------ -- -L --- - ---- // 501: op=0b111110 SRAC\\\\n111110 101 ------ -- -L --- - ---- // 502: op=0b111110 SRAC\\\\n111110 110 ------ -- -L --- - ---- // 503: op=0b111110 SRAC\\\\n111110 111 ------ -- -L --- - ---- // 504: op=0b111110 SRAC\\\\n111111 000 ------ -- -L LHH - HLLH // 505: op=0b111111 ???\\\\n111111 001 ------ -- -L LHH - HLLH // 506: op=0b111111 ???\\\\n111111 010 ------ -- -L HLL - HLLH // 507: op=0b111111 ???\\\\n111111 011 ------ -- -L HLL - HLLH // 508: op=0b111111 ???\\\\n111111 100 ------ -- -L --- - ---- // 509: op=0b111111 ???\\\\n111111 101 ------ -- -L --- - ---- // 510: op=0b111111 ???\\\\n111111 110 ------ -- -L --- - ---- // 511: op=0b111111 ???\\\\n111111 111 ------ -- -L --- - ---- // 512: op=0b111111 ???\\\\n\\\\n.plot X(OP[5:0])\\\\n.plot RESET\\\\n.plot IRQ\\\\n.plot Z\\\\n.plot X(ALUFN[5:0])\\\\n.plot ASEL\\\\n.plot BSEL\\\\n.plot MOE\\\\n.plot MWR\\\\n.plot X(PCSEL[2:0])\\\\n.plot RA2SEL\\\\n.plot WASEL\\\\n.plot X(WDSEL[1:0])\\\\n.plot WERF\\\\n\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[184,96,4],{\\\"signal\\\":\\\"ra2sel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-64,4],{\\\"signal\\\":\\\"asel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-48,4],{\\\"signal\\\":\\\"bsel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-80,4],{\\\"signal\\\":\\\"alufn[5:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,40,4],{\\\"signal\\\":\\\"wdsel[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,24,4],{\\\"signal\\\":\\\"wasel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,56,4],{\\\"signal\\\":\\\"werf\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[104,-8,4],{\\\"signal\\\":\\\"pcsel[2:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-32,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-80,0,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-112,-104,0],{\\\"signal\\\":\\\"op[5:0]\\\"}],[\\\"port\\\",[-88,24,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-56,136,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-288,0,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"memory\\\",[-104,-104,0],{\\\"naddr\\\":\\\"6\\\",\\\"ndata\\\":\\\"17\\\",\\\"contents\\\":\\\"// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// wasel, wdsel[1:0], werf\\\\n0b??????_??_?0_011_1001  // 0b000000\\\\n0b??????_??_?0_011_1001  // 0b000001\\\\n0b??????_??_?0_011_1001  // 0b000010\\\\n0b??????_??_?0_011_1001  // 0b000011\\\\n0b??????_??_?0_011_1001  // 0b000100\\\\n0b??????_??_?0_011_1001  // 0b000101\\\\n0b??????_??_?0_011_1001  // 0b000110\\\\n0b??????_??_?0_011_1001  // 0b000111\\\\n\\\\n0b??????_??_?0_011_1001  // 0b001000\\\\n0b??????_??_?0_011_1001  // 0b001001\\\\n0b??????_??_?0_011_1001  // 0b001010\\\\n0b??????_??_?0_011_1001  // 0b001011\\\\n0b??????_??_?0_011_1001  // 0b001100\\\\n0b??????_??_?0_011_1001  // 0b001101\\\\n0b??????_??_?0_011_1001  // 0b001110\\\\n0b??????_??_?0_011_1001  // 0b001111\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// wasel, wdsel[1:0] werf\\\\n0b??????_??_?0_011_1001  // 0b010000\\\\n0b??????_??_?0_011_1001  // 0b010001\\\\n0b??????_??_?0_011_1001  // 0b010010\\\\n0b??????_??_?0_011_1001  // 0b010011\\\\n0b??????_??_?0_011_1001  // 0b010100\\\\n0b??????_??_?0_011_1001  // 0b010101\\\\n0b??????_??_?0_011_1001  // 0b010110\\\\n0b??????_??_?0_011_1001  // 0b010111\\\\n\\\\n/* OPC type\\\\n0bxxxxxx_01_?0_000_0011 \\\\n*/\\\\n0b010000_01_10_000_0101  // 0b011000 LD\\\\n0b010000_01_01_000_???0  // 0b011001 ST\\\\n0b??????_??_?0_011_1001  // 0b011010\\\\n0b??????_??_?0_010_0001  // 0b011011 JMP\\\\n0b??????_??_?0_001_0001  // 0b011100 BEQ (usesZ)\\\\n0b??????_??_?0_001_0001  // 0b011101 BNE (usesZ)\\\\n0b??????_??_?0_011_1001  // 0b011110\\\\n0b101010_1?_10_000_0101  // 0b011111 LDR\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// wasel, wdsel[1:0] werf\\\\n/* OP type\\\\n0bxxxxxx_00_?0_000_0011 \\\\n*/\\\\n0b010000_00_?0_000_0011  // 0b100000 ADD\\\\n0b010001_00_?0_000_0011  // 0b100001 SUB\\\\n0b??????_??_?0_011_1001  // 0b100010 [normally MUL, but ILLOP for our ALU]\\\\n0b??????_??_?0_011_1001  // 0b100011 [normally DIV, but ILOOP for our ALU]\\\\n0b000011_00_?0_000_0011  // 0b100100 CMPEQ\\\\n0b000101_00_?0_000_0011  // 0b100101 CMPLT\\\\n0b000111_00_?0_000_0011  // 0b100110 CMPLE\\\\n0b??????_??_?0_011_1001  // 0b100111\\\\n\\\\n0b101000_00_?0_000_0011  // 0b101000 AND\\\\n0b101110_00_?0_000_0011  // 0b101001 OR\\\\n0b100110_00_?0_000_0011  // 0b101010 XOR\\\\n0b101001_00_?0_000_0011  // 0b101011 XNOR\\\\n0b110000_00_?0_000_0011  // 0b101100 SHL\\\\n0b110001_00_?0_000_0011  // 0b101101 SHR\\\\n0b110011_00_?0_000_0011  // 0b101110 SRA\\\\n0b??????_??_?0_011_1001  // 0b101111\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// wasel, wdsel[1:0] werf\\\\n/* OPC type\\\\n0bxxxxxx_01_?0_000_0011 \\\\n*/\\\\n0b010000_01_?0_000_0011  // 0b110000 ADDC\\\\n0b010001_01_?0_000_0011  // 0b110001 SUBC\\\\n0b??????_??_?0_011_1001  // 0b110010 [normally MULC, but ILLOP for our ALU]\\\\n0b??????_??_?0_011_1001  // 0b110011 [normally DIVC, but ILLOP for our ALU]\\\\n0b000011_01_?0_000_0011  // 0b110100 CMPEQC\\\\n0b000101_01_?0_000_0011  // 0b110101 CMPLTC\\\\n0b000111_01_?0_000_0011  // 0b110110 CMPLEC\\\\n0b??????_??_?0_011_1001  // 0b110111\\\\n\\\\n0b101000_01_?0_000_0011  // 0b111000 ANDC\\\\n0b101110_01_?0_000_0011  // 0b111001 ORC\\\\n0b100110_01_?0_000_0011  // 0b111010 XORC\\\\n0b101001_01_?0_000_0011  // 0b111011 XNORC\\\\n0b110000_01_?0_000_0011  // 0b111100 SHLC\\\\n0b110001_01_?0_000_0011  // 0b111101 SHRC\\\\n0b110011_01_?0_000_0011  // 0b111110 SRAC\\\\n0b??????_??_?0_011_1001  // 0b111111\\\\n\\\"}],[\\\"wire\\\",[160,-80,0,-8,0],{\\\"signal\\\":\\\"d[17:12]\\\"}],[\\\"wire\\\",[160,-64,0,-8,0],{\\\"signal\\\":\\\"d[11]\\\"}],[\\\"wire\\\",[56,56,0,-8,0],{\\\"signal\\\":\\\"d_irq[0]\\\"}],[\\\"wire\\\",[56,40,0,-8,0],{\\\"signal\\\":\\\"d_irq[2:1]\\\"}],[\\\"wire\\\",[56,24,0,-8,0],{\\\"signal\\\":\\\"d_irq[3]\\\"}],[\\\"wire\\\",[56,-8,0,-8,0],{\\\"signal\\\":\\\"d_irq[6:4]\\\"}],[\\\"wire\\\",[-96,8,0,-8,0],{\\\"signal\\\":\\\"d_irq[7]\\\"}],[\\\"wire\\\",[160,-32,0,-8,0],{\\\"signal\\\":\\\"d[9]\\\"}],[\\\"wire\\\",[160,-48,0,-8,0],{\\\"signal\\\":\\\"d[10]\\\"}],[\\\"wire\\\",[-104,-96,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-112,-104,0,8,0]],[\\\"wire\\\",[-104,-88,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[-256,144,0]],[\\\"wire\\\",[-256,160,0,-8,0],{\\\"signal\\\":\\\"0'3\\\"}],[\\\"wire\\\",[-256,144,0,-8,0],{\\\"signal\\\":\\\"1'3\\\"}],[\\\"/gates/and2\\\",[-264,-80,0]],[\\\"/gates/mux2\\\",[-232,144,6]],[\\\"/gates/nor2\\\",[-312,-88,0]],[\\\"wire\\\",[-312,-88,0,-8,0],{\\\"signal\\\":\\\"d[7]\\\"}],[\\\"wire\\\",[-312,-72,0,-8,0],{\\\"signal\\\":\\\"d[6]\\\"}],[\\\"wire\\\",[-240,152,0,8,0]],[\\\"wire\\\",[-232,144,0,0,8],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[-216,136,0,8,0],{\\\"signal\\\":\\\"bch[2:0]\\\"}],[\\\"wire\\\",[-232,128,0,-24,0],{\\\"signal\\\":\\\"d[7:5]\\\"}],[\\\"/gates/inverter\\\",[-288,0,0]],[\\\"wire\\\",[-264,-64,0,0,8],{\\\"signal\\\":\\\"d[5]\\\"}],[\\\"wire\\\",[-248,32,0,-8,0],{\\\"signal\\\":\\\"op[0]\\\"}],[\\\"wire\\\",[-216,-72,0,8,0],{\\\"signal\\\":\\\"branch\\\"}],[\\\"wire\\\",[-224,112,0,-32,0],{\\\"signal\\\":\\\"branch\\\"}],[\\\"/gates/mux2\\\",[-256,0,0]],[\\\"wire\\\",[-256,16,0,-32,0]],[\\\"wire\\\",[-288,16,0,0,-16]],[\\\"wire\\\",[-240,8,0,8,0],{\\\"signal\\\":\\\"bne_beq\\\"}],[\\\"wire\\\",[-248,176,0,-16,0],{\\\"signal\\\":\\\"bne_beq\\\"}],[\\\"/gates/mux2\\\",[-96,-8,0]],[\\\"wire\\\",[-96,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[-64,104,0]],[\\\"wire\\\",[-64,120,0,-8,0],{\\\"signal\\\":\\\"d[8],bch[2:0],d[3:0]\\\"}],[\\\"wire\\\",[-64,104,0,-8,0],{\\\"signal\\\":\\\"0b01001001'8\\\"}],[\\\"wire\\\",[-48,112,0,8,0],{\\\"signal\\\":\\\"d_irq[7:0]\\\"}],[\\\"jumper\\\",[160,-32,0]],[\\\"jumper\\\",[56,-8,0]],[\\\"jumper\\\",[160,-80,0]],[\\\"jumper\\\",[160,-64,0]],[\\\"jumper\\\",[160,-48,0]],[\\\"jumper\\\",[56,24,0]],[\\\"jumper\\\",[56,40,0]],[\\\"jumper\\\",[56,56,0]],[\\\"wire\\\",[-104,-80,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-32,-104,0,8,0],{\\\"signal\\\":\\\"d[17:5],d[3:0]\\\"}],[\\\"text\\\",[-287,-106,0],{\\\"text\\\":\\\"Detect branch\\\"}],[\\\"text\\\",[-297,-20,0],{\\\"text\\\":\\\"distinquish beq/bne\\\"}],[\\\"text\\\",[-302,69,0],{\\\"text\\\":\\\"if branch,\\\"}],[\\\"text\\\",[-289,81,0],{\\\"text\\\":\\\" z determines outcome, \\\"}],[\\\"text\\\",[-302,94,0],{\\\"text\\\":\\\"else, pass through.\\\"}],[\\\"text\\\",[-139,83,0],{\\\"text\\\":\\\"If IRQ, \\\\noverwrite ROM output\\\"}],[\\\"text\\\",[-127,-28,0],{\\\"text\\\":\\\"If reset, force MWR\\\"}],[\\\"text\\\",[87,-103,0],{\\\"text\\\":\\\"ROM output\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"text\\\",[36,-28,0],{\\\"text\\\":\\\"IRQ overridable\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"/gates/mux2\\\",[168,88,0]],[\\\"wire\\\",[168,88,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[168,104,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[176,120,0,-16,0],{\\\"signal\\\":\\\"op[5]\\\"}],[\\\"text\\\",[-20,-124,0],{\\\"text\\\":\\\"ra2sel removed, renamed outputs to keep downstream circuits unchanged.\\\"}],[\\\"text\\\",[191,71,0],{\\\"text\\\":\\\"replaces d[4] jumped to ra2sel\\\"}],[\\\"/gates/buffer_h\\\",[72,-8,0]],[\\\"wire\\\",[72,-8,0,-8,0],{\\\"width\\\":\\\"3\\\"}]]},\\\"/user/beta_v3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-232,-448,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-360,-392,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-104,-312,4],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/alu/alu\\\",[-168,-200,1]],[\\\"/gates/mux2\\\",[-208,-272,7]],[\\\"/gates/mux2\\\",[-144,-272,7]],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-144,-272,0,0,-16],{\\\"signal\\\":\\\"id[15]#16,id[15:0]\\\"}],[\\\"wire\\\",[-112,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-152,-232,0,16,0]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"id[15:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1]],[\\\"/gates/mux2\\\",[-160,-136,1]],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"jumper\\\",[-368,-392,0]],[\\\"wire\\\",[-368,-392,0,-32,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"wire\\\",[-104,-272,0,0,-40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-128,-320,0,24,0]],[\\\"wire\\\",[-104,-320,0,0,8]],[\\\"wire\\\",[-128,-272,0,24,0]],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]],[\\\"/user/pc_v2\\\",[-488,-416,0]],[\\\"/user/ctl_v2\\\",[-368,-216,0]]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-32,-32,0],{\\\"name\\\":\\\"mrd[31:0]\\\"}],[\\\"terminal\\\",[-32,-48,0],{\\\"name\\\":\\\"id[31:0]\\\"}],[\\\"text\\\",[-23,-48,0],{\\\"text\\\":\\\"ID[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-32,0],{\\\"text\\\":\\\"MRD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[-16,16,0,-8,4]],[\\\"line\\\",[-16,16,0,-8,-4]],[\\\"terminal\\\",[64,-48,4],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[55,-48,4],{\\\"text\\\":\\\"IA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-32,4],{\\\"name\\\":\\\"ma[31:0]\\\"}],[\\\"text\\\",[55,-32,4],{\\\"text\\\":\\\"MA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"moe\\\"}],[\\\"text\\\",[55,-16,4],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,0,4],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[55,0,4],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,16,4],{\\\"name\\\":\\\"mwd[31:0]\\\"}],[\\\"text\\\",[55,16,4],{\\\"text\\\":\\\"MWD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[16,-59,0],{\\\"text\\\":\\\"BETA_v3\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-64,0,0,88]],[\\\"line\\\",[-24,24,0,80,0]],[\\\"line\\\",[56,24,0,0,-88]],[\\\"line\\\",[56,-64,0,-80,0]],[\\\"property\\\",[16,-66,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}]]},\\\"/user/test_v4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"/user/beta_v3\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 6.5n CLK=0 tran 7.5n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/beta_v4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-232,-448,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-360,-392,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-104,-312,4],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/alu/alu\\\",[-168,-200,1]],[\\\"/gates/mux2\\\",[-208,-272,7]],[\\\"/gates/mux2\\\",[-144,-272,7]],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-144,-272,0,0,-16],{\\\"signal\\\":\\\"buf_id[15]#17,id[14:0]\\\"}],[\\\"wire\\\",[-112,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-152,-232,0,16,0]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"buf_id[15],id[14:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1]],[\\\"/gates/mux2\\\",[-160,-136,1]],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"jumper\\\",[-368,-392,0]],[\\\"wire\\\",[-368,-392,0,-32,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"wire\\\",[-104,-272,0,0,-40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-128,-320,0,24,0]],[\\\"wire\\\",[-104,-320,0,0,8]],[\\\"wire\\\",[-128,-272,0,24,0]],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]],[\\\"/user/pc_v2\\\",[-488,-416,0]],[\\\"/user/ctl_v2\\\",[-368,-216,0]],[\\\"/gates/buffer_h\\\",[0,-432,0]],[\\\"wire\\\",[0,-432,0,-16,0],{\\\"signal\\\":\\\"id[15]\\\"}],[\\\"wire\\\",[32,-432,0,16,0],{\\\"signal\\\":\\\"buf_id[15]\\\"}],[\\\"text\\\",[8,-413,0],{\\\"text\\\":\\\"buffer heavily loaded signals\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-32,-32,0],{\\\"name\\\":\\\"mrd[31:0]\\\"}],[\\\"terminal\\\",[-32,-48,0],{\\\"name\\\":\\\"id[31:0]\\\"}],[\\\"text\\\",[-23,-48,0],{\\\"text\\\":\\\"ID[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-32,0],{\\\"text\\\":\\\"MRD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[-16,16,0,-8,4]],[\\\"line\\\",[-16,16,0,-8,-4]],[\\\"terminal\\\",[64,-48,4],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[55,-48,4],{\\\"text\\\":\\\"IA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-32,4],{\\\"name\\\":\\\"ma[31:0]\\\"}],[\\\"text\\\",[55,-32,4],{\\\"text\\\":\\\"MA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"moe\\\"}],[\\\"text\\\",[55,-16,4],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,0,4],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[55,0,4],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,16,4],{\\\"name\\\":\\\"mwd[31:0]\\\"}],[\\\"text\\\",[55,16,4],{\\\"text\\\":\\\"MWD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[16,-59,0],{\\\"text\\\":\\\"BETA_v4\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-64,0,0,88]],[\\\"line\\\",[-24,24,0,80,0]],[\\\"line\\\",[56,24,0,0,-88]],[\\\"line\\\",[56,-64,0,-80,0]],[\\\"property\\\",[16,-66,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}]]},\\\"/user/test_v5\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"/user/beta_v4\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 6.5n CLK=0 tran 7.5n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/pc_v3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]},\\\"test-readonly\\\":{\\\"label\\\":\\\"test-readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"icon\\\":[[\\\"terminal\\\",[-8,8,0],{\\\"name\\\":\\\"ID[15:0]\\\"}],[\\\"terminal\\\",[-8,24,0],{\\\"name\\\":\\\"JT[31:2]\\\"}],[\\\"terminal\\\",[88,24,4],{\\\"name\\\":\\\"PC[31:0]\\\"}],[\\\"text\\\",[40,-3,0],{\\\"text\\\":\\\"PC_v3\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"text\\\",[1,8,0],{\\\"text\\\":\\\"ID[15:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[1,24,0],{\\\"text\\\":\\\"JT[31:2]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[1,56,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[79,24,0],{\\\"text\\\":\\\"PC[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"terminal\\\",[-8,40,0],{\\\"name\\\":\\\"PCSEL[2:0]\\\"}],[\\\"text\\\",[1,40,1],{\\\"text\\\":\\\"PCSEL[2:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[0,76,1,-4,-8]],[\\\"line\\\",[8,72,1,-4,8]],[\\\"terminal\\\",[88,40,4],{\\\"name\\\":\\\"PC_INC[31:0]\\\"}],[\\\"text\\\",[79,40,0],{\\\"text\\\":\\\"PC_INC[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"property\\\",[40,-10,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"terminal\\\",[-8,56,0],{\\\"name\\\":\\\"RESET\\\"}],[\\\"terminal\\\",[-8,72,0],{\\\"name\\\":\\\"CLK\\\"}],[\\\"terminal\\\",[88,56,4],{\\\"name\\\":\\\"PC_OFFSET[31:0]\\\"}],[\\\"text\\\",[79,56,0],{\\\"text\\\":\\\"PC_OFFSET[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"line\\\",[0,-8,0,0,88]],[\\\"line\\\",[0,80,0,80,0]],[\\\"line\\\",[80,80,0,0,-88]],[\\\"line\\\",[80,-8,0,-80,0]],[\\\"terminal\\\",[88,8,4],{\\\"name\\\":\\\"next_ia[31:0]\\\"}],[\\\"text\\\",[77,8,4],{\\\"text\\\":\\\"next_ia[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET PCSEL[2:0] ID[15:0] JT[31:0]\\\\n.group outputs PC[31:0] PC_INC[31:0] PC_OFFSET[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle CLK=0 assert inputs tran 50n CLK=1 tran 49n sample outputs tran 1n\\\\n\\\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\\\n1 100 0000000000000000 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   2: reset, PC==0x80000000\\\\n0 100 1111111111111110 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   3: xadr, PC==0x80000008, offset=-2\\\\n0 011 0111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLHLLLLLLLLLLLLLLHLL //   4: illop, PC==0x80000004, offset=0x7fff\\\\n0 010 0000000000000000 11111111111111111111111111110000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   5: jmp, pc==0XFFFFFFF0\\\\n0 000 1111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   6: inc, pc==0xFFFFFFF4, offset=-1\\\\n0 000 1111111111111110 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   7: inc, pc==0xFFFFFFF8, offset=-1\\\\n0 000 1111111111111101 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   8: inc, pc==0xFFFFFFFC, offset=-1\\\\n0 000 1111111111111100 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   9: inc, pc==0x80000000, offset=-1\\\\n0 010 1000000000000000 01111111111111111111111111111111 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHHHHHHHHHHHHLLLLLLLLLLLLLLLLL //  10: jmp to user mode, PC==0x7FFFFFFC, offset=0x8000\\\\n0 010 1111111111110111 10000111011001010100001100100001 LLLLLHHHLHHLLHLHLHLLLLHHLLHLLLLL LLLLLHHHLHHLLHLHLHLLLLHHLLHLLHLL LLLLLHHHLHHLLHLHLHLLLLHHLLLLLLLL //  11: jmp to super mode?, PC==0x07654320, offset=-9\\\\n0 010 0000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL //  12: jmp, PC==0x0\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL //  13: inc\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL //  14: inc\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL //  15: inc\\\\n0 001 0000000000000010 00000000000000000000000011110000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL //  16: br, offset=3, PC==0x1C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL //  17: inc\\\\n0 010 0000000000000000 00000000000000000000000000111100 LLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL //  18: jmp, PC==0x3C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL //  19: inc\\\\n0 010 0000000000000000 00000000000000000000000001111100 LLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL //  20: jmp, PC==0x7C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL //  21: inc\\\\n0 010 0000000000000000 00000000000000001111111111111100 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL //  22: jmp, PC==0xFFFC\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL //  23: inc\\\\n0 010 0000000000000000 00000000111111111111111111111100 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL //  24: jmp, PC==0xFFFFFC\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL //  25: inc\\\\n0 010 0000000000000000 01111111111111111111111111111100 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  26: jmp, PC==0x7FFFFFFC\\\\n0 000 1111111111111110 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL //  27: inc\\\\n\\\\n.plot CLK\\\\n.plot RESET\\\\n.plot B(PCSEL[2:0])\\\\n.plot X(ID[15:0])\\\\n.plot X(JT[31:0])\\\\n.plot X(PC[31:0])\\\\n.plot X(PC_INC[31:0])\\\\n.plot X(PC_OFFSET[31:0])\\\"]],\\\"schematic\\\":[[\\\"port\\\",[8,-128,0],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[-40,-168,6],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[-216,16,0],{\\\"signal\\\":\\\"ID[15:0]\\\"}],[\\\"port\\\",[-408,-200,0],{\\\"signal\\\":\\\"JT[31:0]\\\"}],[\\\"port\\\",[-160,-208,0],{\\\"signal\\\":\\\"PCSEL[2:0]\\\"}],[\\\"port\\\",[48,-144,4],{\\\"signal\\\":\\\"PC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-112,4],{\\\"signal\\\":\\\"PC_INC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[32,-72,4],{\\\"signal\\\":\\\"PC_OFFSET[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/dreg\\\",[8,-144,0]],[\\\"wire\\\",[-96,-176,6,0,8],{\\\"signal\\\":\\\"pcsel[2]\\\"}],[\\\"/gates/mux2\\\",[-104,-144,6]],[\\\"/gates/mux4\\\",[-144,-184,0]],[\\\"wire\\\",[-128,-160,0,24,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-120,0,0,16],{\\\"signal\\\":\\\"pcsel[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,-136,6]],[\\\"wire\\\",[-48,-136,0,0,24],{\\\"signal\\\":\\\"0x80000000'32\\\"}],[\\\"/user/add32\\\",[-168,-48,0]],[\\\"wire\\\",[-160,-296,0,-16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-200,-48,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"text\\\",[-402,-32,0],{\\\"text\\\":\\\"sign extend and shift:\\\"}],[\\\"wire\\\",[-200,-64,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-144,-184,0,-16,0],{\\\"signal\\\":\\\"0x80000004'32\\\"}],[\\\"wire\\\",[-144,-152,0,-16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"wire\\\",[-104,-144,0,0,16],{\\\"signal\\\":\\\"0x80000008'32\\\"}],[\\\"wire\\\",[-48,-152,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[8,-144,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-200,-32,0,-16,0],{\\\"signal\\\":\\\"id[15]#14,id[15:0],0b00'2\\\"}],[\\\"jumper\\\",[-224,-112,0]],[\\\"wire\\\",[-40,-280,0,16,0],{\\\"signal\\\":\\\"inc[31:0]\\\"}],[\\\"wire\\\",[-80,-32,0,16,0],{\\\"signal\\\":\\\"boff[31:0]\\\"}],[\\\"jumper\\\",[24,-72,0]],[\\\"wire\\\",[24,-72,0,-16,0],{\\\"signal\\\":\\\"pc[31],boff[30:0]\\\"}],[\\\"wire\\\",[-224,-112,0,-8,0]],[\\\"wire\\\",[-232,-112,0,0,-24]],[\\\"wire\\\",[-144,-136,0,-88,0],{\\\"signal\\\":\\\"pc[31],inc[30:0]\\\"}],[\\\"/gates/and2\\\",[-440,-240,0]],[\\\"wire\\\",[-440,-240,0,-16,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-440,-224,0,-16,0],{\\\"signal\\\":\\\"jt[31]\\\"}],[\\\"wire\\\",[-392,-232,0,16,0],{\\\"signal\\\":\\\"supnext\\\"}],[\\\"wire\\\",[-144,-168,0,-16,0],{\\\"signal\\\":\\\"supnext,jt[30:2],0b00'2\\\"}],[\\\"text\\\",[-109,-198,0],{\\\"text\\\":\\\"map 0b1xx to IRQ\\\"}],[\\\"text\\\",[-52,-63,0],{\\\"text\\\":\\\"guard sbit\\\"}],[\\\"text\\\",[-377,-222,0],{\\\"text\\\":\\\"calc next sbit\\\"}],[\\\"text\\\",[-373,-168,0],{\\\"text\\\":\\\"guard sbit, word align address:\\\"}],[\\\"text\\\",[-357,-135,0],{\\\"text\\\":\\\"guard sbit (supervisor bit):\\\"}],[\\\"/user/incr\\\",[-128,-296,0]],[\\\"wire\\\",[8,-144,0,0,-32]],[\\\"wire\\\",[8,-176,4,-8,0]],[\\\"port\\\",[16,-176,4],{\\\"signal\\\":\\\"next_ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-426,-344,0],{\\\"text\\\":\\\"v3: Instruction prefetch\\\"}]]},\\\"/user/beta_v5\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-392,-464,0],{\\\"signal\\\":\\\"next_id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-384,-408,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-104,-312,4],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/alu/alu\\\",[-168,-200,1]],[\\\"/gates/mux2\\\",[-208,-272,7]],[\\\"/gates/mux2\\\",[-144,-272,7]],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-144,-272,0,0,-16],{\\\"signal\\\":\\\"buf_id[15]#17,id[14:0]\\\"}],[\\\"wire\\\",[-112,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-152,-232,0,16,0]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"buf_id[15],id[14:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1]],[\\\"/gates/mux2\\\",[-160,-136,1]],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"wire\\\",[-104,-272,0,0,-40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-128,-320,0,24,0]],[\\\"wire\\\",[-104,-320,0,0,8]],[\\\"wire\\\",[-128,-272,0,24,0]],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]],[\\\"/user/ctl_v2\\\",[-368,-216,0]],[\\\"/gates/buffer_h\\\",[0,-432,0]],[\\\"wire\\\",[0,-432,0,-16,0],{\\\"signal\\\":\\\"id[15]\\\"}],[\\\"wire\\\",[32,-432,0,16,0],{\\\"signal\\\":\\\"buf_id[15]\\\"}],[\\\"text\\\",[8,-413,0],{\\\"text\\\":\\\"buffer heavily loaded signals\\\"}],[\\\"/user/pc_v3\\\",[-488,-416,0]],[\\\"/gates/dreg\\\",[-376,-464,0]],[\\\"wire\\\",[-400,-392,0,16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"text\\\",[-324,-507,0],{\\\"text\\\":\\\"v5: Add instruction pre-fetch\\\"}],[\\\"wire\\\",[-400,-408,0,16,0]],[\\\"wire\\\",[-376,-448,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-336,-464,0,16,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-392,-464,0,16,0]]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-32,-32,0],{\\\"name\\\":\\\"mrd[31:0]\\\"}],[\\\"terminal\\\",[-32,-48,0],{\\\"name\\\":\\\"next_id[31:0]\\\"}],[\\\"text\\\",[-23,-48,0],{\\\"text\\\":\\\"next_ID[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-32,0],{\\\"text\\\":\\\"MRD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[-16,16,0,-8,4]],[\\\"line\\\",[-16,16,0,-8,-4]],[\\\"terminal\\\",[64,-48,4],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[55,-48,4],{\\\"text\\\":\\\"IA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-32,4],{\\\"name\\\":\\\"ma[31:0]\\\"}],[\\\"text\\\",[55,-32,4],{\\\"text\\\":\\\"MA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"moe\\\"}],[\\\"text\\\",[55,-16,4],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,0,4],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[55,0,4],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,16,4],{\\\"name\\\":\\\"mwd[31:0]\\\"}],[\\\"text\\\",[55,16,4],{\\\"text\\\":\\\"MWD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[16,-59,0],{\\\"text\\\":\\\"BETA_v5\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-64,0,0,88]],[\\\"line\\\",[-24,24,0,80,0]],[\\\"line\\\",[56,24,0,0,-88]],[\\\"line\\\",[56,-64,0,-80,0]],[\\\"property\\\",[16,-66,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}]]},\\\"/user/test_v6\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"text\\\",[-139,-74,0],{\\\"text\\\":\\\"v6: Instruction prefetch\\\"}],[\\\"/user/beta_v5\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 4.5n CLK=0 tran 5.5n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/cla1\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/xor2\\\",[-64,-112,0]],[\\\"/gates/xor2\\\",[-16,-120,0]],[\\\"wire\\\",[-16,-128,0,-64,0]],[\\\"wire\\\",[-64,-112,0,-16,0]],[\\\"wire\\\",[-64,-96,0,-16,0]],[\\\"wire\\\",[-16,-104,0,0,16]],[\\\"wire\\\",[32,-112,0,16,0]],[\\\"wire\\\",[-16,-88,0,64,0]],[\\\"/gates/and2\\\",[-16,-56,0]],[\\\"wire\\\",[-16,-56,0,-8,0],{\\\"signal\\\":\\\"a\\\"}],[\\\"wire\\\",[-16,-40,0,-8,0],{\\\"signal\\\":\\\"b\\\"}],[\\\"wire\\\",[32,-48,0,16,0]],[\\\"port\\\",[-80,-112,0],{\\\"signal\\\":\\\"b\\\"}],[\\\"port\\\",[-80,-96,0],{\\\"signal\\\":\\\"a\\\"}],[\\\"port\\\",[-80,-128,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-16,-120,0,0,-8]],[\\\"port\\\",[48,-112,4],{\\\"signal\\\":\\\"s\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[48,-88,4],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[48,-48,4],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-40,-8,1],{\\\"name\\\":\\\"b\\\"}],[\\\"terminal\\\",[8,-8,1],{\\\"name\\\":\\\"a\\\"}],[\\\"terminal\\\",[32,16,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[16,40,3],{\\\"name\\\":\\\"s\\\"}],[\\\"terminal\\\",[-32,40,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-48,40,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-48,26,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[-31,26,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[15,27,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[10,15,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[6,5,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-41,7,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[-26,14,0],{\\\"text\\\":\\\"cla1\\\"}],[\\\"line\\\",[-56,32,0,80,0]],[\\\"line\\\",[24,32,0,0,-32]],[\\\"line\\\",[24,0,0,-80,0]],[\\\"line\\\",[-56,0,0,0,32]]]},\\\"/user/cl\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-24,-24,0],{\\\"signal\\\":\\\"ph\\\"}],[\\\"port\\\",[-24,-8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"port\\\",[56,-16,4],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-24,8,0],{\\\"signal\\\":\\\"ph\\\"}],[\\\"port\\\",[-24,24,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[24,16,0,0,8]],[\\\"port\\\",[-8,40,0],{\\\"signal\\\":\\\"gh\\\"}],[\\\"port\\\",[104,32,4],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-16,-43,0],{\\\"text\\\":\\\"gp logic\\\"}],[\\\"text\\\",[-15,62,0],{\\\"text\\\":\\\"carry logic\\\"}],[\\\"port\\\",[72,112,4],{\\\"signal\\\":\\\"ch\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[72,144,4],{\\\"signal\\\":\\\"cl\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[64,144,0]],[\\\"wire\\\",[64,144,0,-8,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[24,104,0,0,-8]],[\\\"wire\\\",[-8,120,0,-8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"port\\\",[-24,88,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-24,104,0,-8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"/gates/nand2\\\",[56,24,0]],[\\\"/gates/inverter\\\",[-8,40,0]],[\\\"wire\\\",[24,40,0,32,0]],[\\\"/gates/nand2\\\",[-24,8,0]],[\\\"wire\\\",[24,24,0,32,0]],[\\\"/gates/nand2\\\",[-24,88,0]],[\\\"/gates/inverter\\\",[-8,120,0]],[\\\"/gates/nand2\\\",[24,104,0]],[\\\"/gates/inverter\\\",[24,-16,0]],[\\\"/gates/nand2\\\",[-24,-24,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-24,-32,1],{\\\"name\\\":\\\"gh\\\"}],[\\\"terminal\\\",[-8,-32,1],{\\\"name\\\":\\\"ph\\\"}],[\\\"terminal\\\",[16,-32,1],{\\\"name\\\":\\\"ch\\\"}],[\\\"terminal\\\",[32,-8,4],{\\\"name\\\":\\\"gl\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"pl\\\"}],[\\\"terminal\\\",[32,16,4],{\\\"name\\\":\\\"cl\\\"}],[\\\"terminal\\\",[16,40,3],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[-8,40,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-24,40,3],{\\\"name\\\":\\\"g\\\"}],[\\\"line\\\",[-32,-24,0,56,0]],[\\\"line\\\",[24,-24,0,0,56]],[\\\"line\\\",[24,32,0,-56,0]],[\\\"line\\\",[-32,32,0,0,-56]],[\\\"text\\\",[-25,-20,0],{\\\"text\\\":\\\"gh\\\"}],[\\\"text\\\",[-8,-20,0],{\\\"text\\\":\\\"ph\\\"}],[\\\"text\\\",[-26,26,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[-10,26,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[5,26,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[11,-21,0],{\\\"text\\\":\\\"ch\\\"}],[\\\"text\\\",[14,-8,0],{\\\"text\\\":\\\"gl\\\"}],[\\\"text\\\",[14,0,0],{\\\"text\\\":\\\"pl\\\"}],[\\\"text\\\",[14,17,0],{\\\"text\\\":\\\"cl\\\"}],[\\\"text\\\",[-18,-9,0],{\\\"text\\\":\\\"Hi\\\"}],[\\\"text\\\",[-19,19,0],{\\\"text\\\":\\\"HiLo\\\"}],[\\\"text\\\",[3,3,0],{\\\"text\\\":\\\"Lo\\\"}],[\\\"text\\\",[-20,4,0],{\\\"text\\\":\\\"CL\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"property\\\",[-46,2,3],{\\\"format\\\":\\\"{name}\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/user/cla2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/user/cla1\\\",[-8,-48,0]],[\\\"port\\\",[0,-56,1],{\\\"signal\\\":\\\"a[1:0]\\\"}],[\\\"port\\\",[-48,-56,1],{\\\"signal\\\":\\\"b[1:0]\\\"}],[\\\"wire\\\",[24,-32,0,16,0],{\\\"signal\\\":\\\"ch,cl\\\"}],[\\\"port\\\",[8,-8,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cl\\\",[-32,112,0]],[\\\"wire\\\",[-16,80,0,0,-16],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-40,80,0,0,-16],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-56,80,0,0,-16],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[0,104,0,16,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[0,112,0,16,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[0,128,0,16,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-16,152,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-40,152,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-56,152,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-56,-8,0,0,16],{\\\"signal\\\":\\\"gh,gl\\\"}],[\\\"wire\\\",[-40,32,0,0,-40],{\\\"signal\\\":\\\"ph,pl\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-24,8,1],{\\\"name\\\":\\\"b[1:0]\\\"}],[\\\"terminal\\\",[24,8,1],{\\\"name\\\":\\\"a[1:0]\\\"}],[\\\"terminal\\\",[48,32,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[32,56,3],{\\\"name\\\":\\\"s[1:0]\\\"}],[\\\"terminal\\\",[-16,56,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-32,56,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-32,42,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[-15,42,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[31,43,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[31,31,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[22,21,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-25,23,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[-10,30,0],{\\\"text\\\":\\\"cla2\\\"}],[\\\"line\\\",[-40,48,0,80,0]],[\\\"line\\\",[40,48,0,0,-32]],[\\\"line\\\",[40,16,0,-80,0]],[\\\"line\\\",[-40,16,0,0,32]]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/user/cla4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[1:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[1:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-552,-88,0]],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[3:2]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[3:2]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[3:2]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-712,-88,0]],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-584,128,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[3:0] B[3:0] cin\\\\n.group outputs S[3:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0001 0001 0 LLHL\\\\n0001 0001 1 LLHH\\\\n1111 0001 0 LLLL\\\\n\\\\n.plot X(s[3:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-8,24,1],{\\\"name\\\":\\\"b[3:0]\\\"}],[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[3:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[3:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-16,72,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-16,58,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-9,39,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[6,46,0],{\\\"text\\\":\\\"cla4\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla8\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[3:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[3:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[3:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[7:4]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[7:4]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[7:4]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-584,128,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla4\\\",[-568,-104,0]],[\\\"/user/cla4\\\",[-728,-104,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[7:0] B[7:0] cin\\\\n.group outputs S[7:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000001 00000001 0 LLLLLLHL\\\\n00000001 00000001 1 LLLLLLHH\\\\n11111111 00000001 0 LLLLLLLL\\\\n\\\\n.plot X(s[7:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-8,24,1],{\\\"name\\\":\\\"b[7:0]\\\"}],[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[7:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[7:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-16,72,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-16,58,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-9,39,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[6,46,0],{\\\"text\\\":\\\"cla8\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla16\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[7:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[7:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[7:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[15:8]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[15:8]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[15:8]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-584,128,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla8\\\",[-568,-104,0]],[\\\"/user/cla8\\\",[-728,-104,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[15:0] B[15:0] cin\\\\n.group outputs S[15:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000001 00000000 00000001 0 LLLLLLLL LLLLLLHL\\\\n00000000 00000001 00000000 00000001 1 LLLLLLLL LLLLLLHH\\\\n11111111 11111111 00000000 00000001 0 LLLLLLLL LLLLLLLL\\\\n\\\\n.plot X(s[15:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-8,24,1],{\\\"name\\\":\\\"b[15:0]\\\"}],[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[15:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[15:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-16,72,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-16,58,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-9,39,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[6,46,0],{\\\"text\\\":\\\"cla16\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/add32_v3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-648,208,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-760,168,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-648,160,0,0,16]],[\\\"/gates/or2\\\",[-712,160,4]],[\\\"/gates/and2\\\",[-648,176,4]],[\\\"wire\\\",[-664,160,0,-48,0]],[\\\"wire\\\",[-712,176,0,16,0]],[\\\"wire\\\",[-696,184,0,0,-8]],[\\\"wire\\\",[-648,192,0,0,16]],[\\\"wire\\\",[-648,192,0,24,0]],[\\\"wire\\\",[-624,160,0,0,32]],[\\\"port\\\",[-608,-56,1],{\\\"signal\\\":\\\"A[15:0]\\\"}],[\\\"port\\\",[-656,-56,1],{\\\"signal\\\":\\\"B[15:0]\\\"}],[\\\"port\\\",[-600,8,3],{\\\"signal\\\":\\\"s[15:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-656,-48,0,0,-8]],[\\\"wire\\\",[-608,-48,0,0,-8]],[\\\"wire\\\",[-648,0,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-600,0,0,0,8]],[\\\"wire\\\",[-664,24,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-584,-24,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"/user/cl\\\",[-640,120,0]],[\\\"wire\\\",[-664,88,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-648,88,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-624,88,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-608,112,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-608,120,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-608,136,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-768,-56,1],{\\\"signal\\\":\\\"A[31:16]\\\"}],[\\\"port\\\",[-816,-56,1],{\\\"signal\\\":\\\"B[31:16]\\\"}],[\\\"port\\\",[-760,8,3],{\\\"signal\\\":\\\"s[31:16]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-816,-48,0,0,-8]],[\\\"wire\\\",[-768,-48,0,0,-8]],[\\\"wire\\\",[-808,0,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-760,0,0,0,8]],[\\\"wire\\\",[-824,24,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-744,-24,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"/user/cla16\\\",[-648,-72,0]],[\\\"/user/cla16\\\",[-808,-72,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n \\\\n01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\\n\\\\n\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32_v3\\\\n\\\"}],[\\\"property\\\",[3,-35,0],{\\\"format\\\":\\\"{name}\\\"}]]},\\\"/user/arith_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]},\\\"icon-readonly\\\":\\\"true\\\",\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"port\\\",[-32,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-88,-32,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-48,0],{\\\"signal\\\":\\\"AFN\\\"}],[\\\"port\\\",[88,-72,4],{\\\"signal\\\":\\\"S[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[80,-224,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,8,4],{\\\"signal\\\":\\\"N\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,-32,4],{\\\"signal\\\":\\\"Z\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[80,8,0,-8,0],{\\\"signal\\\":\\\"S[31]\\\"}],[\\\"jumper\\\",[80,8,0]],[\\\"/user/nor32\\\",[40,-32,0],{\\\"name\\\":\\\"nor32\\\"}],[\\\"/gates/xor2\\\",[-80,-48,0]],[\\\"wire\\\",[88,-48,0,-80,0]],[\\\"wire\\\",[-32,-40,0,0,-32],{\\\"signal\\\":\\\"xb[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-32,-104,0,-56,0]],[\\\"wire\\\",[-88,-104,0,0,56]],[\\\"wire\\\",[-88,-48,0,8,0]],[\\\"wire\\\",[-80,-32,0,-8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[88,-72,0,0,24]],[\\\"wire\\\",[8,-48,0,0,16]],[\\\"/gates/and3\\\",[-16,-248,0]],[\\\"/gates/inverter\\\",[-48,-216,0]],[\\\"wire\\\",[-48,-216,0,-8,0],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"/gates/or2\\\",[32,-232,0]],[\\\"/gates/and3\\\",[-16,-168,0]],[\\\"wire\\\",[-48,-216,0,0,48]],[\\\"wire\\\",[-48,-168,0,32,0]],[\\\"/gates/inverter\\\",[-48,-152,0]],[\\\"/gates/inverter\\\",[-48,-136,0]],[\\\"wire\\\",[-48,-152,0,-32,0],{\\\"signal\\\":\\\"xb[31]\\\"}],[\\\"wire\\\",[-48,-136,0,-48,0],{\\\"signal\\\":\\\"a[31]\\\"}],[\\\"wire\\\",[-96,-136,0,0,-112]],[\\\"wire\\\",[-16,-248,0,-80,0]],[\\\"wire\\\",[-80,-152,0,0,-80]],[\\\"wire\\\",[-16,-232,0,-64,0]],[\\\"wire\\\",[32,-216,0,0,64]],[\\\"text\\\",[-39,-275,0],{\\\"text\\\":\\\"v2: carry look-ahead adder\\\"}],[\\\"/user/add32_v3\\\",[0,-88,0]]],\\\"icon\\\":[[\\\"text\\\",[0,-11,0],{\\\"text\\\":\\\"ARITH\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[-32,8,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"AFN\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[-23,8,0],{\\\"text\\\":\\\"B[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"A[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,16,0],{\\\"text\\\":\\\"AFN\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[23,0,0],{\\\"text\\\":\\\"S[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"line\\\",[-24,-16,0,48,0]],[\\\"line\\\",[24,32,0,-48,0]],[\\\"property\\\",[0,-17,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"terminal\\\",[-16,40,5],{\\\"name\\\":\\\"Z\\\"}],[\\\"terminal\\\",[0,40,5],{\\\"name\\\":\\\"V\\\"}],[\\\"terminal\\\",[16,40,5],{\\\"name\\\":\\\"N\\\"}],[\\\"text\\\",[-16,31,0],{\\\"text\\\":\\\"Z\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[0,31,0],{\\\"text\\\":\\\"V\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[16,31,0],{\\\"text\\\":\\\"N\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[-24,-16,0,0,48]],[\\\"line\\\",[24,-16,0,0,48]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs AFN A[31:0] B[31:0]\\\\n.group outputs S[31:0] Z V N\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  1: afn=0, a=0X00000000, b=0X00000000, s=0X00000000\\\\n0 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  2: afn=0, a=0X00000000, b=0X00000001, s=0X00000001\\\\n0 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  3: afn=0, a=0X00000000, b=0XFFFFFFFF, s=0XFFFFFFFF\\\\n0 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH //  4: afn=0, a=0X00000000, b=0XAAAAAAAA, s=0XAAAAAAAA\\\\n0 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL //  5: afn=0, a=0X00000000, b=0X55555555, s=0X55555555\\\\n0 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  6: afn=0, a=0X00000001, b=0X00000000, s=0X00000001\\\\n0 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  7: afn=0, a=0X00000001, b=0X00000001, s=0X00000002\\\\n0 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  8: afn=0, a=0X00000001, b=0XFFFFFFFF, s=0X00000000\\\\n0 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH //  9: afn=0, a=0X00000001, b=0XAAAAAAAA, s=0XAAAAAAAB\\\\n0 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 10: afn=0, a=0X00000001, b=0X55555555, s=0X55555556\\\\n0 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 11: afn=0, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\\\n0 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 12: afn=0, a=0XFFFFFFFF, b=0X00000001, s=0X00000000\\\\n0 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 13: afn=0, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0XFFFFFFFE\\\\n0 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 14: afn=0, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0XAAAAAAA9\\\\n0 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 15: afn=0, a=0XFFFFFFFF, b=0X55555555, s=0X55555554\\\\n0 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 16: afn=0, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\\\n0 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 17: afn=0, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAAB\\\\n0 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 18: afn=0, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAA9\\\\n0 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 19: afn=0, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X55555554\\\\n0 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 20: afn=0, a=0XAAAAAAAA, b=0X55555555, s=0XFFFFFFFF\\\\n0 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 21: afn=0, a=0X55555555, b=0X00000000, s=0X55555555\\\\n0 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 22: afn=0, a=0X55555555, b=0X00000001, s=0X55555556\\\\n0 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 23: afn=0, a=0X55555555, b=0XFFFFFFFF, s=0X55555554\\\\n0 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 24: afn=0, a=0X55555555, b=0XAAAAAAAA, s=0XFFFFFFFF\\\\n0 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 25: afn=0, a=0X55555555, b=0X55555555, s=0XAAAAAAAA\\\\n1 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 26: fn=1, a=0X00000000, b=0X00000000, s=0X00000000\\\\n1 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 27: fn=1, a=0X00000000, b=0X00000001, s=0XFFFFFFFF\\\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 28: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\\\n1 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 29: fn=1, a=0X00000000, b=0XAAAAAAAA, s=0X55555556\\\\n1 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 30: fn=1, a=0X00000000, b=0X55555555, s=0XAAAAAAAB\\\\n1 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 31: fn=1, a=0X00000001, b=0X00000000, s=0X00000001\\\\n1 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 32: fn=1, a=0X00000001, b=0X00000001, s=0X00000000\\\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 33: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\\\n1 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 34: fn=1, a=0X00000001, b=0XAAAAAAAA, s=0X55555557\\\\n1 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 35: fn=1, a=0X00000001, b=0X55555555, s=0XAAAAAAAC\\\\n1 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 36: fn=1, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\\\n1 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 37: fn=1, a=0XFFFFFFFF, b=0X00000001, s=0XFFFFFFFE\\\\n1 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 38: fn=1, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0X00000000\\\\n1 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 39: fn=1, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0X55555555\\\\n1 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 40: fn=1, a=0XFFFFFFFF, b=0X55555555, s=0XAAAAAAAA\\\\n1 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 41: fn=1, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\\\n1 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 42: fn=1, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAA9\\\\n1 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 43: fn=1, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAAB\\\\n1 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 44: fn=1, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X00000000\\\\n1 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 45: fn=1, a=0XAAAAAAAA, b=0X55555555, s=0X55555555\\\\n1 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 46: fn=1, a=0X55555555, b=0X00000000, s=0X55555555\\\\n1 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 47: fn=1, a=0X55555555, b=0X00000001, s=0X55555554\\\\n1 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 48: fn=1, a=0X55555555, b=0XFFFFFFFF, s=0X55555556\\\\n1 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 49: fn=1, a=0X55555555, b=0XAAAAAAAA, s=0XAAAAAAAB\\\\n1 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 50: fn=1, a=0X55555555, b=0X55555555, s=0X00000000\\\\n1 01111111111111111111111111111111 11111111111111111111111111111111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 51: fn=1, a=0X7FFFFFFF, b=0XFFFFFFFF, s=0X80000000\\\\n1 00111111111111111111111111111111 11111111111111111111111111111111 LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 52: fn=1, a=0X3FFFFFFF, b=0XFFFFFFFF, s=0X40000000\\\\n1 00011111111111111111111111111111 11111111111111111111111111111111 LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 53: fn=1, a=0X1FFFFFFF, b=0XFFFFFFFF, s=0X20000000\\\\n1 00001111111111111111111111111111 11111111111111111111111111111111 LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 54: fn=1, a=0X0FFFFFFF, b=0XFFFFFFFF, s=0X10000000\\\\n1 00000111111111111111111111111111 11111111111111111111111111111111 LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 55: fn=1, a=0X07FFFFFF, b=0XFFFFFFFF, s=0X08000000\\\\n1 00000011111111111111111111111111 11111111111111111111111111111111 LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 56: fn=1, a=0X03FFFFFF, b=0XFFFFFFFF, s=0X04000000\\\\n1 00000001111111111111111111111111 11111111111111111111111111111111 LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 57: fn=1, a=0X01FFFFFF, b=0XFFFFFFFF, s=0X02000000\\\\n1 00000000111111111111111111111111 11111111111111111111111111111111 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLL // 58: fn=1, a=0X00FFFFFF, b=0XFFFFFFFF, s=0X01000000\\\\n1 00000000011111111111111111111111 11111111111111111111111111111111 LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLL // 59: fn=1, a=0X007FFFFF, b=0XFFFFFFFF, s=0X00800000\\\\n1 00000000001111111111111111111111 11111111111111111111111111111111 LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLL // 60: fn=1, a=0X003FFFFF, b=0XFFFFFFFF, s=0X00400000\\\\n1 00000000000111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLL // 61: fn=1, a=0X001FFFFF, b=0XFFFFFFFF, s=0X00200000\\\\n1 00000000000011111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL LLL // 62: fn=1, a=0X000FFFFF, b=0XFFFFFFFF, s=0X00100000\\\\n1 00000000000001111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL LLL // 63: fn=1, a=0X0007FFFF, b=0XFFFFFFFF, s=0X00080000\\\\n1 00000000000000111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL LLL // 64: fn=1, a=0X0003FFFF, b=0XFFFFFFFF, s=0X00040000\\\\n1 00000000000000011111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL LLL // 65: fn=1, a=0X0001FFFF, b=0XFFFFFFFF, s=0X00020000\\\\n1 00000000000000001111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL // 66: fn=1, a=0X0000FFFF, b=0XFFFFFFFF, s=0X00010000\\\\n1 00000000000000000111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL LLL // 67: fn=1, a=0X00007FFF, b=0XFFFFFFFF, s=0X00008000\\\\n1 00000000000000000011111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL LLL // 68: fn=1, a=0X00003FFF, b=0XFFFFFFFF, s=0X00004000\\\\n1 00000000000000000001111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL LLL // 69: fn=1, a=0X00001FFF, b=0XFFFFFFFF, s=0X00002000\\\\n1 00000000000000000000111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL LLL // 70: fn=1, a=0X00000FFF, b=0XFFFFFFFF, s=0X00001000\\\\n1 00000000000000000000011111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL LLL // 71: fn=1, a=0X000007FF, b=0XFFFFFFFF, s=0X00000800\\\\n1 00000000000000000000001111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL LLL // 72: fn=1, a=0X000003FF, b=0XFFFFFFFF, s=0X00000400\\\\n1 00000000000000000000000111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL LLL // 73: fn=1, a=0X700001FF, b=0XFFFFFFFF, s=0X00000200\\\\n1 00000000000000000000000011111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL // 74: fn=1, a=0X000000FF, b=0XFFFFFFFF, s=0X00000100\\\\n1 00000000000000000000000001111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLL // 75: fn=1, a=0X0000007F, b=0XFFFFFFFF, s=0X00000080\\\\n1 00000000000000000000000000111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLL // 76: fn=1, a=0X0000003F, b=0XFFFFFFFF, s=0X00000040\\\\n1 00000000000000000000000000011111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLL // 77: fn=1, a=0X0000001F, b=0XFFFFFFFF, s=0X00000020\\\\n1 00000000000000000000000000001111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL // 78: fn=1, a=0X0000000F, b=0XFFFFFFFF, s=0X00000010\\\\n1 00000000000000000000000000000111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLL // 79: fn=1, a=0X00000007, b=0XFFFFFFFF, s=0X00000008\\\\n1 00000000000000000000000000000011 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL // 80: fn=1, a=0X00000003, b=0XFFFFFFFF, s=0X00000004\\\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 81: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 82: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\\\n      \\\\n.plot X(AFN)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot Z\\\\n.plot V\\\\n.plot N\\\\n\\\"]]},\\\"/user/cl_inc\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/and2\\\",[-24,-24,0]],[\\\"port\\\",[-24,-24,0],{\\\"signal\\\":\\\"ph\\\"}],[\\\"port\\\",[-24,-8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[24,-16,0,16,0]],[\\\"port\\\",[40,-16,4],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-16,-43,0],{\\\"text\\\":\\\"gp logic\\\"}],[\\\"text\\\",[-15,6,0],{\\\"text\\\":\\\"carry logic\\\"}],[\\\"/gates/and2\\\",[-24,32,0]],[\\\"port\\\",[24,40,4],{\\\"signal\\\":\\\"ch\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[0,88,4],{\\\"signal\\\":\\\"cl\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[-8,88,0]],[\\\"wire\\\",[-8,88,0,-8,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-24,32,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-24,48,0,-8,0],{\\\"signal\\\":\\\"pl\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-8,-32,1],{\\\"name\\\":\\\"ph\\\"}],[\\\"terminal\\\",[16,-32,1],{\\\"name\\\":\\\"ch\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"pl\\\"}],[\\\"terminal\\\",[32,16,4],{\\\"name\\\":\\\"cl\\\"}],[\\\"terminal\\\",[16,40,3],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[-8,40,3],{\\\"name\\\":\\\"p\\\"}],[\\\"line\\\",[-32,-24,0,56,0]],[\\\"line\\\",[24,-24,0,0,56]],[\\\"line\\\",[24,32,0,-56,0]],[\\\"line\\\",[-32,32,0,0,-56]],[\\\"text\\\",[-8,-20,0],{\\\"text\\\":\\\"ph\\\"}],[\\\"text\\\",[-10,26,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[5,26,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[11,-21,0],{\\\"text\\\":\\\"ch\\\"}],[\\\"text\\\",[14,0,0],{\\\"text\\\":\\\"pl\\\"}],[\\\"text\\\",[14,17,0],{\\\"text\\\":\\\"cl\\\"}],[\\\"text\\\",[-18,-9,0],{\\\"text\\\":\\\"Hi\\\"}],[\\\"text\\\",[-19,19,0],{\\\"text\\\":\\\"HiLo\\\"}],[\\\"text\\\",[3,3,0],{\\\"text\\\":\\\"Lo\\\"}],[\\\"text\\\",[-32,2,0],{\\\"text\\\":\\\"CL_inc\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"property\\\",[-46,2,3],{\\\"format\\\":\\\"{name}\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/user/cla1_inc\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/xor2\\\",[-16,-120,0]],[\\\"wire\\\",[-16,-128,0,-64,0]],[\\\"wire\\\",[32,-112,0,16,0]],[\\\"port\\\",[-48,-104,0],{\\\"signal\\\":\\\"a\\\"}],[\\\"port\\\",[-80,-128,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-16,-120,0,0,-8]],[\\\"port\\\",[48,-112,4],{\\\"signal\\\":\\\"s\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-16,-104,0,-32,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A cin\\\\n.group outputs S\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n1 1 L\\\\n0 1 H\\\\n1 0 H\\\\n0 0 L\\\\n\\\\n.plot X(s)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[8,-8,1],{\\\"name\\\":\\\"a\\\"}],[\\\"terminal\\\",[32,16,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[16,40,3],{\\\"name\\\":\\\"s\\\"}],[\\\"text\\\",[15,27,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[10,15,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[6,5,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-26,14,0],{\\\"text\\\":\\\"cla1_inc\\\"}],[\\\"line\\\",[-56,32,0,80,0]],[\\\"line\\\",[24,32,0,0,-32]],[\\\"line\\\",[24,0,0,-80,0]],[\\\"line\\\",[-56,0,0,0,32]]]},\\\"/user/cla2_inc\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"wire\\\",[24,-32,0,16,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"wire\\\",[-16,80,0,0,-16],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-40,80,0,0,-16],{\\\"signal\\\":\\\"a[1]\\\"}],[\\\"wire\\\",[0,112,0,16,0],{\\\"signal\\\":\\\"a[0]\\\"}],[\\\"wire\\\",[0,128,0,16,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-16,152,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-40,152,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cl_inc\\\",[-32,112,0]],[\\\"/user/cla1_inc\\\",[-152,-48,0]],[\\\"port\\\",[-80,-72,1],{\\\"signal\\\":\\\"a[1:0]\\\"}],[\\\"wire\\\",[-120,-32,0,8,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-48,-96,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-144,-56,0,0,-8],{\\\"signal\\\":\\\"a[1]\\\"}],[\\\"wire\\\",[0,-56,0,0,-8],{\\\"signal\\\":\\\"a[0]\\\"}],[\\\"wire\\\",[-136,-8,0,0,24],{\\\"signal\\\":\\\"s[1]\\\"}],[\\\"wire\\\",[8,-8,0,0,24],{\\\"signal\\\":\\\"s[0]\\\"}],[\\\"/user/cla1_inc\\\",[-8,-48,0]]],\\\"icon\\\":[[\\\"terminal\\\",[24,8,1],{\\\"name\\\":\\\"a[1:0]\\\"}],[\\\"terminal\\\",[48,32,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[32,56,3],{\\\"name\\\":\\\"s[1:0]\\\"}],[\\\"terminal\\\",[-16,56,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[-15,42,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[31,43,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[26,31,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[22,21,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-24,29,0],{\\\"text\\\":\\\"cla2_inc\\\"}],[\\\"line\\\",[-40,48,0,80,0]],[\\\"line\\\",[40,48,0,0,-32]],[\\\"line\\\",[40,16,0,-80,0]],[\\\"line\\\",[-40,16,0,0,32]],[\\\"property\\\",[-40,7,0],{\\\"format\\\":\\\"{name}\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[1:0] cin\\\\n.group outputs S[1:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n01 1 HL\\\\n\\\\n.plot X(s[1:0])\\\"]]},\\\"/user/cla4_inc\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[1:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[3:2]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[3:2]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2_inc\\\",[-712,-88,0],{\\\"name\\\":\\\"high\\\"}],[\\\"/user/cla2_inc\\\",[-552,-88,0],{\\\"name\\\":\\\"low\\\"}],[\\\"/user/cl_inc\\\",[-560,88,0]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[3:0] cin\\\\n.group outputs S[3:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0001 1 LLHL\\\\n\\\\n.plot X(s[3:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[3:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[3:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-7,46,0],{\\\"text\\\":\\\"cla4_inc\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla8_inc\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[3:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[3:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[7:4]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[7:4]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla4_inc\\\",[-568,-104,0]],[\\\"/user/cla4_inc\\\",[-728,-104,0]],[\\\"/user/cl_inc\\\",[-560,88,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[7:0] cin\\\\n.group outputs S[7:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000001 1 LLLLLLHL\\\\n00000010 1 LLLLLLHH\\\\n11111111 1 LLLLLLLL\\\\n\\\\n.plot X(s[7:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[7:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[7:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-14,43,0],{\\\"text\\\":\\\"cla8_inc\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla16_inc\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[7:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[7:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[15:8]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[15:8]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cl_inc\\\",[-560,88,0]],[\\\"/user/cla8_inc\\\",[-568,-104,0]],[\\\"/user/cla8_inc\\\",[-728,-104,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[15:0] cin\\\\n.group outputs S[15:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000001 1 LLLLLLLL LLLLLLHL\\\\n00000000 00000010 1 LLLLLLLL LLLLLLHH\\\\n11111111 11111111 1 LLLLLLLL LLLLLLLL\\\\n\\\\n.plot X(s[15:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[15:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[15:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-8,47,0],{\\\"text\\\":\\\"cla16_inc\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cl_incLSB\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/and2\\\",[-24,-24,0]],[\\\"port\\\",[-24,-24,0],{\\\"signal\\\":\\\"ph\\\"}],[\\\"port\\\",[-24,-8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[24,-16,0,16,0]],[\\\"port\\\",[40,-16,4],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-16,-43,0],{\\\"text\\\":\\\"gp logic\\\"}],[\\\"text\\\",[-15,6,0],{\\\"text\\\":\\\"carry logic\\\"}],[\\\"port\\\",[24,40,4],{\\\"signal\\\":\\\"ch\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[16,40,0,-8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"jumper\\\",[16,40,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-8,-32,1],{\\\"name\\\":\\\"ph\\\"}],[\\\"terminal\\\",[16,-32,1],{\\\"name\\\":\\\"ch\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"pl\\\"}],[\\\"terminal\\\",[-8,40,3],{\\\"name\\\":\\\"p\\\"}],[\\\"line\\\",[-32,-24,0,56,0]],[\\\"line\\\",[24,-24,0,0,56]],[\\\"line\\\",[24,32,0,-56,0]],[\\\"line\\\",[-32,32,0,0,-56]],[\\\"text\\\",[-8,-20,0],{\\\"text\\\":\\\"ph\\\"}],[\\\"text\\\",[-10,26,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[11,-21,0],{\\\"text\\\":\\\"ch\\\"}],[\\\"text\\\",[14,0,0],{\\\"text\\\":\\\"pl\\\"}],[\\\"text\\\",[-18,-9,0],{\\\"text\\\":\\\"Hi\\\"}],[\\\"text\\\",[1,26,0],{\\\"text\\\":\\\"HiLo\\\"}],[\\\"text\\\",[8,-5,0],{\\\"text\\\":\\\"Lo\\\"}],[\\\"text\\\",[-31,13,0],{\\\"text\\\":\\\"CL_incLSB\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"property\\\",[-46,2,3],{\\\"format\\\":\\\"{name}\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/user/cla4_incLSB\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-472,-48,1],{\\\"signal\\\":\\\"A[1:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[3:2]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[3:2]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2_inc\\\",[-712,-88,0],{\\\"name\\\":\\\"high\\\"}],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"jumper\\\",[-520,-32,0]],[\\\"wire\\\",[-512,-32,0,8,0],{\\\"signal\\\":\\\"0'2\\\"}],[\\\"/user/cl_incLSB\\\",[-560,88,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[3:0]\\\\n.group outputs S[3:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0000 ----\\\\n0000 ----\\\\n0100 ----\\\\n1000 ----\\\\n1100 ----\\\\n\\\\n.plot X(a[3:0])\\\\n.plot X(s[3:0])\\\\n.plot X(p)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[3:0]\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[3:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-7,46,0],{\\\"text\\\":\\\"cla4_inclsb\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla8_incLSB\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[3:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[3:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[7:4]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[7:4]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla4_inc\\\",[-728,-104,0]],[\\\"/user/cla4_incLSB\\\",[-568,-104,0]],[\\\"/user/cl_incLSB\\\",[-560,88,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[7:0]\\\\n.group outputs S[7:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 --------\\\\n00000100 --------\\\\n00001000 --------\\\\n00001100 --------\\\\n00010000 --------\\\\n00010100 --------\\\\n00011000 --------\\\\n00011100 --------\\\\n00100000 --------\\\\n01100000 --------\\\\n01100100 --------\\\\n01101000 --------\\\\n01101100 --------\\\\n01110000 --------\\\\n11111111 --------\\\\n11111100 --------\\\\n\\\\n.plot X(a[7:0])\\\\n.plot X(s[7:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[7:0]\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[7:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-14,43,0],{\\\"text\\\":\\\"cla8_incLSB\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla16_incLSB\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[7:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[7:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[15:8]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[15:8]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla8_inc\\\",[-728,-104,0]],[\\\"/user/cla8_incLSB\\\",[-568,-104,0]],[\\\"/user/cl_incLSB\\\",[-560,88,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[15:0]\\\\n.group outputs S[15:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 -------- --------\\\\n00000000 00000100 -------- --------\\\\n00000000 00001100 -------- --------\\\\n00000000 00011100 -------- --------\\\\n00000000 00111100 -------- --------\\\\n00000000 01111100 -------- --------\\\\n00000000 11111100 -------- --------\\\\n\\\\n00000001 11111100 -------- --------\\\\n00000011 11111100 -------- --------\\\\n00000111 11111100 -------- --------\\\\n00001111 11111100 -------- --------\\\\n00011111 11111100 -------- --------\\\\n00111111 11111100 -------- --------\\\\n01111111 11111100 -------- --------\\\\n11111111 11111100 -------- --------\\\\n\\\\n.plot X(a[15:0])\\\\n.plot X(s[15:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[15:0]\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[15:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-18,47,0],{\\\"text\\\":\\\"cla16_inclsb\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/incr_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-352,216,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-422,-83,0],{\\\"text\\\":\\\"v2: cla adder\\\"}],[\\\"wire\\\",[-352,200,0,0,16]],[\\\"port\\\",[-312,-16,1],{\\\"signal\\\":\\\"A[15:0]\\\"}],[\\\"port\\\",[-304,48,3],{\\\"signal\\\":\\\"s[15:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-312,-8,0,0,-8]],[\\\"wire\\\",[-352,40,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-304,40,0,0,8]],[\\\"wire\\\",[-352,128,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-328,128,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-312,160,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"port\\\",[-472,-16,1],{\\\"signal\\\":\\\"A[31:16]\\\"}],[\\\"port\\\",[-464,48,3],{\\\"signal\\\":\\\"s[31:16]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-472,-8,0,0,-8]],[\\\"wire\\\",[-512,40,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-464,40,0,0,8]],[\\\"wire\\\",[-448,16,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"/user/cla16_inc\\\",[-512,-32,0]],[\\\"/user/cla16_incLSB\\\",[-352,-32,0]],[\\\"/user/cl_incLSB\\\",[-344,160,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0]\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000001  -------- -------- -------- -------- -\\\\n00000000 00000000 00000000 00000010  -------- -------- -------- -------- -\\\\n00000000 00000000 00000000 00000011  -------- -------- -------- -------- -\\\\n00000000 00000000 00000000 00001111  -------- -------- -------- -------- -\\\\n00000000 00000000 00000000 11111111  -------- -------- -------- -------- -\\\\n00000000 00000000 11111111 11111111  -------- -------- -------- -------- -\\\\n00000000 11111111 11111111 11111111  -------- -------- -------- -------- -\\\\n11111111 11111111 11111111 11111111  -------- -------- -------- -------- -\\\\n/*\\\\n00000000 00000000 00000000 00000000  LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000001  LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\\\n00000000 00000000 00000000 00000010  LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHH L\\\\n00000000 00000000 00000000 00000010  -LLLLLLL LLLLLLLL LLLLLLLL LLLLLLHH L\\\\n\\\\n11111111 11111111 11111111 11111111  LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n*/\\\\n\\\\n.plot X(A[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"incr_v2\\\\n\\\"}]]},\\\"/user/pc_v4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]},\\\"test-readonly\\\":{\\\"label\\\":\\\"test-readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"icon\\\":[[\\\"terminal\\\",[-8,8,0],{\\\"name\\\":\\\"ID[15:0]\\\"}],[\\\"terminal\\\",[-8,24,0],{\\\"name\\\":\\\"JT[31:2]\\\"}],[\\\"terminal\\\",[88,24,4],{\\\"name\\\":\\\"PC[31:0]\\\"}],[\\\"text\\\",[40,-3,0],{\\\"text\\\":\\\"PC_v4\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"text\\\",[1,8,0],{\\\"text\\\":\\\"ID[15:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[1,24,0],{\\\"text\\\":\\\"JT[31:2]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[1,56,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[79,24,0],{\\\"text\\\":\\\"PC[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"terminal\\\",[-8,40,0],{\\\"name\\\":\\\"PCSEL[2:0]\\\"}],[\\\"text\\\",[1,40,1],{\\\"text\\\":\\\"PCSEL[2:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[0,76,1,-4,-8]],[\\\"line\\\",[8,72,1,-4,8]],[\\\"terminal\\\",[88,40,4],{\\\"name\\\":\\\"PC_INC[31:0]\\\"}],[\\\"text\\\",[79,40,0],{\\\"text\\\":\\\"PC_INC[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"property\\\",[40,-10,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"terminal\\\",[-8,56,0],{\\\"name\\\":\\\"RESET\\\"}],[\\\"terminal\\\",[-8,72,0],{\\\"name\\\":\\\"CLK\\\"}],[\\\"terminal\\\",[88,56,4],{\\\"name\\\":\\\"PC_OFFSET[31:0]\\\"}],[\\\"text\\\",[79,56,0],{\\\"text\\\":\\\"PC_OFFSET[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"line\\\",[0,-8,0,0,88]],[\\\"line\\\",[0,80,0,80,0]],[\\\"line\\\",[80,80,0,0,-88]],[\\\"line\\\",[80,-8,0,-80,0]],[\\\"terminal\\\",[88,8,4],{\\\"name\\\":\\\"next_ia[31:0]\\\"}],[\\\"text\\\",[77,8,4],{\\\"text\\\":\\\"next_ia[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET PCSEL[2:0] ID[15:0] JT[31:0]\\\\n.group outputs PC[31:0] PC_INC[31:0] PC_OFFSET[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle CLK=0 assert inputs tran 50n CLK=1 tran 49n sample outputs tran 1n\\\\n\\\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\\\n1 100 0000000000000000 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   2: reset, PC==0x80000000\\\\n0 100 1111111111111110 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   3: xadr, PC==0x80000008, offset=-2\\\\n0 011 0111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLHLLLLLLLLLLLLLLHLL //   4: illop, PC==0x80000004, offset=0x7fff\\\\n0 010 0000000000000000 11111111111111111111111111110000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   5: jmp, pc==0XFFFFFFF0\\\\n0 000 1111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   6: inc, pc==0xFFFFFFF4, offset=-1\\\\n0 000 1111111111111110 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   7: inc, pc==0xFFFFFFF8, offset=-1\\\\n0 000 1111111111111101 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   8: inc, pc==0xFFFFFFFC, offset=-1\\\\n0 000 1111111111111100 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   9: inc, pc==0x80000000, offset=-1\\\\n0 010 1000000000000000 01111111111111111111111111111111 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHHHHHHHHHHHHLLLLLLLLLLLLLLLLL //  10: jmp to user mode, PC==0x7FFFFFFC, offset=0x8000\\\\n0 010 1111111111110111 10000111011001010100001100100001 LLLLLHHHLHHLLHLHLHLLLLHHLLHLLLLL LLLLLHHHLHHLLHLHLHLLLLHHLLHLLHLL LLLLLHHHLHHLLHLHLHLLLLHHLLLLLLLL //  11: jmp to super mode?, PC==0x07654320, offset=-9\\\\n0 010 0000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL //  12: jmp, PC==0x0\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL //  13: inc\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL //  14: inc\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL //  15: inc\\\\n0 001 0000000000000010 00000000000000000000000011110000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL //  16: br, offset=3, PC==0x1C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL //  17: inc\\\\n0 010 0000000000000000 00000000000000000000000000111100 LLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL //  18: jmp, PC==0x3C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL //  19: inc\\\\n0 010 0000000000000000 00000000000000000000000001111100 LLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL //  20: jmp, PC==0x7C\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL //  21: inc\\\\n0 010 0000000000000000 00000000000000001111111111111100 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL //  22: jmp, PC==0xFFFC\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL //  23: inc\\\\n0 010 0000000000000000 00000000111111111111111111111100 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL //  24: jmp, PC==0xFFFFFC\\\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL //  25: inc\\\\n0 010 0000000000000000 01111111111111111111111111111100 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  26: jmp, PC==0x7FFFFFFC\\\\n0 000 1111111111111110 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL //  27: inc\\\\n\\\\n.plot CLK\\\\n.plot RESET\\\\n.plot B(PCSEL[2:0])\\\\n.plot X(ID[15:0])\\\\n.plot X(JT[31:0])\\\\n.plot X(PC[31:0])\\\\n.plot X(PC_INC[31:0])\\\\n.plot X(PC_OFFSET[31:0])\\\"]],\\\"schematic\\\":[[\\\"port\\\",[8,-128,0],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[-40,-168,6],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[-216,16,0],{\\\"signal\\\":\\\"ID[15:0]\\\"}],[\\\"port\\\",[-408,-200,0],{\\\"signal\\\":\\\"JT[31:0]\\\"}],[\\\"port\\\",[-160,-208,0],{\\\"signal\\\":\\\"PCSEL[2:0]\\\"}],[\\\"port\\\",[48,-144,4],{\\\"signal\\\":\\\"PC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-112,4],{\\\"signal\\\":\\\"PC_INC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[32,-72,4],{\\\"signal\\\":\\\"PC_OFFSET[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/dreg\\\",[8,-144,0]],[\\\"wire\\\",[-96,-176,6,0,8],{\\\"signal\\\":\\\"pcsel[2]\\\"}],[\\\"/gates/mux2\\\",[-104,-144,6]],[\\\"/gates/mux4\\\",[-144,-184,0]],[\\\"wire\\\",[-128,-160,0,24,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-120,0,0,16],{\\\"signal\\\":\\\"pcsel[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,-136,6]],[\\\"wire\\\",[-48,-136,0,0,24],{\\\"signal\\\":\\\"0x80000000'32\\\"}],[\\\"wire\\\",[-160,-296,0,-16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-200,-48,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"text\\\",[-402,-32,0],{\\\"text\\\":\\\"sign extend and shift:\\\"}],[\\\"wire\\\",[-200,-64,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-144,-184,0,-16,0],{\\\"signal\\\":\\\"0x80000004'32\\\"}],[\\\"wire\\\",[-144,-152,0,-16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"wire\\\",[-104,-144,0,0,16],{\\\"signal\\\":\\\"0x80000008'32\\\"}],[\\\"wire\\\",[-48,-152,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[8,-144,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-200,-32,0,-16,0],{\\\"signal\\\":\\\"id[15]#14,id[15:0],0b00'2\\\"}],[\\\"jumper\\\",[-224,-112,0]],[\\\"wire\\\",[-40,-280,0,16,0],{\\\"signal\\\":\\\"inc[31:0]\\\"}],[\\\"wire\\\",[-80,-32,0,16,0],{\\\"signal\\\":\\\"boff[31:0]\\\"}],[\\\"jumper\\\",[24,-72,0]],[\\\"wire\\\",[24,-72,0,-16,0],{\\\"signal\\\":\\\"pc[31],boff[30:0]\\\"}],[\\\"wire\\\",[-224,-112,0,-8,0]],[\\\"wire\\\",[-232,-112,0,0,-24]],[\\\"wire\\\",[-144,-136,0,-88,0],{\\\"signal\\\":\\\"pc[31],inc[30:0]\\\"}],[\\\"/gates/and2\\\",[-440,-240,0]],[\\\"wire\\\",[-440,-240,0,-16,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-440,-224,0,-16,0],{\\\"signal\\\":\\\"jt[31]\\\"}],[\\\"wire\\\",[-392,-232,0,16,0],{\\\"signal\\\":\\\"supnext\\\"}],[\\\"wire\\\",[-144,-168,0,-16,0],{\\\"signal\\\":\\\"supnext,jt[30:2],0b00'2\\\"}],[\\\"text\\\",[-109,-198,0],{\\\"text\\\":\\\"map 0b1xx to IRQ\\\"}],[\\\"text\\\",[-52,-63,0],{\\\"text\\\":\\\"guard sbit\\\"}],[\\\"text\\\",[-377,-222,0],{\\\"text\\\":\\\"calc next sbit\\\"}],[\\\"text\\\",[-373,-168,0],{\\\"text\\\":\\\"guard sbit, word align address:\\\"}],[\\\"text\\\",[-357,-135,0],{\\\"text\\\":\\\"guard sbit (supervisor bit):\\\"}],[\\\"wire\\\",[8,-144,0,0,-32]],[\\\"wire\\\",[8,-176,4,-8,0]],[\\\"port\\\",[16,-176,4],{\\\"signal\\\":\\\"next_ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-411,-317,0],{\\\"text\\\":\\\"v4: cla adder\\\"}],[\\\"/user/add32_v3\\\",[-168,-48,0],{\\\"name\\\":\\\"branch_offset_adder\\\"}],[\\\"/user/incr_v2\\\",[-128,-296,0]]]},\\\"/user/alu_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"/alu/bool\\\",[-32,-40,0],{\\\"name\\\":\\\"bool\\\"}],[\\\"/alu/cmp\\\",[-32,88,0],{\\\"name\\\":\\\"cmp\\\"}],[\\\"wire\\\",[-64,96,0,-8,0],{\\\"signal\\\":\\\"FN[2:1]\\\"}],[\\\"wire\\\",[-64,-16,0,-8,0],{\\\"signal\\\":\\\"FN[3:0]\\\"}],[\\\"port\\\",[-128,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-128,-24,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-128,48,0],{\\\"signal\\\":\\\"FN[5:0]\\\"}],[\\\"port\\\",[104,72,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-64,-72,0,-8,0],{\\\"signal\\\":\\\"FN[1:0]\\\"}],[\\\"wire\\\",[-64,40,0,-8,0],{\\\"signal\\\":\\\"FN[0]\\\"}],[\\\"wire\\\",[-120,24,0,56,0]],[\\\"wire\\\",[-64,-80,0,-8,0],{\\\"signal\\\":\\\"B[4:0]\\\"}],[\\\"wire\\\",[-64,-88,0,-56,0]],[\\\"/gates/mux4\\\",[88,48,0]],[\\\"wire\\\",[-120,-32,0,56,0]],[\\\"wire\\\",[96,112,0,0,8],{\\\"signal\\\":\\\"FN[5:4]\\\"}],[\\\"/alu/shift\\\",[-32,-88,0],{\\\"name\\\":\\\"shift\\\"}],[\\\"wire\\\",[-48,64,0,0,8],{\\\"signal\\\":\\\"z\\\"}],[\\\"wire\\\",[-32,64,0,0,8],{\\\"signal\\\":\\\"v\\\"}],[\\\"wire\\\",[-16,64,0,0,8],{\\\"signal\\\":\\\"n\\\"}],[\\\"wire\\\",[-64,-24,0,-64,0]],[\\\"wire\\\",[-64,32,0,-64,0]],[\\\"wire\\\",[-128,-88,0,8,0]],[\\\"wire\\\",[0,-88,0,48,0]],[\\\"wire\\\",[0,24,0,8,0]],[\\\"wire\\\",[8,24,0,0,56]],[\\\"wire\\\",[0,-32,0,32,0]],[\\\"wire\\\",[-120,-32,0,0,56]],[\\\"wire\\\",[-120,-88,0,0,56]],[\\\"wire\\\",[-128,-24,0,0,56]],[\\\"wire\\\",[48,-88,0,0,136]],[\\\"wire\\\",[32,-32,0,0,96]],[\\\"wire\\\",[48,48,0,40,0],{\\\"signal\\\":\\\"shift[31:0]\\\"}],[\\\"wire\\\",[32,64,0,56,0],{\\\"signal\\\":\\\"bool[31:0]\\\"}],[\\\"wire\\\",[8,80,0,80,0],{\\\"signal\\\":\\\"arith[31:0]\\\"}],[\\\"wire\\\",[0,96,0,88,0],{\\\"signal\\\":\\\"cmp[31:0]\\\"}],[\\\"text\\\",[-80,-133,0],{\\\"text\\\":\\\"v2: cla adder\\\"}],[\\\"/user/arith_v2\\\",[-32,24,0],{\\\"name\\\":\\\"arith_v2\\\"}]],\\\"icon\\\":[[\\\"text\\\",[-8,-8,0],{\\\"text\\\":\\\"ALU_v2\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[-8,40,3],{\\\"name\\\":\\\"FN[5:0]\\\"}],[\\\"terminal\\\",[16,0,4],{\\\"name\\\":\\\"Y[31:0]\\\"}],[\\\"text\\\",[-23,16,0],{\\\"text\\\":\\\"A[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"B[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[7,0,0],{\\\"text\\\":\\\"Y[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[-8,25,0],{\\\"text\\\":\\\"FN[5:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[-24,-3,0,4,3]],[\\\"line\\\",[-20,0,0,-4,3]],[\\\"line\\\",[-24,32,0,32,-12]],[\\\"line\\\",[8,-21,0,-32,-11]],[\\\"line\\\",[-24,-32,0,0,29]],[\\\"line\\\",[-24,3,0,0,29]],[\\\"line\\\",[8,-21,0,0,41]],[\\\"property\\\",[-8,-27,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-left\\\"}],[\\\"line\\\",[-8,32,0,0,-6]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs FN[5:0] A[31:0] B[31:0]\\\\n.group outputs Y[31:0] Z V N\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n100000 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //   1: fn=F0000, a=0xff00ff00, b=0xffff0000, y=0x00000000\\\\n100001 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH LLH //   2: fn=F0001, a=0xff00ff00, b=0xffff0000, y=0x000000ff\\\\n100010 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHLLLLLLLL LLH //   3: fn=F0010, a=0xff00ff00, b=0xffff0000, y=0x0000ff00\\\\n100011 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //   4: fn=F0011, a=0xff00ff00, b=0xffff0000, y=0x0000ffff\\\\n100100 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLLLLLLLLL LLH //   5: fn=F0100, a=0xff00ff00, b=0xffff0000, y=0x00ff0000\\\\n100101 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLHHHHHHHH LLH //   6: fn=F0101, a=0xff00ff00, b=0xffff0000, y=0x00ff00ff\\\\n100110 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHLLLLLLLL LLH //   7: fn=  XOR, a=0xff00ff00, b=0xffff0000, y=0x00ffff00\\\\n100111 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //   8: fn=F0111, a=0xff00ff00, b=0xffff0000, y=0x00ffffff\\\\n101000 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLLLLLLLLL LLH //   9: fn=  AND, a=0xff00ff00, b=0xffff0000, y=0xff000000\\\\n101001 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLHHHHHHHH LLH //  10: fn= XNOR, a=0xff00ff00, b=0xffff0000, y=0xff0000ff\\\\n101010 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHLLLLLLLL LLH //  11: fn=    A, a=0xff00ff00, b=0xffff0000, y=0xff00ff00\\\\n101011 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHHHHHHHHH LLH //  12: fn=F1011, a=0xff00ff00, b=0xffff0000, y=0xff00ffff\\\\n101100 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLH //  13: fn=F1100, a=0xff00ff00, b=0xffff0000, y=0xffff0000\\\\n101101 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLHHHHHHHH LLH //  14: fn=F1101, a=0xff00ff00, b=0xffff0000, y=0xffff00ff\\\\n101110 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLH //  15: fn=   OR, a=0xff00ff00, b=0xffff0000, y=0xffffff00\\\\n101111 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  16: fn=F1111, a=0xff00ff00, b=0xffff0000, y=0xffffffff\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  17: fn=  SHL, a=0x00000000, b=0x00000000, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  18: fn=  SHR, a=0x00000000, b=0x00000000, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  19: fn=  SRA, a=0x00000000, b=0x00000000, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  20: fn=  SHL, a=0x00000000, b=0x00000001, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  21: fn=  SHR, a=0x00000000, b=0x00000001, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  22: fn=  SRA, a=0x00000000, b=0x00000001, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  23: fn=  SHL, a=0x00000000, b=0x00000002, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  24: fn=  SHR, a=0x00000000, b=0x00000002, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  25: fn=  SRA, a=0x00000000, b=0x00000002, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  26: fn=  SHL, a=0x00000000, b=0x00000004, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  27: fn=  SHR, a=0x00000000, b=0x00000004, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  28: fn=  SRA, a=0x00000000, b=0x00000004, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  29: fn=  SHL, a=0x00000000, b=0x00000008, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  30: fn=  SHR, a=0x00000000, b=0x00000008, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  31: fn=  SRA, a=0x00000000, b=0x00000008, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  32: fn=  SHL, a=0x00000000, b=0x00000010, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  33: fn=  SHR, a=0x00000000, b=0x00000010, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  34: fn=  SRA, a=0x00000000, b=0x00000010, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  35: fn=  SHL, a=0x00000000, b=0x0000001f, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  36: fn=  SHR, a=0x00000000, b=0x0000001f, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  37: fn=  SRA, a=0x00000000, b=0x0000001f, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  38: fn=  SHL, a=0x00000001, b=0x00000000, y=0x00000001\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  39: fn=  SHR, a=0x00000001, b=0x00000000, y=0x00000001\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  40: fn=  SRA, a=0x00000001, b=0x00000000, y=0x00000001\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  41: fn=  SHL, a=0x00000001, b=0x00000001, y=0x00000002\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  42: fn=  SHR, a=0x00000001, b=0x00000001, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  43: fn=  SRA, a=0x00000001, b=0x00000001, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL //  44: fn=  SHL, a=0x00000001, b=0x00000002, y=0x00000004\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  45: fn=  SHR, a=0x00000001, b=0x00000002, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  46: fn=  SRA, a=0x00000001, b=0x00000002, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL //  47: fn=  SHL, a=0x00000001, b=0x00000004, y=0x00000010\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  48: fn=  SHR, a=0x00000001, b=0x00000004, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  49: fn=  SRA, a=0x00000001, b=0x00000004, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL //  50: fn=  SHL, a=0x00000001, b=0x00000008, y=0x00000100\\\\n110001 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  51: fn=  SHR, a=0x00000001, b=0x00000008, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  52: fn=  SRA, a=0x00000001, b=0x00000008, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL //  53: fn=  SHL, a=0x00000001, b=0x00000010, y=0x00010000\\\\n110001 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  54: fn=  SHR, a=0x00000001, b=0x00000010, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  55: fn=  SRA, a=0x00000001, b=0x00000010, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  56: fn=  SHL, a=0x00000001, b=0x0000001f, y=0x80000000\\\\n110001 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  57: fn=  SHR, a=0x00000001, b=0x0000001f, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  58: fn=  SRA, a=0x00000001, b=0x0000001f, y=0x00000000\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  59: fn=  SHL, a=0xffffffff, b=0x00000000, y=0xffffffff\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  60: fn=  SHR, a=0xffffffff, b=0x00000000, y=0xffffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  61: fn=  SRA, a=0xffffffff, b=0x00000000, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL HLL //  62: fn=  SHL, a=0xffffffff, b=0x00000001, y=0xfffffffe\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000001 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  63: fn=  SHR, a=0xffffffff, b=0x00000001, y=0x7fffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  64: fn=  SRA, a=0xffffffff, b=0x00000001, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLL //  65: fn=  SHL, a=0xffffffff, b=0x00000002, y=0xfffffffc\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000010 LLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  66: fn=  SHR, a=0xffffffff, b=0x00000002, y=0x3fffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  67: fn=  SRA, a=0xffffffff, b=0x00000002, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL LLL //  68: fn=  SHL, a=0xffffffff, b=0x00000004, y=0xfffffff0\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000100 LLLLHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  69: fn=  SHR, a=0xffffffff, b=0x00000004, y=0x0fffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  70: fn=  SRA, a=0xffffffff, b=0x00000004, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLL //  71: fn=  SHL, a=0xffffffff, b=0x00000008, y=0xffffff00\\\\n110001 11111111111111111111111111111111 00000000000000000000000000001000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //  72: fn=  SHR, a=0xffffffff, b=0x00000008, y=0x00ffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  73: fn=  SRA, a=0xffffffff, b=0x00000008, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLL //  74: fn=  SHL, a=0xffffffff, b=0x00000010, y=0xffff0000\\\\n110001 11111111111111111111111111111111 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //  75: fn=  SHR, a=0xffffffff, b=0x00000010, y=0x0000ffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  76: fn=  SRA, a=0xffffffff, b=0x00000010, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  77: fn=  SHL, a=0xffffffff, b=0x0000001f, y=0x80000000\\\\n110001 11111111111111111111111111111111 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH //  78: fn=  SHR, a=0xffffffff, b=0x0000001f, y=0x00000001\\\\n110011 11111111111111111111111111111111 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  79: fn=  SRA, a=0xffffffff, b=0x0000001f, y=0xffffffff\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  80: fn=  SHL, a=0x12345678, b=0x00000000, y=0x12345678\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  81: fn=  SHR, a=0x12345678, b=0x00000000, y=0x12345678\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  82: fn=  SRA, a=0x12345678, b=0x00000000, y=0x12345678\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000001 LLHLLHLLLHHLHLLLHLHLHHLLHHHHLLLL LLL //  83: fn=  SHL, a=0x12345678, b=0x00000001, y=0x2468acf0\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  84: fn=  SHR, a=0x12345678, b=0x00000001, y=0x091a2b3c\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  85: fn=  SRA, a=0x12345678, b=0x00000001, y=0x091a2b3c\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000010 LHLLHLLLHHLHLLLHLHLHHLLHHHHLLLLL LLL //  86: fn=  SHL, a=0x12345678, b=0x00000002, y=0x48d159e0\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  87: fn=  SHR, a=0x12345678, b=0x00000002, y=0x048d159e\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  88: fn=  SRA, a=0x12345678, b=0x00000002, y=0x048d159e\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000100 LLHLLLHHLHLLLHLHLHHLLHHHHLLLLLLL LLL //  89: fn=  SHL, a=0x12345678, b=0x00000004, y=0x23456780\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  90: fn=  SHR, a=0x12345678, b=0x00000004, y=0x01234567\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  91: fn=  SRA, a=0x12345678, b=0x00000004, y=0x01234567\\\\n110000 00010010001101000101011001111000 00000000000000000000000000001000 LLHHLHLLLHLHLHHLLHHHHLLLLLLLLLLL LLL //  92: fn=  SHL, a=0x12345678, b=0x00000008, y=0x34567800\\\\n110001 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  93: fn=  SHR, a=0x12345678, b=0x00000008, y=0x00123456\\\\n110011 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  94: fn=  SRA, a=0x12345678, b=0x00000008, y=0x00123456\\\\n110000 00010010001101000101011001111000 00000000000000000000000000010000 LHLHLHHLLHHHHLLLLLLLLLLLLLLLLLLL LLL //  95: fn=  SHL, a=0x12345678, b=0x00000010, y=0x56780000\\\\n110001 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  96: fn=  SHR, a=0x12345678, b=0x00000010, y=0x00001234\\\\n110011 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  97: fn=  SRA, a=0x12345678, b=0x00000010, y=0x00001234\\\\n110000 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  98: fn=  SHL, a=0x12345678, b=0x0000001f, y=0x00000000\\\\n110001 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  99: fn=  SHR, a=0x12345678, b=0x0000001f, y=0x00000000\\\\n110011 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 100: fn=  SRA, a=0x12345678, b=0x0000001f, y=0x00000000\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 101: fn=  SHL, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 102: fn=  SHR, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 103: fn=  SRA, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHLHHLHHHLLHLHLHLHHHLLHHLLLL LLH // 104: fn=  SHL, a=0xfedcab98, b=0x00000001, y=0xfdb95730\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000001 LHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 105: fn=  SHR, a=0xfedcab98, b=0x00000001, y=0x7f6e55cc\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 106: fn=  SRA, a=0xfedcab98, b=0x00000001, y=0xff6e55cc\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHLHHLHHHLLHLHLHLHHHLLHHLLLLL LLH // 107: fn=  SHL, a=0xfedcab98, b=0x00000002, y=0xfb72ae60\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000010 LLHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 108: fn=  SHR, a=0xfedcab98, b=0x00000002, y=0x3fb72ae6\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 109: fn=  SRA, a=0xfedcab98, b=0x00000002, y=0xffb72ae6\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000100 HHHLHHLHHHLLHLHLHLHHHLLHHLLLLLLL LLH // 110: fn=  SHL, a=0xfedcab98, b=0x00000004, y=0xedcab980\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000100 LLLLHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 111: fn=  SHR, a=0xfedcab98, b=0x00000004, y=0x0fedcab9\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000100 HHHHHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 112: fn=  SRA, a=0xfedcab98, b=0x00000004, y=0xffedcab9\\\\n110000 11111110110111001010101110011000 00000000000000000000000000001000 HHLHHHLLHLHLHLHHHLLHHLLLLLLLLLLL LLH // 113: fn=  SHL, a=0xfedcab98, b=0x00000008, y=0xdcab9800\\\\n110001 11111110110111001010101110011000 00000000000000000000000000001000 LLLLLLLLHHHHHHHLHHLHHHLLHLHLHLHH LLH // 114: fn=  SHR, a=0xfedcab98, b=0x00000008, y=0x00fedcab\\\\n110011 11111110110111001010101110011000 00000000000000000000000000001000 HHHHHHHHHHHHHHHLHHLHHHLLHLHLHLHH LLH // 115: fn=  SRA, a=0xfedcab98, b=0x00000008, y=0xfffedcab\\\\n110000 11111110110111001010101110011000 00000000000000000000000000010000 HLHLHLHHHLLHHLLLLLLLLLLLLLLLLLLL LLH // 116: fn=  SHL, a=0xfedcab98, b=0x00000010, y=0xab980000\\\\n110001 11111110110111001010101110011000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHLHHLHHHLL LLH // 117: fn=  SHR, a=0xfedcab98, b=0x00000010, y=0x0000fedc\\\\n110011 11111110110111001010101110011000 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHLHHLHHHLL LLH // 118: fn=  SRA, a=0xfedcab98, b=0x00000010, y=0xfffffedc\\\\n110000 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 119: fn=  SHL, a=0xfedcab98, b=0x0000001f, y=0x00000000\\\\n110001 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 120: fn=  SHR, a=0xfedcab98, b=0x0000001f, y=0x00000001\\\\n110011 11111110110111001010101110011000 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 121: fn=  SRA, a=0xfedcab98, b=0x0000001f, y=0xffffffff\\\\n010000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 122: fn=  ADD, a=0x00000000, b=0x00000000, y=0x00000000\\\\n010000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 123: fn=  ADD, a=0x00000000, b=0x00000001, y=0x00000001\\\\n010000 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 124: fn=  ADD, a=0x00000000, b=0x-0000001, y=0xffffffff\\\\n010000 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 125: fn=  ADD, a=0x00000000, b=0xaaaaaaaa, y=0xaaaaaaaa\\\\n010000 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 126: fn=  ADD, a=0x00000000, b=0x55555555, y=0x55555555\\\\n010000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 127: fn=  ADD, a=0x00000001, b=0x00000000, y=0x00000001\\\\n010000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 128: fn=  ADD, a=0x00000001, b=0x00000001, y=0x00000002\\\\n010000 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 129: fn=  ADD, a=0x00000001, b=0x-0000001, y=0x00000000\\\\n010000 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 130: fn=  ADD, a=0x00000001, b=0xaaaaaaaa, y=0xaaaaaaab\\\\n010000 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 131: fn=  ADD, a=0x00000001, b=0x55555555, y=0x55555556\\\\n010000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 132: fn=  ADD, a=0x-0000001, b=0x00000000, y=0xffffffff\\\\n010000 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 133: fn=  ADD, a=0x-0000001, b=0x00000001, y=0x00000000\\\\n010000 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 134: fn=  ADD, a=0x-0000001, b=0x-0000001, y=0xfffffffe\\\\n010000 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 135: fn=  ADD, a=0x-0000001, b=0xaaaaaaaa, y=0xaaaaaaa9\\\\n010000 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 136: fn=  ADD, a=0x-0000001, b=0x55555555, y=0x55555554\\\\n010000 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 137: fn=  ADD, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\\\n010000 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 138: fn=  ADD, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaab\\\\n010000 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 139: fn=  ADD, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaa9\\\\n010000 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 140: fn=  ADD, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x55555554\\\\n010000 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 141: fn=  ADD, a=0xaaaaaaaa, b=0x55555555, y=0xffffffff\\\\n010000 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 142: fn=  ADD, a=0x55555555, b=0x00000000, y=0x55555555\\\\n010000 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 143: fn=  ADD, a=0x55555555, b=0x00000001, y=0x55555556\\\\n010000 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 144: fn=  ADD, a=0x55555555, b=0x-0000001, y=0x55555554\\\\n010000 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 145: fn=  ADD, a=0x55555555, b=0xaaaaaaaa, y=0xffffffff\\\\n010000 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 146: fn=  ADD, a=0x55555555, b=0x55555555, y=0xaaaaaaaa\\\\n010001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 147: fn=  SUB, a=0x00000000, b=0x00000000, y=0x00000000\\\\n010001 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 148: fn=  SUB, a=0x00000000, b=0x00000001, y=0xffffffff\\\\n010001 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 149: fn=  SUB, a=0x00000000, b=0x-0000001, y=0x00000001\\\\n010001 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 150: fn=  SUB, a=0x00000000, b=0xaaaaaaaa, y=0x55555556\\\\n010001 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 151: fn=  SUB, a=0x00000000, b=0x55555555, y=0xaaaaaaab\\\\n010001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 152: fn=  SUB, a=0x00000001, b=0x00000000, y=0x00000001\\\\n010001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 153: fn=  SUB, a=0x00000001, b=0x00000001, y=0x00000000\\\\n010001 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 154: fn=  SUB, a=0x00000001, b=0x-0000001, y=0x00000002\\\\n010001 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 155: fn=  SUB, a=0x00000001, b=0xaaaaaaaa, y=0x55555557\\\\n010001 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 156: fn=  SUB, a=0x00000001, b=0x55555555, y=0xaaaaaaac\\\\n010001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 157: fn=  SUB, a=0x-0000001, b=0x00000000, y=0xffffffff\\\\n010001 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 158: fn=  SUB, a=0x-0000001, b=0x00000001, y=0xfffffffe\\\\n010001 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 159: fn=  SUB, a=0x-0000001, b=0x-0000001, y=0x00000000\\\\n010001 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 160: fn=  SUB, a=0x-0000001, b=0xaaaaaaaa, y=0x55555555\\\\n010001 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 161: fn=  SUB, a=0x-0000001, b=0x55555555, y=0xaaaaaaaa\\\\n010001 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 162: fn=  SUB, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\\\n010001 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 163: fn=  SUB, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaa9\\\\n010001 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 164: fn=  SUB, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaab\\\\n010001 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 165: fn=  SUB, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x00000000\\\\n010001 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 166: fn=  SUB, a=0xaaaaaaaa, b=0x55555555, y=0x55555555\\\\n010001 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 167: fn=  SUB, a=0x55555555, b=0x00000000, y=0x55555555\\\\n010001 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 168: fn=  SUB, a=0x55555555, b=0x00000001, y=0x55555554\\\\n010001 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 169: fn=  SUB, a=0x55555555, b=0x-0000001, y=0x55555556\\\\n010001 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 170: fn=  SUB, a=0x55555555, b=0xaaaaaaaa, y=0xaaaaaaab\\\\n010001 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 171: fn=  SUB, a=0x55555555, b=0x55555555, y=0x00000000\\\\n000011 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 172: fn=CMPEQ, a=0x00000005, b=0xdeadbeef, y=0x00000000\\\\n000101 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 173: fn=CMPLT, a=0x00000005, b=0xdeadbeef, y=0x00000000\\\\n000111 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 174: fn=CMPLE, a=0x00000005, b=0xdeadbeef, y=0x00000000\\\\n000011 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 175: fn=CMPEQ, a=0x12345678, b=0x12345678, y=0x00000001\\\\n000101 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 176: fn=CMPLT, a=0x12345678, b=0x12345678, y=0x00000000\\\\n000111 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 177: fn=CMPLE, a=0x12345678, b=0x12345678, y=0x00000001\\\\n000011 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHL // 178: fn=CMPEQ, a=0x80000000, b=0x00000001, y=0x00000000\\\\n000101 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 179: fn=CMPLT, a=0x80000000, b=0x00000001, y=0x00000001\\\\n000111 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 180: fn=CMPLE, a=0x80000000, b=0x00000001, y=0x00000001\\\\n000011 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 181: fn=CMPEQ, a=0xdeadbeef, b=0x00000005, y=0x00000000\\\\n000101 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 182: fn=CMPLT, a=0xdeadbeef, b=0x00000005, y=0x00000001\\\\n000111 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 183: fn=CMPLE, a=0xdeadbeef, b=0x00000005, y=0x00000001\\\\n000011 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 184: fn=CMPEQ, a=0x7fffffff, b=0xffffffff, y=0x00000000\\\\n000101 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 185: fn=CMPLT, a=0x7fffffff, b=0xffffffff, y=0x00000000\\\\n000111 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 186: fn=CMPLE, a=0x7fffffff, b=0xffffffff, y=0x00000000\\\\n\\\\n// map FN[5:0] to text for operation\\\\n.plotdef op ? ? ? CMPEQ ? CMPLT ? CMPLE ? ? ? ? ? ? ? ? ADD SUB ? ? ? ? ? ? ? ? ? ? ? ? ? ? F0000 F0001 F0010 F0011 F0100 F0101 XOR F0111 AND XNOR A F1011 F1100 F1101 OR F1111 SHL SHR ? SRA ? ? ? ? ? ? ? ? ? ? ? ?\\\\n\\\\n.plot op(FN[5:0])\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(Y[31:0])\\\\n.plot Z\\\\n.plot V\\\\n.plot N\\\"]]},\\\"/user/beta_v6\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-392,-464,0],{\\\"signal\\\":\\\"next_id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-384,-408,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-48,-312,0],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/gates/mux2\\\",[-208,-272,7],{\\\"name\\\":\\\"mxasel\\\"}],[\\\"/gates/mux2\\\",[-104,-272,7],{\\\"name\\\":\\\"mxbsel\\\"}],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-104,-272,0,0,-16],{\\\"signal\\\":\\\"buf_id[15]#17,id[14:0]\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"buf_id[15],id[14:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1],{\\\"name\\\":\\\"mxwdsel1\\\"}],[\\\"/gates/mux2\\\",[-160,-136,1],{\\\"name\\\":\\\"mxwdsel2\\\"}],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]],[\\\"/user/ctl_v2\\\",[-368,-216,0]],[\\\"/gates/buffer_h\\\",[0,-432,0]],[\\\"wire\\\",[0,-432,0,-16,0],{\\\"signal\\\":\\\"id[15]\\\"}],[\\\"wire\\\",[32,-432,0,16,0],{\\\"signal\\\":\\\"buf_id[15]\\\"}],[\\\"text\\\",[8,-413,0],{\\\"text\\\":\\\"buffer heavily loaded signals\\\"}],[\\\"/gates/dreg\\\",[-376,-464,0]],[\\\"wire\\\",[-400,-392,0,16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"text\\\",[-324,-507,0],{\\\"text\\\":\\\"v6: cla adder\\\"}],[\\\"wire\\\",[-400,-408,0,16,0]],[\\\"wire\\\",[-376,-448,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-336,-464,0,16,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-392,-464,0,16,0]],[\\\"/user/pc_v4\\\",[-488,-416,0]],[\\\"/user/alu_v2\\\",[-168,-200,1]],[\\\"wire\\\",[-152,-232,0,16,0],{\\\"width\\\":\\\"32\\\"}],[\\\"/gates/buffer_h\\\",[-104,-232,2]],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-88,-272,0,40,0]],[\\\"wire\\\",[-48,-272,0,0,-40]],[\\\"wire\\\",[-48,-320,0,0,8]],[\\\"wire\\\",[-128,-320,0,80,0]],[\\\"wire\\\",[-96,-256,0,0,24]],[\\\"wire\\\",[-104,-232,0,8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-72,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-32,-32,0],{\\\"name\\\":\\\"mrd[31:0]\\\"}],[\\\"terminal\\\",[-32,-48,0],{\\\"name\\\":\\\"next_id[31:0]\\\"}],[\\\"text\\\",[-23,-48,0],{\\\"text\\\":\\\"next_ID[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-32,0],{\\\"text\\\":\\\"MRD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[-16,16,0,-8,4]],[\\\"line\\\",[-16,16,0,-8,-4]],[\\\"terminal\\\",[64,-48,4],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[55,-48,4],{\\\"text\\\":\\\"IA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-32,4],{\\\"name\\\":\\\"ma[31:0]\\\"}],[\\\"text\\\",[55,-32,4],{\\\"text\\\":\\\"MA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"moe\\\"}],[\\\"text\\\",[55,-16,4],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,0,4],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[55,0,4],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,16,4],{\\\"name\\\":\\\"mwd[31:0]\\\"}],[\\\"text\\\",[55,16,4],{\\\"text\\\":\\\"MWD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[16,-59,0],{\\\"text\\\":\\\"BETA_v6\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-64,0,0,88]],[\\\"line\\\",[-24,24,0,80,0]],[\\\"line\\\",[56,24,0,0,-88]],[\\\"line\\\",[56,-64,0,-80,0]],[\\\"property\\\",[16,-66,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}]]},\\\"/user/test_v7\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"text\\\",[-168,-101,0],{\\\"text\\\":\\\"v7: cla adder and incrementor, bufferring b/p-sel and using inverting logic in adder.\\\\n\\\\n\\\"}],[\\\"/user/beta_v6\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 3.4725n CLK=0 tran 4.4725n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/beta_v7\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-456,-272,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-536,-264,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-736,-168,0],{\\\"signal\\\":\\\"next_id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-384,-408,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-352,-224,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-352,-240,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-48,-312,0],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/gates/mux2\\\",[-208,-272,7],{\\\"name\\\":\\\"mxasel\\\"}],[\\\"/gates/mux2\\\",[-104,-272,7],{\\\"name\\\":\\\"mxbsel\\\"}],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-104,-272,0,0,-16],{\\\"signal\\\":\\\"buf_id[15]#17,id[14:0]\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-376,-272,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-376,-256,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-376,-288,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"buf_id[15],id[14:0]\\\"}],[\\\"wire\\\",[-456,-240,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1],{\\\"name\\\":\\\"mxwdsel1\\\"}],[\\\"/gates/mux2\\\",[-160,-136,1],{\\\"name\\\":\\\"mxwdsel2\\\"}],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-376,-208,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-376,-192,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-376,-176,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-376,-160,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-376,-144,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-456,-256,0,-32,0]],[\\\"/gates/and2\\\",[-536,-264,0]],[\\\"/gates/inverter\\\",[-568,-248,0]],[\\\"wire\\\",[-576,-248,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-296,-416,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-72,-432,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"jumper\\\",[-360,-240,0]],[\\\"jumper\\\",[-360,-224,0]],[\\\"wire\\\",[-376,-240,0,16,0]],[\\\"wire\\\",[-360,-224,0,-16,0]],[\\\"wire\\\",[-456,-288,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-587,-229,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]],[\\\"/user/ctl_v2\\\",[-400,-264,0]],[\\\"/gates/buffer_h\\\",[-784,-240,0]],[\\\"wire\\\",[-784,-240,0,-16,0],{\\\"signal\\\":\\\"id[15]\\\"}],[\\\"wire\\\",[-752,-240,0,16,0],{\\\"signal\\\":\\\"buf_id[15]\\\"}],[\\\"text\\\",[-776,-221,0],{\\\"text\\\":\\\"buffer heavily loaded signals\\\"}],[\\\"wire\\\",[-400,-392,0,16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"text\\\",[-756,-347,0],{\\\"text\\\":\\\"v6: cla adder\\\"}],[\\\"wire\\\",[-400,-408,0,16,0]],[\\\"wire\\\",[-640,-176,0,16,0],{\\\"signal\\\":\\\"id[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"/user/pc_v4\\\",[-488,-416,0]],[\\\"/user/alu_v2\\\",[-168,-200,1]],[\\\"wire\\\",[-152,-232,0,16,0],{\\\"width\\\":\\\"32\\\"}],[\\\"/gates/buffer_h\\\",[-104,-232,2]],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-88,-272,0,40,0]],[\\\"wire\\\",[-48,-272,0,0,-40]],[\\\"wire\\\",[-48,-320,0,0,8]],[\\\"wire\\\",[-128,-320,0,80,0]],[\\\"wire\\\",[-96,-256,0,0,24]],[\\\"wire\\\",[-104,-232,0,8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-72,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"text\\\",[-756,-336,0],{\\\"text\\\":\\\"v7: 2-stage pipeline\\\"}],[\\\"wire\\\",[-832,-144,0,-16,0],{\\\"signal\\\":\\\"pcsel[0]\\\"}],[\\\"wire\\\",[-832,-160,0,-16,0],{\\\"signal\\\":\\\"pcsel[1]\\\"}],[\\\"wire\\\",[-832,-176,0,-16,0],{\\\"signal\\\":\\\"pcsel[2]\\\"}],[\\\"wire\\\",[-832,-128,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"/gates/mux2\\\",[-720,-184,0],{\\\"name\\\":\\\"irExeMx\\\"}],[\\\"wire\\\",[-720,-168,0,-16,0]],[\\\"wire\\\",[-720,-184,0,-16,0],{\\\"signal\\\":\\\"0b10000011111000001111100000000000'32\\\"}],[\\\"/gates/dreg\\\",[-680,-176,0],{\\\"name\\\":\\\"dreg_id_exe\\\"}],[\\\"wire\\\",[-680,-160,0,0,16],{\\\"signal\\\":\\\"clk\\\"}],[\\\"/gates/dreg\\\",[-784,-296,0],{\\\"name\\\":\\\"dreg_pc_exe\\\"}],[\\\"wire\\\",[-784,-280,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-784,-296,0,-16,0],{\\\"signal\\\":\\\"pc_inc_exe[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-384,-376,0,-16,0],{\\\"signal\\\":\\\"pc_inc_exe[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-704,-176,0,24,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-672,-296,0,-72,0],{\\\"width\\\":\\\"32\\\",\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-192,-432,0,-104,0]],[\\\"wire\\\",[-128,-432,0,56,0]],[\\\"port\\\",[-752,-416,4],{\\\"signal\\\":\\\"pc_exe[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[-760,-416,0]],[\\\"wire\\\",[-760,-416,0,-8,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"port\\\",[-752,-400,4],{\\\"signal\\\":\\\"id_exe[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[-760,-400,0]],[\\\"wire\\\",[-760,-400,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"port\\\",[-752,-384,4],{\\\"signal\\\":\\\"pc_sel[2:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[-760,-384,0]],[\\\"wire\\\",[-760,-384,0,-8,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"text\\\",[-780,-430,0],{\\\"text\\\":\\\"debugging leads\\\"}],[\\\"/gates/or4\\\",[-832,-176,0]],[\\\"wire\\\",[-712,-152,0,-72,0]]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"clk\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"reset\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"irq\\\"}],[\\\"terminal\\\",[-32,-32,0],{\\\"name\\\":\\\"mrd[31:0]\\\"}],[\\\"terminal\\\",[-32,-48,0],{\\\"name\\\":\\\"next_id[31:0]\\\"}],[\\\"text\\\",[-23,-48,0],{\\\"text\\\":\\\"next_ID[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-32,0],{\\\"text\\\":\\\"MRD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"IRQ\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"RESET\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"line\\\",[-16,16,0,-8,4]],[\\\"line\\\",[-16,16,0,-8,-4]],[\\\"terminal\\\",[64,-48,4],{\\\"name\\\":\\\"ia[31:0]\\\"}],[\\\"text\\\",[55,-48,4],{\\\"text\\\":\\\"IA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-32,4],{\\\"name\\\":\\\"ma[31:0]\\\"}],[\\\"text\\\",[55,-32,4],{\\\"text\\\":\\\"MA[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"moe\\\"}],[\\\"text\\\",[55,-16,4],{\\\"text\\\":\\\"MOE\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,0,4],{\\\"name\\\":\\\"mwr\\\"}],[\\\"text\\\",[55,0,4],{\\\"text\\\":\\\"MWR\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"terminal\\\",[64,16,4],{\\\"name\\\":\\\"mwd[31:0]\\\"}],[\\\"text\\\",[55,16,4],{\\\"text\\\":\\\"MWD[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[16,-59,0],{\\\"text\\\":\\\"BETA_v7\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"line\\\",[-24,-64,0,0,88]],[\\\"line\\\",[-24,24,0,80,0]],[\\\"line\\\",[56,24,0,0,-88]],[\\\"line\\\",[56,-64,0,-80,0]],[\\\"property\\\",[16,-66,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"terminal\\\",[-152,-72,0],{\\\"name\\\":\\\"id_exe[31:0]\\\"}],[\\\"terminal\\\",[-152,-56,0],{\\\"name\\\":\\\"pc_sel[2:0]\\\"}],[\\\"terminal\\\",[-152,-40,0]],[\\\"terminal\\\",[-152,-32,0]],[\\\"terminal\\\",[-152,-24,0]],[\\\"terminal\\\",[-152,-48,0]],[\\\"terminal\\\",[-152,-64,0],{\\\"name\\\":\\\"pc_exe[31:0]\\\"}],[\\\"terminal\\\",[-152,-16,0]],[\\\"terminal\\\",[-152,-8,0]],[\\\"terminal\\\",[-152,0,0]],[\\\"text\\\",[-136,-72,0],{\\\"text\\\":\\\"id_exe[31:0]\\\"}],[\\\"text\\\",[-136,-64,0],{\\\"text\\\":\\\"pc_exe[31:0]\\\"}],[\\\"text\\\",[-136,-57,0],{\\\"text\\\":\\\"pc_sel[2:0]\\\"}],[\\\"text\\\",[-136,-49,0]],[\\\"text\\\",[-135,-40,0]],[\\\"text\\\",[-135,-32,0]],[\\\"text\\\",[-135,-24,0]],[\\\"text\\\",[-135,-16,0]],[\\\"text\\\",[-135,-8,0]],[\\\"text\\\",[-135,1,0]]]},\\\"/user/test_v8\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"text\\\",[-168,-101,0],{\\\"text\\\":\\\"v7: cla adder and incrementor, bufferring b/p-sel and using inverting logic in adder.\\\\n\\\\n\\\"}],[\\\"text\\\",[-168,-91,0],{\\\"text\\\":\\\"v8: 2-stage pipeline.\\\"}],[\\\"/user/beta_v7\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 49n CLK=0 tran 50n\\\\n\\\\n1\\\\n.repeat 1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/beta_v7_test\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"text\\\",[-168,-101,0],{\\\"text\\\":\\\"v7: cla adder and incrementor, bufferring b/p-sel and using inverting logic in adder.\\\\n\\\\n\\\"}],[\\\"text\\\",[-168,-91,0],{\\\"text\\\":\\\"v8: 2-stage pipeline.\\\"}],[\\\"/user/beta_v7\\\",[-128,40,0]],[\\\"wire\\\",[-280,-32,0,-8,0],{\\\"signal\\\":\\\"id_exe[31:0]\\\"}],[\\\"wire\\\",[-280,-24,0,-8,0],{\\\"signal\\\":\\\"pc_exe[31:0]\\\"}],[\\\"wire\\\",[-280,-16,0,-8,0],{\\\"signal\\\":\\\"pc_sel[2:0]\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 49n CLK=0 tran 50n\\\\n\\\\n1 //zeros cause errors in final output here \\\\n1 //wait two cycles before start: avoid overlapping text in plot\\\\n\\\\n1\\\\n.repeat 6 //500//1140\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n/* /.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n//.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n*/\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n\\\\n.plot X(pc_exe[31:0])\\\\n.plot X(id_exe[31:0])\\\\n.plot X(pc_sel[2:0])\\\\n\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]},\\\"/user/beta_v7_test_reference\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"// Design project benchmark -- DO NOT MODIFY!\\\\n+ 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008 0x739f008e 0x739f00b1 0x739f0117 0x739f0129\\\\n+ 0x739f0134 0x679f0718 0x73ffffff 0x0000071c 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000\\\\n+ 0x67dc0004 0x08000000 0x67dc0008 0x0c000000 0x67dc000c 0x10000000 0x67dc0010 0x14000000\\\\n+ 0x67dc0014 0x18000000 0x67dc0018 0x1c000000 0x67dc001c 0x20000000 0x67dc0020 0x24000000\\\\n+ 0x67dc0024 0x28000000 0x67dc0028 0x2c000000 0x67dc002c 0x30000000 0x67dc0030 0x34000000\\\\n+ 0x67dc0034 0x38000000 0x67dc0038 0x3c000000 0x67dc003c 0x40000000 0x67dc0040 0x44000000\\\\n+ 0x67dc0044 0x48000000 0x67dc0048 0x4c000000 0x67dc004c 0x50000000 0x67dc0050 0x54000000\\\\n+ 0x67dc0054 0x58000000 0x67dc0058 0x5c000000 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060\\\\n+ 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000\\\\n+ 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800\\\\n+ 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800 0x906db800 0x83c21800 0x67dc0090 0x944d6800\\\\n+ 0x946db800 0x83c21800 0x67dc0094 0x984d6800 0x98776800 0x83c21800 0x67dc0098 0x9c000000\\\\n+ 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800\\\\n+ 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8\\\\n+ 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0\\\\n+ 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0\\\\n+ 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0\\\\n+ 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a\\\\n+ 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025 0x739f0005 0x643f0634 0x641f0638 0x639dfffc\\\\n+ 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000\\\\n+ 0x77e60003 0x84002000 0x80632800 0x73ff0002 0x80002000 0x84632800 0xc4420001 0xd4c20000\\\\n+ 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004\\\\n+ 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc\\\\n+ 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc\\\\n+ 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4 0x73e10005 0x60410004 0x64010004 0x8001f800\\\\n+ 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc\\\\n+ 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800\\\\n+ 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0\\\\n+ 0x77e00001 0x73e1000a 0x73e10007 0x60400000 0x60610000 0x90421800 0x73e20003 0x60000004\\\\n+ 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc\\\\n+ 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000\\\\n+ 0x00000001 0x00000488 0x0000000a 0x00000490 0x00000003 0x00000478 0x00000009 0x00000448\\\\n+ 0x00000005 0x00000470 0x00000007 0x00000480 0x00000006 0x00000468 0x00000004 0x00000460\\\\n+ 0x00000008 0x00000458 0x00000002 0x00000450 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc\\\\n+ 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004\\\\n+ 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc\\\\n+ 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014 0xc0000001 0xc0210003 0x80000800 0x80200800\\\\n+ 0xc4420001 0x77e2fffa 0x80010000 0x641f0710 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc\\\\n+ 0x641f0714 0x6ffc0000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed 0xedededed\\\\n+ 0x00000001 0x00000000 0x0000000a 0x00000658 0x00000003 0x00000688 0x00000009 0x00000680\\\\n+ 0x00000005 0x00000678 0x00000007 0x00000670 0x00000006 0x00000660 0x00000004 0x00000650\\\\n+ 0x00000008 0x00000668 0x00000002 0x00000640 0x0000000b 0x00000648 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000\\\\n+ 0x00000000 0x00000000 0x00000000 0x00000000 0xedededed 0x0badbabe 0xedededed 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[160,32,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[184,48,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for the\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Design Project test program.\\\"}],[\\\"/gates/tristate\\\",[168,32,0]],[\\\"wire\\\",[200,32,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[200,32,0,0,-16]],[\\\"wire\\\",[120,16,0,80,0]],[\\\"text\\\",[-168,-101,0],{\\\"text\\\":\\\"v7: cla adder and incrementor, bufferring b/p-sel and using inverting logic in adder.\\\\n\\\\n\\\"}],[\\\"/user/beta_v6\\\",[-128,40,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 1n assert inputs tran 49n CLK=0 tran 50n\\\\n\\\\n1\\\\n1 //0's will cause errors here\\\\n\\\\n1\\\\n.repeat 6 //1140 //should have no errors if repeated 1140 times\\\\n0\\\\n\\\\n// Verify correct completion of benchmark -- DO NOT MODIFY!\\\\n.mverify Main 0x0 0x73ff0008 0x6ffe0000 0x73ffffff 0x00000000   // Beta addr 0x0\\\\n.mverify Main 0x4 0x00000000 0x00000000 0x00000000 0x00000000   // Beta addr 0x10\\\\n.mverify Main 0x8 0x0000071c 0xc01f0000 0x7fbf0008 0x739f0008   // Beta addr 0x20\\\\n.mverify Main 0xc 0x739f008e 0x739f00b1 0x739f0117 0x739f0129   // Beta addr 0x30\\\\n.mverify Main 0x10 0x739f0134 0x679f0718 0x73ffffff 0x0000071c   // Beta addr 0x40\\\\n.mverify Main 0x14 0xc3bd0004 0x679dfffc 0xc39f0528 0x04000000   // Beta addr 0x50\\\\n.mverify Main 0x18 0x67dc0004 0x08000000 0x67dc0008 0x0c000000   // Beta addr 0x60\\\\n.mverify Main 0x1c 0x67dc000c 0x10000000 0x67dc0010 0x14000000   // Beta addr 0x70\\\\n.mverify Main 0x20 0x67dc0014 0x18000000 0x67dc0018 0x1c000000   // Beta addr 0x80\\\\n.mverify Main 0x24 0x67dc001c 0x20000000 0x67dc0020 0x24000000   // Beta addr 0x90\\\\n.mverify Main 0x28 0x67dc0024 0x28000000 0x67dc0028 0x2c000000   // Beta addr 0xa0\\\\n.mverify Main 0x2c 0x67dc002c 0x30000000 0x67dc0030 0x34000000   // Beta addr 0xb0\\\\n.mverify Main 0x30 0x67dc0034 0x38000000 0x67dc0038 0x3c000000   // Beta addr 0xc0\\\\n.mverify Main 0x34 0x67dc003c 0x40000000 0x67dc0040 0x44000000   // Beta addr 0xd0\\\\n.mverify Main 0x38 0x67dc0044 0x48000000 0x67dc0048 0x4c000000   // Beta addr 0xe0\\\\n.mverify Main 0x3c 0x67dc004c 0x50000000 0x67dc0050 0x54000000   // Beta addr 0xf0\\\\n.mverify Main 0x40 0x67dc0054 0x58000000 0x67dc0058 0x5c000000   // Beta addr 0x100\\\\n.mverify Main 0x44 0x67dc005c 0xc01fffff 0x62e00001 0x66fc0060   // Beta addr 0x110\\\\n.mverify Main 0x48 0x68000000 0x67dc0068 0xc23f0134 0x6ff10000   // Beta addr 0x120\\\\n.mverify Main 0x4c 0x67df0628 0x663c006c 0x7dbf004b 0x73cd0000   // Beta addr 0x130\\\\n.mverify Main 0x50 0x67dc0070 0x77cd0001 0x679f0628 0x67dc0074   // Beta addr 0x140\\\\n.mverify Main 0x54 0x78000000 0x67dc0078 0x65bc007c 0x83cdb800   // Beta addr 0x150\\\\n.mverify Main 0x58 0x67dc0080 0x87cdb800 0x67dc0084 0x904d6800   // Beta addr 0x160\\\\n.mverify Main 0x5c 0x906db800 0x83c21800 0x67dc0090 0x944d6800   // Beta addr 0x170\\\\n.mverify Main 0x60 0x946db800 0x83c21800 0x67dc0094 0x984d6800   // Beta addr 0x180\\\\n.mverify Main 0x64 0x98776800 0x83c21800 0x67dc0098 0x9c000000   // Beta addr 0x190\\\\n.mverify Main 0x68 0x67dc009c 0xa3cdb800 0x67dc00a0 0xa7cdb800   // Beta addr 0x1a0\\\\n.mverify Main 0x6c 0x67dc00a4 0xabcdb800 0x67dc00a8 0xafcdb800   // Beta addr 0x1b0\\\\n.mverify Main 0x70 0x67dc00ac 0xc05f0004 0xb3d71000 0x67dc00b0   // Beta addr 0x1c0\\\\n.mverify Main 0x74 0xb7d71000 0x67dc00b4 0xbbd71000 0x67dc00b8   // Beta addr 0x1d0\\\\n.mverify Main 0x78 0xbc000000 0x67dc00bc 0xc3c00001 0x67dc00c0   // Beta addr 0x1e0\\\\n.mverify Main 0x7c 0xc7cdffff 0x67dc00c4 0xd3dc0528 0x67dc00d0   // Beta addr 0x1f0\\\\n.mverify Main 0x80 0xd7cd0000 0x67dc00d4 0xdbc0ffff 0x67dc00d8   // Beta addr 0x200\\\\n.mverify Main 0x84 0xdc000000 0x67dc00dc 0xe3cd7654 0x67dc00e0   // Beta addr 0x210\\\\n.mverify Main 0x88 0xe7cdffff 0x67dc00e4 0xebcdffff 0x67dc00e8   // Beta addr 0x220\\\\n.mverify Main 0x8c 0xedadffff 0x65bc00ec 0xf3d70020 0x67dc00f0   // Beta addr 0x230\\\\n.mverify Main 0x90 0xf7cd0006 0x67dc00f4 0xfbcd0007 0x67dc00f8   // Beta addr 0x240\\\\n.mverify Main 0x94 0xfc000000 0x67dc00fc 0x639dfffc 0xc3bdfffc   // Beta addr 0x250\\\\n.mverify Main 0x98 0x6ffc0000 0xabadbabe 0xdeadbeef 0xc3bd0004   // Beta addr 0x260\\\\n.mverify Main 0x9c 0x679dfffc 0xc01f7ff9 0xc03f0005 0x739f000a   // Beta addr 0x270\\\\n.mverify Main 0xa0 0x643f062c 0x641f0630 0xc01f7de3 0xc03f0025   // Beta addr 0x280\\\\n.mverify Main 0xa4 0x739f0005 0x643f0634 0x641f0638 0x639dfffc   // Beta addr 0x290\\\\n.mverify Main 0xa8 0xc3bdfffc 0x6ffc0000 0xc05f0010 0xc07f0000   // Beta addr 0x2a0\\\\n.mverify Main 0xac 0xb0811000 0xc0bf0001 0xb0a51000 0xd4c00000   // Beta addr 0x2b0\\\\n.mverify Main 0xb0 0x77e60003 0x84002000 0x80632800 0x73ff0002   // Beta addr 0x2c0\\\\n.mverify Main 0xb4 0x80002000 0x84632800 0xc4420001 0xd4c20000   // Beta addr 0x2d0\\\\n.mverify Main 0xb8 0x73e6fff3 0xd4c00000 0x73e60002 0x80010000   // Beta addr 0x2e0\\\\n.mverify Main 0xbc 0xc4630001 0x8023f800 0x6ffc0000 0xc3bd0004   // Beta addr 0x2f0\\\\n.mverify Main 0xc0 0x679dfffc 0xc01f0690 0xc3bd0004 0x641dfffc   // Beta addr 0x300\\\\n.mverify Main 0xc4 0x739f000c 0xc7bd0004 0xc3bd0004 0x641dfffc   // Beta addr 0x310\\\\n.mverify Main 0xc8 0xc01f0440 0xc3bd0004 0x641dfffc 0x739f001f   // Beta addr 0x320\\\\n.mverify Main 0xcc 0xc7bd0008 0x641f063c 0x639dfffc 0xc3bdfffc   // Beta addr 0x330\\\\n.mverify Main 0xd0 0x6ffc0000 0xc3bd0004 0x679dfffc 0xc3bd0004   // Beta addr 0x340\\\\n.mverify Main 0xd4 0x677dfffc 0x837df800 0xc3bd0004 0x643dfffc   // Beta addr 0x350\\\\n.mverify Main 0xd8 0xc3bd0004 0x645dfffc 0xc01f0000 0x603bfff4   // Beta addr 0x360\\\\n.mverify Main 0xdc 0x73e10005 0x60410004 0x64010004 0x8001f800   // Beta addr 0x370\\\\n.mverify Main 0xe0 0x8022f800 0x77e1fffb 0x605dfffc 0xc3bdfffc   // Beta addr 0x380\\\\n.mverify Main 0xe4 0x603dfffc 0xc3bdfffc 0x637dfffc 0xc3bdfffc   // Beta addr 0x390\\\\n.mverify Main 0xe8 0x639dfffc 0xc3bdfffc 0x6ffc0000 0xc3bd0004   // Beta addr 0x3a0\\\\n.mverify Main 0xec 0x679dfffc 0xc3bd0004 0x677dfffc 0x837df800   // Beta addr 0x3b0\\\\n.mverify Main 0xf0 0xc3bd0004 0x643dfffc 0xc3bd0004 0x645dfffc   // Beta addr 0x3c0\\\\n.mverify Main 0xf4 0xc3bd0004 0x647dfffc 0x601bfff4 0x603bfff0   // Beta addr 0x3d0\\\\n.mverify Main 0xf8 0x77e00001 0x73e1000a 0x73e10007 0x60400000   // Beta addr 0x3e0\\\\n.mverify Main 0xfc 0x60610000 0x90421800 0x73e20003 0x60000004   // Beta addr 0x3f0\\\\n.mverify Main 0x100 0x60210004 0x73fffff6 0xc01f0000 0x73ff0001   // Beta addr 0x400\\\\n.mverify Main 0x104 0xc01f0001 0x607dfffc 0xc3bdfffc 0x605dfffc   // Beta addr 0x410\\\\n.mverify Main 0x108 0xc3bdfffc 0x603dfffc 0xc3bdfffc 0x637dfffc   // Beta addr 0x420\\\\n.mverify Main 0x10c 0xc3bdfffc 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x430\\\\n.mverify Main 0x110 0x00000001 0x00000488 0x0000000a 0x00000490   // Beta addr 0x440\\\\n.mverify Main 0x114 0x00000003 0x00000478 0x00000009 0x00000448   // Beta addr 0x450\\\\n.mverify Main 0x118 0x00000005 0x00000470 0x00000007 0x00000480   // Beta addr 0x460\\\\n.mverify Main 0x11c 0x00000006 0x00000468 0x00000004 0x00000460   // Beta addr 0x470\\\\n.mverify Main 0x120 0x00000008 0x00000458 0x00000002 0x00000450   // Beta addr 0x480\\\\n.mverify Main 0x124 0x0000000b 0x00000000 0xc3bd0004 0x679dfffc   // Beta addr 0x490\\\\n.mverify Main 0x128 0xc05f0002 0xc0ff0698 0x739f0000 0xc01f003c   // Beta addr 0x4a0\\\\n.mverify Main 0x12c 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x4b0\\\\n.mverify Main 0x130 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x4c0\\\\n.mverify Main 0x134 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x4d0\\\\n.mverify Main 0x138 0x6ffc0000 0xc01f0000 0xc03f0000 0xc05f0014   // Beta addr 0x4e0\\\\n.mverify Main 0x13c 0xc0000001 0xc0210003 0x80000800 0x80200800   // Beta addr 0x4f0\\\\n.mverify Main 0x140 0xc4420001 0x77e2fffa 0x80010000 0x641f0710   // Beta addr 0x500\\\\n.mverify Main 0x144 0x6ffc0000 0xc01f1000 0x6780fffc 0x6000fffc   // Beta addr 0x510\\\\n.mverify Main 0x148 0x641f0714 0x6ffc0000 0x00000000 0x80000060   // Beta addr 0x520\\\\n.mverify Main 0x14c 0x80000068 0x80000070 0x80000078 0x80000080   // Beta addr 0x530\\\\n.mverify Main 0x150 0x80000088 0x80000090 0x80000098 0x800000a0   // Beta addr 0x540\\\\n.mverify Main 0x154 0x800000a8 0x800000b0 0x800000b8 0x800000c0   // Beta addr 0x550\\\\n.mverify Main 0x158 0x800000c8 0x800000d0 0x800000d8 0x800000e0   // Beta addr 0x560\\\\n.mverify Main 0x15c 0x800000e8 0x800000f0 0x800000f8 0x80000100   // Beta addr 0x570\\\\n.mverify Main 0x160 0x80000108 0x80000110 0x73ff0008 0x00000000   // Beta addr 0x580\\\\n.mverify Main 0x164 0x80000124 0x00000134 0x00000140 0x00000148   // Beta addr 0x590\\\\n.mverify Main 0x168 0x00000154 0xdeadbeef 0x52acbef7 0x6aaebee7   // Beta addr 0x5a0\\\\n.mverify Main 0x16c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5b0\\\\n.mverify Main 0x170 0x00000001 0x000001a0 0x52ad0008 0xffffbeef   // Beta addr 0x5c0\\\\n.mverify Main 0x174 0xad52bee7 0x52ad4118 0x3ff00080 0x073ff000   // Beta addr 0x5d0\\\\n.mverify Main 0x178 0x073ff000 0x000001e4 0x00000000 0xdeadbef0   // Beta addr 0x5e0\\\\n.mverify Main 0x17c 0x00000000 0x00000000 0x00000001 0x00000001   // Beta addr 0x5f0\\\\n.mverify Main 0x180 0x00000001 0x00000214 0x00003644 0xffffffff   // Beta addr 0x600\\\\n.mverify Main 0x184 0x21524110 0xdeadbeef 0x73ff0008 0x037ab6fb   // Beta addr 0x610\\\\n.mverify Main 0x188 0xffbd5b7d 0x00000254 0xedededed 0x00001998   // Beta addr 0x620\\\\n.mverify Main 0x18c 0x00000001 0x00000367 0x00000000 0x00000001   // Beta addr 0x630\\\\n.mverify Main 0x190 0x00000001 0x00000688 0x0000000a 0x00000690   // Beta addr 0x640\\\\n.mverify Main 0x194 0x00000003 0x00000678 0x00000009 0x00000648   // Beta addr 0x650\\\\n.mverify Main 0x198 0x00000005 0x00000670 0x00000007 0x00000680   // Beta addr 0x660\\\\n.mverify Main 0x19c 0x00000006 0x00000668 0x00000004 0x00000660   // Beta addr 0x670\\\\n.mverify Main 0x1a0 0x00000008 0x00000658 0x00000002 0x00000650   // Beta addr 0x680\\\\n.mverify Main 0x1a4 0x0000000b 0x00000000 0x739f0000 0xc01f003c   // Beta addr 0x690\\\\n.mverify Main 0x1a8 0x80c7f800 0x603cfffc 0x64270000 0xc39c0004   // Beta addr 0x6a0\\\\n.mverify Main 0x1ac 0xc0e70004 0xc4000004 0x77e0fffa 0xc4420001   // Beta addr 0x6b0\\\\n.mverify Main 0x1b0 0x73e20001 0x6fe60000 0x639dfffc 0xc3bdfffc   // Beta addr 0x6c0\\\\n.mverify Main 0x1b4 0x6ffc0000 0x739f0000 0xc01f003c 0x80c7f800   // Beta addr 0x6d0\\\\n.mverify Main 0x1b8 0x603cfffc 0x64270000 0xc39c0004 0xc0e70004   // Beta addr 0x6e0\\\\n.mverify Main 0x1bc 0xc4000004 0x77e0fffa 0xc4420001 0x73e20001   // Beta addr 0x6f0\\\\n.mverify Main 0x1c0 0x6fe60000 0x639dfffc 0xc3bdfffc 0x6ffc0000   // Beta addr 0x700\\\\n.mverify Main 0x1c4 0x5d7bd920 0x00000044 0x00000044 // Beta addr 0x710\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\\n\\\"]]}},\\\"last_saved\\\":1644849235797}\",\"check\":\"right\"},\"_timestamp_\":1644849235826}","/ComputationStructures/exercises/cmos/lab.html":"{\"4\":{\"id\":\"4\",\"value\":\"{\\\"tests\\\":{\\\"/cmos/F\\\":\\\"passed eac1e121c506fa7fb41935b78d6b472a d41d8cd98f00b204e9800998ecf8427e 33333333.333333336\\\"},\\\"required-tests\\\":[\\\"eac1e121c506fa7fb41935b78d6b472a\\\"],\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/cmos/F\\\":{\\\"schematic\\\":[[\\\"port\\\",[0,16,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-72,32,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[0,48,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[72,0,4],{\\\"signal\\\":\\\"F\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"vdd\\\",[-8,-72,0]],[\\\"ground\\\",[-16,64,0]],[\\\"/analog/nfet\\\",[24,32,0]],[\\\"/analog/nfet\\\",[24,0,0]],[\\\"/analog/nfet\\\",[-48,16,0]],[\\\"/analog/pfet\\\",[-8,-72,0]],[\\\"/analog/pfet\\\",[-48,-40,0]],[\\\"wire\\\",[-48,48,0,0,16]],[\\\"wire\\\",[-48,64,0,32,0]],[\\\"wire\\\",[24,64,0,-40,0]],[\\\"/analog/pfet\\\",[24,-40,0]],[\\\"wire\\\",[24,-40,0,-32,0]],[\\\"port\\\",[-32,-56,0],{\\\"signal\\\":\\\"C\\\"}],[\\\"port\\\",[-72,-24,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[0,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"wire\\\",[-8,-40,0,-40,0]],[\\\"wire\\\",[24,-8,0,-72,0]],[\\\"wire\\\",[24,-8,0,0,8]],[\\\"/analog/pfet\\\",[72,-32,0]],[\\\"/analog/nfet\\\",[72,0,0]],[\\\"wire\\\",[24,-8,0,24,0]],[\\\"wire\\\",[48,-16,0,0,8]],[\\\"wire\\\",[48,16,0,0,-24]],[\\\"wire\\\",[-8,-72,0,80,0]],[\\\"wire\\\",[72,-32,0,0,-40]],[\\\"wire\\\",[24,64,0,48,0]],[\\\"wire\\\",[72,32,0,0,32]],[\\\"wire\\\",[-48,16,0,0,-24]]]}},\\\"last_saved\\\":1633186266245}\",\"check\":\"right\"},\"1A\":{\"id\":\"1A\",\"value\":\"0.9\",\"check\":\"right\"},\"1B\":{\"id\":\"1B\",\"value\":\"1.24\",\"check\":\"right\"},\"1C\":{\"id\":\"1C\",\"value\":\"0.6\",\"check\":\"right\"},\"1D\":{\"id\":\"1D\",\"value\":\"1.46\",\"check\":\"right\"},\"1E\":{\"id\":\"1E\",\"value\":\"40\",\"check\":\"right\"},\"1F\":{\"id\":\"1F\",\"value\":\"1.277-0.3\",\"check\":\"right\"},\"1G\":{\"id\":\"1G\",\"value\":\"2.7-1.742\",\"check\":\"right\"},\"2A\":{\"id\":\"2A\",\"value\":\"21.377\",\"check\":\"right\"},\"2B\":{\"id\":\"2B\",\"value\":\"113.689\",\"check\":\"right\"},\"2C\":{\"id\":\"2C\",\"value\":\"12.146\",\"check\":\"right\"},\"2D\":{\"id\":\"2D\",\"value\":\"34.495\",\"check\":\"right\"},\"2E\":{\"id\":\"2E\",\"value\":\"12.146\",\"check\":\"right\"},\"2F\":{\"id\":\"2F\",\"value\":\"113.689\",\"check\":\"right\"},\"3A\":{\"id\":\"3A\",\"value\":\"0.5\",\"check\":\"right\"},\"3B\":{\"id\":\"3B\",\"value\":\"2.5\",\"check\":\"right\"},\"3C\":{\"id\":\"3C\",\"value\":\"1\",\"check\":\"right\"},\"3D\":{\"id\":\"3D\",\"value\":\"2\",\"check\":\"right\"},\"3E\":{\"id\":\"3E\",\"value\":\"1.5\",\"check\":\"right\"},\"3F\":{\"id\":\"3F\",\"value\":\"1.5\",\"check\":\"right\"}}","/ComputationStructures/worksheets/L02.html":"{}","/ComputationStructures/notes/information/notes.html":"{}","/ComputationStructures/worksheets/L08.html":"{}","/ComputationStructures/worksheets/L13.html":"{}","/ComputationStructures/exercises/illop/lab.html":"{\"4\":{\"id\":\"4\",\"value\":\"{\\\"tests\\\":{\\\"test\\\":\\\"-369169648\\\"},\\\"required_tests\\\":[\\\"-369169648\\\"],\\\"state\\\":{\\\"LDB_STB\\\":\\\".include \\\\\\\"beta.uasm\\\\\\\"\\\\n.include \\\\\\\"checkoff.uasm\\\\\\\"\\\\nregs:\\\\n\\\\tRESERVE(32)\\\\t\\\\t\\\\t\\\\t// Backup regs\\\\nUI:\\\\n\\\\tsave_all_regs(regs) //.breakpoint\\\\n\\\\tLD(xp,-4,r0)\\\\t\\\\t\\\\t\\\\t// Get illop\\\\n\\\\textract_field(r0,31,26,r1)\\\\t// opcode in r1\\\\n\\\\tCMPEQC(r1,0b010000,r2) \\\\t\\\\t// LDB 0x10\\\\n\\\\tBT(r2,ldb)\\\\n\\\\tCMPEQC(r1,0b010001,r2)\\\\t\\\\t// STB 0x11\\\\n\\\\tBT(r2,stb)\\\\n\\\\tLD(r31,regs,r0)\\\\t\\\\t\\\\t\\\\t// restore regs\\\\n\\\\tLD(r31,regs+4,r1)\\\\n\\\\tLD(r31,regs+8,r1)\\\\n\\\\tBR(_IllegalInstruction)\\\\t\\\\t// Unrecognized illop\\\\t\\\\t\\\\n\\\\t\\\\nrc = r1 \\\\nra = r2 \\\\nea = r3 \\\\nmdata = r4 \\\\nmask = r5 \\\\nnmask = r6\\\\n/*\\\\nUsage:\\\\t\\\\tLDB(Ra, literal, Rc)\\\\nOpcode:\\\\t\\\\t010000 | Rc | Ra | literal - 6, 5, 5, 16  \\\\nOperation:\\\\t\\\\n\\\\t\\\\t\\\\tPC <= PC+4\\\\n\\\\t\\\\t\\\\tEA <= Reg[Ra] + SEXT(literal)\\\\n\\\\t\\\\t\\\\tMDATA <= Mem[EA]\\\\n\\\\t\\\\t\\\\tReg[Rc]7:0 <= if EA1:0 = 0b00 then MDATA7:0\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t  else if EA1:0 = 0b01 then MDATA15:8\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t  else if EA1:0 = 0b10 then MDATA23:16\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t  else if EA1:0 = 0b11 then MDATA31:24\\\\n\\\\t\\\\t\\\\tReg[Rc]31:8 <= 0x000000 \\\\n*/\\\\nldb:\\\\n\\\\t//.breakpoint\\\\n    // rc = r1 ; ra = r2 ; ea = r3 ; mdata = r4 ; mask = r5 ; nmask = r6\\\\n    // get ac\\\\n\\\\textract_field(r0,25,21,rc)\\\\t\\\\n\\\\tMULC(rc,4,rc)\\\\t\\\\t\\\\t\\\\t// convert to byte offset in regs\\\\n    // get ra\\\\n\\\\textract_field(r0,20,16,ra)\\\\t// ra <- Ra\\\\n\\\\tMULC(ra,4,ra)\\\\n\\\\tLD(ra,regs,ra)\\\\t\\\\t\\\\t\\\\t// ra <- \\\\\\\"Reg[Ra]\\\\\\\"\\\\n    // calc get mdata\\\\n\\\\tSHLC(r0,16,ea)\\\\t\\\\t\\\\t\\\\t\\\\n\\\\tSRAC(ea,16,ea)\\\\t\\\\t\\\\t\\\\t//get SEXT(literal)\\\\n\\\\tADD(ra,ea,ea)\\\\t\\\\t\\\\t\\\\t// ea <- Reg[Ra] + SEXT(literal)\\\\n\\\\tLD(ea,0,mdata)\\\\t\\\\t\\\\t\\\\t// mdata <- Mem[Reg[Ra]+SEXT(literal)]\\\\n    //set up mask\\\\n\\\\tANDC(ea,0b11,ea)             // strip LSBs\\\\n    MULC(ea,8,ea)                // calculate shift\\\\n    SHR(mdata,ea,mdata)         // shift to first byte\\\\n    ANDC(mdata,0xff,mdata)      // mask out desired bits\\\\n\\\\tST(mdata,regs,rc)\\\\t\\\\t\\\\t// \\\\\\\"Reg[Rc]\\\\\\\" <- mdata  \\\\n\\\\trestore_all_regs(regs)\\\\n\\\\tJMP(xp)\\\\n\\\\n/*\\\\nUsage:\\\\t\\\\tSTB(Rc, literal, Ra)\\\\nOpcode:\\\\t\\\\t010001|Rc|Ra|literal\\\\nOperation:\\\\t\\\\n\\\\t\\\\t\\\\tPC <= PC+4\\\\n\\\\t\\\\t\\\\tEA <= Reg[Ra] + SEXT(literal)\\\\n\\\\t\\\\t\\\\tMDATA <= Mem[EA]\\\\n\\\\t\\\\t\\\\tif EA1:0 = 0b00 then MDATA7:0 <= Reg[Rc]7:0\\\\n\\\\t\\\\t\\\\tif EA1:0 = 0b01 then MDATA15:8 <= Reg[Rc]7:0\\\\n\\\\t\\\\t\\\\tif EA1:0 = 0b10 then MDATA23:16 <= Reg[Rc]7:0\\\\n\\\\t\\\\t\\\\tif EA1:0 = 0b11 then MDATA31:24 <= Reg[Rc]7:0\\\\n\\\\t\\\\t\\\\tMem[EA] <= MDATA \\\\n*/\\\\nstb:\\\\n\\\\t//.breakpoint\\\\n    // rc = r1 ; ra = r2 ; ea = r3 ; mdata = r4 ; mask = r5 ; nmask = r6\\\\n    //get Reg[Rc]7:0\\\\n\\\\textract_field(r0,25,21,rc)  // r1 <- Rc\\\\n    MULC(rc,4,rc)\\\\n    LD(rc,regs,rc)              // rc <- Reg[rc]\\\\n    ANDC(rc,0xff,rc)    \\\\t\\\\t// rc <- rc[7:0]\\\\n    //get Reg[ra]\\\\n\\\\textract_field(r0,20,16,ra)  // r2 <- Ra\\\\n    MULC(ra,4,ra)\\\\n    LD(ra,regs,ra)\\\\n    //calculate EA\\\\n    SHLC(r0,16,ea)\\\\t\\\\t\\\\t\\\\t\\\\n\\\\tSRAC(ea,16,ea)\\\\t\\\\t\\\\t\\\\t//get SEXT(literal)\\\\n\\\\tADD(ra,ea,ea)\\\\t\\\\t\\\\t    // ea <- Reg[Ra] + SEXT(literal)\\\\n\\\\tMOVE(ea,r7)\\\\n    LD(ea,0,mdata)              // MDATA <- Mem[EA]\\\\n\\\\tANDC(ea,0b11,ea)             // strip LSBs\\\\n    //move masks into place\\\\n    CMOVE(-1,mask)\\\\n    CMOVE(0xFF,nmask)            //initialize nmask (!mask)\\\\n    MULC(ea,8,ea)                //calculate shift\\\\n    SHL(nmask,ea,nmask)         //shift nmask\\\\n    SUB(mask,nmask,mask)        //invert nmask\\\\n    AND(mask,mdata,mdata)       //mask out byte\\\\n    SHL(rc,ea,rc)               //align byte\\\\n    ADD(mdata,rc,mdata)         //overwrite byte\\\\n\\\\t//write back word\\\\n\\\\tST(mdata,0,r7)\\\\n\\\\trestore_all_regs(regs)\\\\n\\\\tJMP(xp)\\\"}}\",\"check\":\"right\"},\"_timestamp_\":1642701734695}","/ComputationStructures/worksheets/L10b.html":"{}","/ComputationStructures/exercises/caches/lab.html":"{\"2\":{\"id\":\"2\",\"value\":\"{\\\"tests\\\":{\\\"/caches/test\\\":\\\"passed 6c6d9c78813b045fd4a145304b5da5f3 d41d8cd98f00b204e9800998ecf8427e 548.8594700212955\\\"},\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/caches/icache\\\":{\\\"schematic\\\":[[\\\"port\\\",[-216,-520,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"port\\\",[-216,-504,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-216,-488,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-248,-376,4],{\\\"signal\\\":\\\"xdata[63:0]\\\"}],[\\\"port\\\",[-216,-552,0],{\\\"signal\\\":\\\"irdy\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-255,-565,0],{\\\"text\\\":\\\"CPU interface\\\"}],[\\\"text\\\",[-268,-410,0],{\\\"text\\\":\\\"Main memory interface\\\"}],[\\\"jumper\\\",[-256,-392,0]],[\\\"wire\\\",[-256,-392,0,-8,0],{\\\"signal\\\":\\\"ia[31:3]\\\"}],[\\\"port\\\",[-248,-392,4],{\\\"signal\\\":\\\"xma[31:3]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-536,0],{\\\"signal\\\":\\\"id[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[-232,-448,0]],[\\\"wire\\\",[-224,-448,0,8,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[-232,-448,0,-8,0],{\\\"signal\\\":\\\"ia[7:3]\\\"}],[\\\"jumper\\\",[-232,-464,0]],[\\\"wire\\\",[-224,-464,0,8,0],{\\\"signal\\\":\\\"offset\\\"}],[\\\"wire\\\",[-232,-464,0,-8,0],{\\\"signal\\\":\\\"ia[2]\\\"}],[\\\"jumper\\\",[-232,-432,0]],[\\\"wire\\\",[-224,-432,0,8,0],{\\\"signal\\\":\\\"atag[23:0]\\\"}],[\\\"wire\\\",[-232,-432,0,-8,0],{\\\"signal\\\":\\\"ia[31:8]\\\"}],[\\\"memory\\\",[-256,-328,0],{\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"5\\\",\\\"ndata\\\":\\\"89\\\",\\\"contents\\\":\\\"0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\",\\\"name\\\":\\\"way0\\\"}],[\\\"wire\\\",[-256,-320,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-256,-312,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-304,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-328,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[-256,-288,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[-256,-280,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-272,0,-16,0],{\\\"signal\\\":\\\"cwe0\\\"}],[\\\"wire\\\",[-256,-264,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-184,-328,0,16,0],{\\\"signal\\\":\\\"valid0,tag0[23:0],cdata0[63:0]\\\"}],[\\\"wire\\\",[-184,-288,0,16,0],{\\\"signal\\\":\\\"1'1,ia[31:8],xdata[63:0]\\\"}],[\\\"memory\\\",[0,-328,0],{\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"5\\\",\\\"ndata\\\":\\\"89\\\",\\\"contents\\\":\\\"0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\",\\\"name\\\":\\\"way1\\\"}],[\\\"wire\\\",[0,-320,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[0,-312,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[0,-304,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[0,-328,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[0,-288,0,-16,0],{\\\"signal\\\":\\\"line[4:0]\\\"}],[\\\"wire\\\",[0,-280,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[0,-272,0,-16,0],{\\\"signal\\\":\\\"cwe1\\\"}],[\\\"wire\\\",[0,-264,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[72,-328,0,16,0],{\\\"signal\\\":\\\"valid1,tag1[23:0],cdata1[63:0]\\\"}],[\\\"wire\\\",[72,-288,0,16,0],{\\\"signal\\\":\\\"1'1,ia[31:8],xdata[63:0]\\\"}],[\\\"/caches/equal24\\\",[-24,-192,0]],[\\\"wire\\\",[-64,-208,0,-16,0],{\\\"signal\\\":\\\"tag0[23:0]\\\"}],[\\\"wire\\\",[-64,-192,0,-16,0],{\\\"signal\\\":\\\"atag[23:0]\\\"}],[\\\"wire\\\",[0,-200,0,40,0],{\\\"signal\\\":\\\"match0\\\"}],[\\\"/gates/and3\\\",[40,-200,0]],[\\\"/gates/inverter\\\",[8,-168,0]],[\\\"wire\\\",[88,-184,0,16,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"wire\\\",[8,-168,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"/caches/equal24\\\",[-24,-104,0]],[\\\"wire\\\",[-64,-120,0,-16,0],{\\\"signal\\\":\\\"tag1[23:0]\\\"}],[\\\"wire\\\",[-64,-104,0,-16,0],{\\\"signal\\\":\\\"atag[23:0]\\\"}],[\\\"/gates/and3\\\",[40,-112,0]],[\\\"/gates/inverter\\\",[8,-80,0]],[\\\"wire\\\",[88,-96,0,16,0],{\\\"signal\\\":\\\"hit1\\\"}],[\\\"wire\\\",[8,-80,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[40,-96,0,-16,0],{\\\"signal\\\":\\\"valid1\\\"}],[\\\"wire\\\",[40,-184,0,-24,0],{\\\"signal\\\":\\\"valid0\\\"}],[\\\"wire\\\",[0,-112,0,40,0],{\\\"signal\\\":\\\"match1\\\"}],[\\\"memory\\\",[-328,-160,0],{\\\"naddr\\\":\\\"3\\\",\\\"ndata\\\":\\\"4\\\",\\\"name\\\":\\\"cache_fsm\\\",\\\"contents\\\":\\\"//R0\\\\n0b0010 //state: 00, miss: 0\\\\n//       nstate: 0, rdy=1, cwe=0\\\\n0b0100 //state: 00, miss: 1\\\\n//       nstate: 1, rdy=0, cwe=0\\\\n//R1\\\\n0b1000 //state: 01, miss: 0\\\\n0b1000 //state: 01, miss: 1\\\\n//R2\\\\n0b0011 //state: 10, miss: 0\\\\n0b0011 //state: 10, miss: 1\\\\n\\\"}],[\\\"wire\\\",[-328,-160,0,-16,0],{\\\"signal\\\":\\\"state[1:0],miss\\\"}],[\\\"wire\\\",[-328,-152,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-328,-144,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-328,-136,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-256,-160,0,16,0],{\\\"signal\\\":\\\"nstate[1:0],irdy,cwe\\\"}],[\\\"/gates/dreg\\\",[-280,-80,0]],[\\\"wire\\\",[-240,-80,0,16,0],{\\\"signal\\\":\\\"state[1:0]\\\"}],[\\\"wire\\\",[-280,-64,0,0,16],{\\\"signal\\\":\\\"clk\\\"}],[\\\"/gates/and2\\\",[-344,-88,0]],[\\\"wire\\\",[-296,-80,0,16,0],{\\\"width\\\":\\\"2\\\"}],[\\\"wire\\\",[-344,-88,0,-16,0],{\\\"signal\\\":\\\"nstate[1:0]\\\"}],[\\\"wire\\\",[-344,-72,0,-16,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"text\\\",[-199,-552,0],{\\\"text\\\":\\\"instruction ready\\\"}],[\\\"text\\\",[-194,-536,0],{\\\"text\\\":\\\"instruction data\\\\n\\\"}],[\\\"text\\\",[-166,-433,0],{\\\"text\\\":\\\"cache tag\\\"}],[\\\"text\\\",[-166,-448,0],{\\\"text\\\":\\\"cache line\\\"}],[\\\"text\\\",[-195,-520,0],{\\\"text\\\":\\\"instruction adress\\\"}],[\\\"text\\\",[-169,-316,0],{\\\"text\\\":\\\"read port\\\"}],[\\\"text\\\",[-167,-276,0],{\\\"text\\\":\\\"write port\\\"}],[\\\"text\\\",[-164,-377,0],{\\\"text\\\":\\\"data fetched from main mem\\\"}],[\\\"/gates/nor2\\\",[-352,-216,0]],[\\\"wire\\\",[-352,-216,0,-16,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"wire\\\",[-352,-200,0,-16,0],{\\\"signal\\\":\\\"hit1\\\"}],[\\\"/gates/mux2\\\",[200,-248,0]],[\\\"wire\\\",[216,-240,0,16,0],{\\\"signal\\\":\\\"waysel[63:0]\\\"}],[\\\"wire\\\",[200,-248,0,-16,0],{\\\"signal\\\":\\\"cdata0[63:0]\\\"}],[\\\"wire\\\",[200,-232,0,-16,0],{\\\"signal\\\":\\\"cdata1[63:0]\\\"}],[\\\"/gates/mux2\\\",[200,-192,0]],[\\\"wire\\\",[200,-192,0,-16,0],{\\\"signal\\\":\\\"waysel[63:32]\\\"}],[\\\"wire\\\",[200,-176,0,-16,0],{\\\"signal\\\":\\\"waysel[31:0]\\\"}],[\\\"wire\\\",[384,-136,0,16,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[208,-216,0,-24,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"wire\\\",[184,-160,0,24,0],{\\\"signal\\\":\\\"offset\\\"}],[\\\"memory\\\",[48,-520,0],{\\\"nports\\\":\\\"2\\\",\\\"naddr\\\":\\\"5\\\",\\\"name\\\":\\\"lru_state\\\",\\\"contents\\\":\\\"0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\\n0\\\"}],[\\\"wire\\\",[48,-520,0,-16,0],{\\\"signal\\\":\\\"ia[7:3]\\\"}],[\\\"wire\\\",[48,-512,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-504,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,-496,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,-480,0,-16,0],{\\\"signal\\\":\\\"ia[7:3]\\\"}],[\\\"wire\\\",[48,-472,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,-456,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[120,-520,0,32,0],{\\\"signal\\\":\\\"lru_is_1\\\"}],[\\\"wire\\\",[120,-480,0,16,0]],[\\\"/gates/inverter\\\",[152,-520,0]],[\\\"wire\\\",[184,-520,0,16,0],{\\\"signal\\\":\\\"lru_is_0\\\"}],[\\\"/gates/or2\\\",[184,-488,4]],[\\\"wire\\\",[184,-488,0,16,0],{\\\"signal\\\":\\\"cwe0\\\"}],[\\\"wire\\\",[184,-472,0,16,0],{\\\"signal\\\":\\\"hit0\\\"}],[\\\"/gates/and2\\\",[-32,-472,0]],[\\\"wire\\\",[48,-464,0,-32,0]],[\\\"wire\\\",[-32,-472,0,-8,0],{\\\"signal\\\":\\\"irdy\\\"}],[\\\"wire\\\",[-32,-456,0,-8,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"/gates/inverter\\\",[-72,-456,0]],[\\\"wire\\\",[-72,-456,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"/gates/and3\\\",[296,-536,0]],[\\\"/gates/and3\\\",[296,-488,0]],[\\\"wire\\\",[344,-520,0,16,0],{\\\"signal\\\":\\\"cwe0\\\"}],[\\\"wire\\\",[344,-472,0,16,0],{\\\"signal\\\":\\\"cwe1\\\"}],[\\\"wire\\\",[296,-536,0,-16,0],{\\\"signal\\\":\\\"cwe\\\"}],[\\\"wire\\\",[296,-520,0,-16,0],{\\\"signal\\\":\\\"lru_is_0\\\"}],[\\\"wire\\\",[296,-504,0,-16,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"wire\\\",[296,-488,0,-16,0],{\\\"signal\\\":\\\"cwe\\\"}],[\\\"wire\\\",[296,-472,0,-16,0],{\\\"signal\\\":\\\"lru_is_1\\\"}],[\\\"wire\\\",[296,-456,0,-16,0],{\\\"signal\\\":\\\"resetn\\\"}],[\\\"text\\\",[-443,-59,0],{\\\"text\\\":\\\"goto 00 if reset, else goto nstate.\\\"}],[\\\"wire\\\",[176,-120,0,-16,0],{\\\"signal\\\":\\\"irdy\\\"}],[\\\"wire\\\",[176,-104,0,-16,0],{\\\"signal\\\":\\\"cwe\\\"}],[\\\"wire\\\",[224,-112,0,16,0],{\\\"signal\\\":\\\"not_R2\\\"}],[\\\"/gates/nand2\\\",[176,-120,0]],[\\\"/gates/mux2\\\",[368,-216,0]],[\\\"wire\\\",[368,-216,0,-16,0],{\\\"signal\\\":\\\"xdata[63:32]\\\"}],[\\\"wire\\\",[368,-200,0,-16,0],{\\\"signal\\\":\\\"xdata[31:0]\\\"}],[\\\"wire\\\",[376,-184,0,-24,0],{\\\"signal\\\":\\\"offset\\\"}],[\\\"wire\\\",[384,-208,0,16,0],{\\\"signal\\\":\\\"from_mem[31:0]\\\"}],[\\\"/gates/mux2\\\",[368,-144,0]],[\\\"wire\\\",[368,-144,0,-16,0],{\\\"signal\\\":\\\"from_cache[31:0]\\\"}],[\\\"wire\\\",[368,-128,0,-16,0],{\\\"signal\\\":\\\"from_mem[31:0]\\\"}],[\\\"wire\\\",[376,-112,0,-24,0],{\\\"signal\\\":\\\"not_R2\\\"}],[\\\"wire\\\",[216,-184,0,16,0],{\\\"signal\\\":\\\"from_cache[31:0]\\\"}],[\\\"wire\\\",[-304,-208,0,8,0],{\\\"signal\\\":\\\"miss\\\"}]]}},\\\"last_saved\\\":1639150162593}\",\"check\":\"right\"},\"A1\":{\"id\":\"A1\",\"value\":\"9\",\"check\":\"right\"},\"A2\":{\"id\":\"A2\",\"value\":\"8\",\"check\":\"right\"},\"B1a\":{\"id\":\"B1a\",\"value\":\"0x200\",\"check\":\"right\"},\"B1b\":{\"id\":\"B1b\",\"value\":\"0x0\",\"check\":\"right\"},\"B1c\":{\"id\":\"B1c\",\"value\":\"0x2\",\"check\":\"right\"},\"B2a\":{\"id\":\"B2a\",\"value\":\"0x21c\",\"check\":\"right\"},\"B2b\":{\"id\":\"B2b\",\"value\":\"7\",\"check\":\"right\"},\"B2c\":{\"id\":\"B2c\",\"value\":\"0x2\",\"check\":\"right\"},\"B3a\":{\"id\":\"B3a\",\"value\":\"0x240\",\"check\":\"right\"},\"B3b\":{\"id\":\"B3b\",\"value\":\"16\",\"check\":\"right\"},\"B3c\":{\"id\":\"B3c\",\"value\":\"0x2\",\"check\":\"right\"},\"B4a\":{\"id\":\"B4a\",\"value\":\"0x27C\",\"check\":\"right\"},\"B4b\":{\"id\":\"B4b\",\"value\":\"31\",\"check\":\"right\"},\"B4c\":{\"id\":\"B4c\",\"value\":\"0x2\",\"check\":\"right\"},\"C1a\":{\"id\":\"C1a\",\"value\":\"0x300\",\"check\":\"right\"},\"C1b\":{\"id\":\"C1b\",\"value\":\"0\",\"check\":\"right\"},\"C1c\":{\"id\":\"C1c\",\"value\":\"0x3\",\"check\":\"right\"},\"C2a\":{\"id\":\"C2a\",\"value\":\"0x33C\",\"check\":\"right\"},\"C2b\":{\"id\":\"C2b\",\"value\":\"15\",\"check\":\"right\"},\"C2c\":{\"id\":\"C2c\",\"value\":\"0x3\",\"check\":\"right\"},\"D\":{\"id\":\"D\",\"value\":\"LD(R2,A,R3)\",\"check\":\"right\"},\"E\":{\"id\":\"E\",\"value\":\"83\",\"check\":\"right\"},\"F1\":{\"id\":\"F1\",\"value\":\"8\",\"check\":\"right\"},\"F2\":{\"id\":\"F2\",\"value\":\"75\",\"check\":\"right\"},\"G\":{\"id\":\"G\",\"value\":\"1\",\"check\":\"right\"},\"H1\":{\"id\":\"H1\",\"value\":\"0.991\",\"check\":\"right\"},\"H2\":{\"id\":\"H2\",\"value\":\"0.750\",\"check\":\"right\"},\"I\":{\"id\":\"I\",\"value\":\"17+32\",\"check\":\"right\"},\"J1\":{\"id\":\"J1\",\"value\":\"5\",\"check\":\"right\"},\"J2\":{\"id\":\"J2\",\"value\":\"5+32\",\"check\":\"right\"},\"K1\":{\"id\":\"K1\",\"value\":\"0x3d4\",\"check\":\"right\"},\"K2\":{\"id\":\"K2\",\"value\":\"52\",\"check\":\"right\"},\"K3\":{\"id\":\"K3\",\"value\":\"10\",\"check\":\"right\"},\"K4\":{\"id\":\"K4\",\"value\":\"0xf\",\"check\":\"wrong\"},\"L\":{\"id\":\"L\",\"value\":\"0.875\",\"check\":\"right\"}}","/ComputationStructures/index.html":"{}","/ComputationStructures/worksheets/L14.html":"{}","/ComputationStructures/worksheets/L12.html":"{}","/ComputationStructures/lectures/compilers/compilers.html":"{}","/ComputationStructures/videos/fsm/lecture.html":"{}","/ComputationStructures/notes/circuits/notes.html":"{}","/ComputationStructures/lectures/isa/isa.html":"{}","/ComputationStructures/notes/stacks/notes.html":"{}","/ComputationStructures/videos/digital/lecture.html":"{}","/ComputationStructures/videos/pipelined_beta/lecture.html":"{}","/ComputationStructures/worksheets/L11.html":"{}","/ComputationStructures/lectures/vm/vm.html":"{}","/ComputationStructures/notes/fsms/notes.html":"{}","jade_saved_modules":"{\"/analog/v_probe\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"color\":{\"edit\":\"yes\",\"label\":\"Plot color\",\"type\":\"menu\",\"value\":\"red\",\"choices\":[\"red\",\"green\",\"blue\",\"cyan\",\"magenta\",\"yellow\",\"black\",\"x-axis\"]},\"tool_tip\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"Voltage probe\",\"label\":\"Tool tip\"},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"offset\":{\"edit\":\"yes\",\"type\":\"number\",\"value\":\"0\",\"label\":\"Plot offset\"}},\"icon\":[[\"terminal\",[0,0,0],{\"line\":\"no\",\"name\":\"probe\"}],[\"line\",[0,0,0,4,-4]],[\"line\",[2,-6,0,4,4]],[\"line\",[2,-6,0,15,-15]],[\"line\",[6,-2,0,15,-15]],[\"line\",[17,-21,0,4,4]],[\"arc\",[19,-19,0,11,-2,5,-3]]]},\"/analog/i_probe\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"color\":{\"edit\":\"yes\",\"label\":\"Plot color\",\"type\":\"menu\",\"value\":\"red\",\"choices\":[\"red\",\"green\",\"blue\",\"cyan\",\"magenta\",\"yellow\",\"black\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"Current probe\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"offset\":{\"edit\":\"yes\",\"label\":\"Offset\",\"type\":\"number\",\"value\":\"0\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"nplus\"}],[\"terminal\",[16,0,4],{\"name\":\"nminus\"}],[\"line\",[10,0,0,-4,-4]],[\"line\",[10,0,6,-4,-4]]]},\"/analog/inductor\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"Inductor\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"l\":{\"edit\":\"yes\",\"label\":\"Inductance (H)\",\"type\":\"number\",\"value\":\"1\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,7],{\"name\":\"n1\"}],[\"terminal\",[0,48,3],{\"name\":\"n2\"}],[\"line\",[0,14,0,0,-6]],[\"line\",[0,34,0,0,6]],[\"arc\",[-3,28,0,3,6,3,-2]],[\"arc\",[0,14,0,-3,6,0,8]],[\"property\",[8,24,0],{\"format\":\"{l}H\"}],[\"property\",[-6,24,0],{\"align\":\"center-right\",\"format\":\"{name}\"}],[\"arc\",[-3,20,0,0,8,7,2]]]},\"/analog/pfet\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"P-Channel mosfet\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"L\":{\"edit\":\"yes\",\"label\":\"Scaled length\",\"type\":\"number\",\"value\":\"1\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"W\":{\"edit\":\"yes\",\"label\":\"Scaled width\",\"type\":\"number\",\"value\":\"2\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"D\"}],[\"terminal\",[0,32,3],{\"name\":\"S\"}],[\"terminal\",[-24,16,0],{\"name\":\"G\"}],[\"line\",[0,8,0,-8,0]],[\"line\",[-8,8,0,0,16]],[\"line\",[-8,24,0,8,0]],[\"line\",[-11,8,0,0,16]],[\"property\",[0,16,0],{\"format\":\"{W}/{L}\"}],[\"circle\",[-14,16,0,2]]]},\"/analog/resistor\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tool_tip\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"Resistor\",\"label\":\"Tool tip\"},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"r\":{\"edit\":\"yes\",\"type\":\"number\",\"value\":\"1\",\"label\":\"Resistance (Ω)\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"n1\"}],[\"terminal\",[0,48,3],{\"name\":\"n2\"}],[\"line\",[0,8,0,0,4]],[\"line\",[0,12,0,4,2]],[\"line\",[4,14,0,-8,4]],[\"line\",[-4,18,0,8,4]],[\"line\",[4,22,0,-8,4]],[\"line\",[-4,26,0,8,4]],[\"line\",[4,30,0,-8,4]],[\"line\",[-4,34,0,4,2]],[\"line\",[0,36,0,0,4]],[\"property\",[5,24,0],{\"format\":\"{r}Ω\"}],[\"property\",[-5,24,0],{\"align\":\"center-right\",\"format\":\"{name}\"}]]},\"/analog/v_source\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tool_tip\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"Voltage source\",\"label\":\"Tool tip\"},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"value\":{\"edit\":\"yes\",\"type\":\"string\",\"value\":\"dc(1)\",\"label\":\"Value\"}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"nplus\"}],[\"terminal\",[0,48,3],{\"name\":\"nminus\"}],[\"line\",[0,8,0,0,4]],[\"circle\",[0,24,0,12,0]],[\"line\",[0,36,0,0,4]],[\"line\",[0,15,0,0,6]],[\"line\",[-3,18,0,6,0]],[\"line\",[-3,30,0,6,0]],[\"property\",[14,24,0],{\"format\":\"{value}\"}],[\"property\",[-14,24,0],{\"align\":\"center-right\",\"format\":\"{name}\"}]]},\"/analog/nfet\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"N-Channel mosfet\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"L\":{\"edit\":\"yes\",\"label\":\"Scaled length\",\"type\":\"number\",\"value\":\"1\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"W\":{\"edit\":\"yes\",\"label\":\"Scaled width\",\"type\":\"number\",\"value\":\"2\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"D\"}],[\"terminal\",[0,32,3],{\"name\":\"S\"}],[\"terminal\",[-24,16,0],{\"name\":\"G\"}],[\"line\",[0,8,0,-8,0]],[\"line\",[-8,8,0,0,16]],[\"line\",[-8,24,0,8,0]],[\"line\",[-11,8,0,0,16]],[\"property\",[0,16,0],{\"format\":\"{W}/{L}\"}],[\"line\",[-16,16,0,5,0]]]},\"/analog/diode\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"Diode\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"area\":{\"edit\":\"yes\",\"label\":\"Area\",\"type\":\"number\",\"value\":\"1\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"type\":{\"edit\":\"yes\",\"label\":\"Type\",\"type\":\"menu\",\"value\":\"normal\",\"choices\":[\"normal\",\"ideal\"]}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"anode\"}],[\"terminal\",[0,48,5],{\"name\":\"cathode\"}],[\"line\",[0,8,1,8,0]],[\"line\",[-8,16,0,16,0]],[\"line\",[8,16,0,-8,16]],[\"line\",[0,32,0,-8,-16]],[\"line\",[-8,32,0,16,0]],[\"line\",[0,40,0,0,-8]],[\"property\",[8,24,0],{\"format\":\"{area}\"}],[\"property\",[-8,24,0],{\"align\":\"center-right\",\"format\":\"{name}\"}]]},\"/analog/opamp\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"A\":{\"edit\":\"yes\",\"label\":\"Gain\",\"type\":\"number\",\"value\":\"30000\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"Op Amp\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"nplus\"}],[\"terminal\",[0,16,0],{\"name\":\"nminus\"}],[\"terminal\",[48,8,4],{\"name\":\"output\"}],[\"terminal\",[24,24,3],{\"name\":\"gnd\"}],[\"line\",[8,-8,0,0,32]],[\"line\",[8,24,0,32,-16]],[\"line\",[40,8,0,-32,-16]],[\"line\",[10,0,0,6,0]],[\"line\",[13,-3,0,0,6]],[\"line\",[10,16,0,6,0]],[\"text\",[27,16,0],{\"text\":\"gnd\",\"align\":\"top-left\",\"font\":\"5pt sans-serif\"}],[\"property\",[27,0,0],{\"align\":\"bottom-left\",\"format\":\"{name}\"}]]},\"/analog/capacitor\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tool_tip\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"Capacitor\",\"label\":\"Tool tip\"},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"c\":{\"edit\":\"yes\",\"type\":\"number\",\"value\":\"1\",\"label\":\"Capacitance (F)\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"n1\"}],[\"terminal\",[0,48,3],{\"name\":\"n2\"}],[\"line\",[0,8,0,0,14]],[\"line\",[-8,22,0,16,0]],[\"line\",[-8,26,0,16,0]],[\"line\",[0,26,0,0,14]],[\"property\",[9,24,0],{\"format\":\"{c}F\"}],[\"property\",[-9,24,0],{\"align\":\"center-right\",\"format\":\"{name}\"}]]},\"/analog/i_source\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"no\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"Current source\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"value\":{\"edit\":\"yes\",\"label\":\"Value\",\"type\":\"string\",\"value\":\"dc(1)\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,1],{\"name\":\"nplus\"}],[\"terminal\",[0,48,3],{\"name\":\"nminus\"}],[\"line\",[0,8,0,0,4]],[\"circle\",[0,24,0,12,0]],[\"line\",[0,36,0,0,4]],[\"property\",[14,24,0],{\"format\":\"{value}\"}],[\"property\",[-14,24,0],{\"align\":\"center-right\",\"format\":\"{name}\"}],[\"line\",[0,16,0,0,16]],[\"line\",[0,32,0,3,-6]],[\"line\",[0,32,0,-3,-6]]]},\"/analog/initial_voltage\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tool_tip\":{\"edit\":\"yes\",\"label\":\"Tool tip\",\"type\":\"string\",\"value\":\"Initial voltage\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"IV\":{\"edit\":\"yes\",\"label\":\"Initial voltage\",\"type\":\"number\",\"value\":\"0\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,3],{\"name\":\"node\"}],[\"property\",[0,-16,0],{\"align\":\"center\",\"format\":\"IV={IV}\"}],[\"line\",[-16,-8,0,32,0]],[\"line\",[16,-8,0,0,-16]],[\"line\",[16,-24,0,-32,0]],[\"line\",[-16,-24,0,0,16]],[\"property\",[0,-26,0],{\"align\":\"bottom-center\",\"format\":\"{name}\"}]]},\"/gates/xnor2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"140p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.006p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"27\",\"choices\":[\"\"]}},\"icon\":[[\"line\",[8,20,0,8,0]],[\"line\",[8,-4,0,8,0]],[\"arc\",[16,-4,0,20,12,18,9]],[\"arc\",[16,20,6,20,12,18,9]],[\"arc\",[8,-4,0,0,24,3,12]],[\"property\",[32,14,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"arc\",[5,-4,0,0,24,3,12]],[\"terminal\",[0,0,0],{\"line\":\"no\",\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"line\":\"no\",\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[0,0,0,7,0]],[\"line\",[0,16,0,7,0]],[\"circle\",[38,8,0,2]]]},\"/gates/dreg\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"190p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4300\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"ts\":{\"edit\":\"no\",\"label\":\"Setup time (s)\",\"type\":\"number\",\"value\":\"200p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"th\":{\"edit\":\"no\",\"label\":\"Hold time (s)\",\"type\":\"number\",\"value\":\"25p\",\"choices\":[\"\"]},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"56\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"D\"}],[\"terminal\",[0,16,0],{\"name\":\"CLK\"}],[\"terminal\",[40,0,4],{\"name\":\"Q\"}],[\"text\",[10,0,0],{\"text\":\"D\",\"font\":\"4pt sans-serif\"}],[\"text\",[30,0,0],{\"text\":\"Q\",\"align\":\"center-right\",\"font\":\"4pt sans-serif\"}],[\"line\",[8,-8,0,24,0]],[\"line\",[32,-8,0,0,32]],[\"line\",[32,24,0,-24,0]],[\"line\",[8,24,0,0,-32]],[\"line\",[14,16,0,-6,3]],[\"line\",[14,16,6,-6,3]],[\"property\",[20,-8,0],{\"align\":\"bottom-center\",\"format\":\"{name}\"}]]},\"/gates/nor2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"50p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"6700\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.004p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2400\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"10p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"10\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,20,0,8,0]],[\"line\",[8,-4,0,8,0]],[\"arc\",[16,-4,0,20,12,18,9]],[\"arc\",[16,20,6,20,12,18,9]],[\"circle\",[38,8,0,2.23606797749979]],[\"arc\",[8,-4,0,0,24,3,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"property\",[32,14,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/gates/nor3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"80p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"8500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\".005p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2400\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"20p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"13\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"line\",[8,28,0,8,0]],[\"line\",[8,4,0,8,0]],[\"arc\",[16,4,0,20,12,18,9]],[\"arc\",[16,28,6,20,12,18,9]],[\"circle\",[38,16,0,2.23606797749979]],[\"arc\",[8,4,0,0,24,3,12]],[\"property\",[32,22,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"arc\",[8,-4,0,0,8,2,4]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,3,0]],[\"line\",[8,32,0,2,0]],[\"arc\",[8,28,0,0,8,2,5]]]},\"/gates/nor4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"120p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"9500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.005p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2400\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"20p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"20\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"line\",[8,36,0,8,0]],[\"line\",[8,12,0,8,0]],[\"arc\",[16,12,0,20,12,18,9]],[\"arc\",[16,36,6,20,12,18,9]],[\"circle\",[38,24,0,2.23606797749979]],[\"arc\",[8,12,0,0,24,3,12]],[\"property\",[32,30,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"arc\",[8,36,0,0,17,2,12]],[\"arc\",[8,12,6,0,17,2,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"line\",[8,32,0,2,0]],[\"line\",[8,48,0,2,0]]]},\"/gates/or3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"210p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.003p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"40p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"17\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"line\",[8,28,0,8,0]],[\"line\",[8,4,0,8,0]],[\"arc\",[16,4,0,20,12,18,9]],[\"arc\",[16,28,6,20,12,18,9]],[\"arc\",[8,4,0,0,24,3,12]],[\"property\",[32,22,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"arc\",[8,-4,0,0,8,2,4]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,3,0]],[\"line\",[8,32,0,2,0]],[\"arc\",[8,28,0,0,8,2,5]],[\"line\",[40,16,0,-4,0]]]},\"/gates/or2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"name\",\"type\":\"string\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"150p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"13\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,20,0,8,0]],[\"line\",[8,-4,0,8,0]],[\"arc\",[16,-4,0,20,12,18,9]],[\"arc\",[16,20,6,20,12,18,9]],[\"arc\",[8,-4,0,0,24,3,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"property\",[32,14,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"line\",[40,8,0,-4,0]]]},\"/gates/or4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"290p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\".003p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2600\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"60p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"20\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"line\",[8,36,0,8,0]],[\"line\",[8,12,0,8,0]],[\"arc\",[16,12,0,20,12,18,9]],[\"arc\",[16,36,6,20,12,18,9]],[\"arc\",[8,12,0,0,24,3,12]],[\"property\",[32,30,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"arc\",[8,36,0,0,17,2,12]],[\"arc\",[8,12,6,0,17,2,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"line\",[8,32,0,2,0]],[\"line\",[8,48,0,2,0]],[\"line\",[40,24,0,-4,0]]]},\"/gates/tristate\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"150p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"2300\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\".004p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"1300\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"23\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[32,0,4],{\"name\":\"Z\"}],[\"line\",[8,-8,0,0,16]],[\"line\",[8,8,0,16,-8]],[\"line\",[24,0,0,-16,-8]],[\"property\",[19,-3,0],{\"align\":\"bottom-left\",\"format\":\"{name}\"}],[\"text\",[17,8,0],{\"text\":\"e\"}],[\"terminal\",[16,16,3],{\"name\":\"E\"}],[\"line\",[16,8,0,0,-4]]]},\"/gates/mux4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"190p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.006p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"40p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"66\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"line\":\"no\",\"name\":\"D3\"}],[\"terminal\",[0,16,0],{\"line\":\"no\",\"name\":\"D2\"}],[\"terminal\",[8,64,5],{\"name\":\"S[1:0]\"}],[\"terminal\",[16,24,4],{\"line\":\"no\",\"name\":\"Y\"}],[\"text\",[5,0,0],{\"text\":\"3\",\"font\":\"4pt sans-serif\"}],[\"text\",[5,16,0],{\"text\":\"2\",\"font\":\"4pt sans-serif\"}],[\"terminal\",[0,32,0],{\"line\":\"no\",\"name\":\"D1\"}],[\"terminal\",[0,48,0],{\"line\":\"no\",\"name\":\"D0\"}],[\"line\",[4,-8,0,0,64]],[\"text\",[5,32,0],{\"text\":\"1\",\"font\":\"4pt sans-serif\"}],[\"text\",[5,48,0],{\"text\":\"0\",\"font\":\"4pt sans-serif\"}],[\"line\",[0,0,0,4,0]],[\"line\",[0,16,0,4,0]],[\"line\",[0,32,0,4,0]],[\"line\",[0,48,0,4,0]],[\"line\",[16,24,0,-4,0]],[\"line\",[4,-8,0,8,8]],[\"line\",[4,56,0,8,-8]],[\"line\",[12,0,0,0,48]],[\"line\",[8,56,0,0,-4]],[\"property\",[12,52,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/gates/inverter\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"20p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"2300\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.007p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"1200\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"5p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"10\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[32,0,4],{\"line\":\"no\",\"name\":\"Z\"}],[\"line\",[8,-8,0,0,16]],[\"line\",[8,8,0,16,-8]],[\"line\",[24,0,0,-16,-8]],[\"property\",[16,4,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"circle\",[26,0,0,2]],[\"line\",[32,0,0,-4,0]]]},\"/gates/mux2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"120p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.005p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"20p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"27\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"line\":\"no\",\"name\":\"D1\"}],[\"terminal\",[0,16,0],{\"line\":\"no\",\"name\":\"D0\"}],[\"terminal\",[8,32,5],{\"name\":\"S\"}],[\"line\",[4,-8,0,0,32]],[\"line\",[12,0,0,0,16]],[\"terminal\",[16,8,4],{\"line\":\"no\",\"name\":\"Y\"}],[\"text\",[5,0,0],{\"text\":\"1\",\"font\":\"4pt sans-serif\"}],[\"text\",[5,16,0],{\"text\":\"0\",\"font\":\"4pt sans-serif\"}],[\"line\",[4,-8,0,8,8]],[\"line\",[0,16,0,4,0]],[\"line\",[0,0,0,4,0]],[\"line\",[12,8,0,4,0]],[\"line\",[4,24,0,8,-8]],[\"line\",[8,24,0,0,-4]],[\"property\",[12,20,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/gates/buffer\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"80p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"2200\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.003p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"1200\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"20p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"13\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[32,0,4],{\"name\":\"Z\"}],[\"line\",[8,-8,0,0,16]],[\"line\",[8,8,0,16,-8]],[\"line\",[24,0,0,-16,-8]],[\"property\",[16,4,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/gates/nand3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"50p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4200\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.005p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"3000\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"10p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"13\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"arc\",[20,4,0,16,12,15,9]],[\"arc\",[20,28,6,16,12,15,9]],[\"line\",[8,4,0,12,0]],[\"line\",[8,28,0,12,0]],[\"circle\",[38,16,0,2]],[\"property\",[33,23,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"line\",[8,-4,0,0,40]]]},\"/gates/nand2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.004p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2800\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"10p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"10\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,-4,0,0,24]],[\"arc\",[20,-4,0,16,12,15,9]],[\"arc\",[20,20,6,16,12,15,9]],[\"line\",[8,-4,0,12,0]],[\"line\",[8,20,0,12,0]],[\"circle\",[38,8,0,2]],[\"property\",[33,15,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/gates/dlatchn\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"190p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4300\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"ts\":{\"edit\":\"no\",\"label\":\"Setup time (s)\",\"type\":\"number\",\"value\":\"200p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"th\":{\"edit\":\"no\",\"label\":\"Hold time (s)\",\"type\":\"number\",\"value\":\"25p\",\"choices\":[\"\"]},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"36\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"D\"}],[\"terminal\",[0,16,0],{\"line\":\"no\",\"name\":\"GN\"}],[\"terminal\",[40,0,4],{\"name\":\"Q\"}],[\"text\",[10,0,0],{\"text\":\"D\",\"font\":\"4pt sans-serif\"}],[\"text\",[10,16,0],{\"text\":\"GN\",\"font\":\"4pt sans-serif\"}],[\"text\",[30,0,0],{\"text\":\"Q\",\"align\":\"center-right\",\"font\":\"4pt sans-serif\"}],[\"line\",[8,-8,0,24,0]],[\"line\",[32,-8,0,0,32]],[\"line\",[32,24,0,-24,0]],[\"line\",[8,24,0,0,-32]],[\"circle\",[6,16,0,2]],[\"line\",[4,16,0,-4,0]],[\"property\",[20,-8,0],{\"align\":\"bottom-center\",\"format\":\"{name}\"}]]},\"/gates/and2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"120p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2300\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"13\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,-4,0,0,24]],[\"arc\",[20,-4,0,16,12,15,9]],[\"arc\",[20,20,6,16,12,15,9]],[\"line\",[8,-4,0,12,0]],[\"line\",[8,20,0,12,0]],[\"property\",[33,15,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"line\",[40,8,0,-4,0]]]},\"/gates/and3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"150p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2600\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"17\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"arc\",[20,4,0,16,12,15,9]],[\"arc\",[20,28,6,16,12,15,9]],[\"line\",[8,4,0,12,0]],[\"line\",[8,28,0,12,0]],[\"property\",[33,23,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"line\",[8,-4,0,0,40]],[\"line\",[40,16,0,-4,0]]]},\"/gates/nand4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"70p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4400\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.005p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"3500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"10p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"17\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"arc\",[20,12,0,16,12,15,9]],[\"arc\",[20,36,6,16,12,15,9]],[\"line\",[8,12,0,12,0]],[\"line\",[8,36,0,12,0]],[\"circle\",[38,24,0,2]],[\"property\",[33,31,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"line\",[8,-4,0,0,57]]]},\"/gates/xor2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"140p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.006p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"27\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"line\":\"no\",\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"line\":\"no\",\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,20,0,8,0]],[\"line\",[8,-4,0,8,0]],[\"arc\",[16,-4,0,20,12,18,9]],[\"arc\",[16,20,6,20,12,18,9]],[\"arc\",[8,-4,0,0,24,3,12]],[\"property\",[32,14,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"arc\",[5,-4,0,0,24,3,12]],[\"line\",[0,0,0,7,0]],[\"line\",[0,16,0,7,0]],[\"line\",[40,8,0,-4,0]]]},\"/gates/dlatch\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"190p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4300\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"ts\":{\"edit\":\"no\",\"label\":\"Setup time (s)\",\"type\":\"number\",\"value\":\"200p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"th\":{\"edit\":\"no\",\"label\":\"Hold time (s)\",\"type\":\"number\",\"value\":\"25p\",\"choices\":[\"\"]},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2500\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"36\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"D\"}],[\"terminal\",[0,16,0],{\"name\":\"G\"}],[\"terminal\",[40,0,4],{\"name\":\"Q\"}],[\"text\",[10,0,0],{\"text\":\"D\",\"font\":\"4pt sans-serif\"}],[\"text\",[10,16,0],{\"text\":\"G\",\"font\":\"4pt sans-serif\"}],[\"text\",[30,0,0],{\"text\":\"Q\",\"align\":\"center-right\",\"font\":\"4pt sans-serif\"}],[\"line\",[8,-8,0,24,0]],[\"line\",[32,-8,0,0,32]],[\"line\",[32,24,0,-24,0]],[\"line\",[8,24,0,0,-32]],[\"property\",[20,-8,0],{\"align\":\"bottom-center\",\"format\":\"{name}\"}]]},\"/gates/buffer_h\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"70p\",\"label\":\"Propagation delay (s)\"},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"1100\",\"label\":\"Output rise time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.005p\",\"label\":\"Input capacitance (F)\"},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"600\",\"label\":\"Output fall time (s/F)\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20p\",\"label\":\"Contamination delay (s)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"17\",\"label\":\"Size (μ²)\"}},\"icon\":[[\"text\",[13,0,0],{\"text\":\"H\",\"align\":\"center\",\"font\":\"bold 6pt sans-serif\"}],[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[32,0,4],{\"name\":\"Z\"}],[\"line\",[8,-8,0,0,16]],[\"line\",[8,8,0,16,-8]],[\"line\",[24,0,0,-16,-8]],[\"property\",[16,4,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/gates/and4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"label\":\"Name\",\"type\":\"name\",\"value\":\"\",\"choices\":[\"\"]},\"tpd\":{\"edit\":\"no\",\"label\":\"Propagation delay (s)\",\"type\":\"number\",\"value\":\"160p\",\"choices\":[\"\"]},\"confidential\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Confidential?\"},\"tr\":{\"edit\":\"no\",\"label\":\"Output rise time (s/F)\",\"type\":\"number\",\"value\":\"4500\",\"choices\":[\"\"]},\"cin\":{\"edit\":\"no\",\"label\":\"Input capacitance (F)\",\"type\":\"number\",\"value\":\"0.002p\",\"choices\":[\"\"]},\"readonly\":{\"edit\":\"no\",\"type\":\"string\",\"value\":\"true\",\"label\":\"Read only?\"},\"tf\":{\"edit\":\"no\",\"label\":\"Output fall time (s/F)\",\"type\":\"number\",\"value\":\"2800\",\"choices\":[\"\"]},\"tcd\":{\"edit\":\"no\",\"label\":\"Contamination delay (s)\",\"type\":\"number\",\"value\":\"30p\",\"choices\":[\"\"]},\"size\":{\"edit\":\"no\",\"label\":\"Size (μ²)\",\"type\":\"number\",\"value\":\"20\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"arc\",[20,12,0,16,12,15,9]],[\"arc\",[20,36,6,16,12,15,9]],[\"line\",[8,12,0,12,0]],[\"line\",[8,36,0,12,0]],[\"property\",[33,31,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"line\",[8,-4,0,0,57]],[\"line\",[40,24,0,-4,0]]]},\"/user/untitled\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"test\":[[\"test\",\"\"]]},\"/cmos/F\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"test-readonly\":\"true\"},\"schematic\":[[\"port\",[0,16,0],{\"signal\":\"A\"}],[\"port\",[-72,32,0],{\"signal\":\"C\"}],[\"port\",[0,48,0],{\"signal\":\"B\"}],[\"port\",[72,0,4],{\"signal\":\"F\",\"direction\":\"out\"}],[\"vdd\",[-8,-72,0]],[\"ground\",[-16,64,0]],[\"/analog/nfet\",[24,32,0]],[\"/analog/nfet\",[24,0,0]],[\"/analog/nfet\",[-48,16,0]],[\"/analog/pfet\",[-8,-72,0]],[\"/analog/pfet\",[-48,-40,0]],[\"wire\",[24,0,0,-72,0]],[\"wire\",[-48,0,0,0,16]],[\"wire\",[-48,48,0,0,16]],[\"wire\",[-48,64,0,32,0]],[\"wire\",[24,64,0,-40,0]],[\"/analog/pfet\",[24,-40,0]],[\"wire\",[24,-40,0,-32,0]],[\"port\",[-32,-56,0],{\"signal\":\"C\"}],[\"port\",[-72,-24,0],{\"signal\":\"A\"}],[\"port\",[0,-24,0],{\"signal\":\"B\"}],[\"wire\",[-8,-40,0,-40,0]],[\"wire\",[24,-8,0,-72,0]],[\"wire\",[24,-8,0,0,8]],[\"/analog/pfet\",[72,-32,0]],[\"/analog/nfet\",[72,0,0]],[\"wire\",[24,-8,0,24,0]],[\"wire\",[48,-16,0,0,8]],[\"wire\",[48,16,0,0,-24]],[\"wire\",[-8,-72,0,80,0]],[\"wire\",[72,-32,0,0,-40]],[\"wire\",[24,64,0,48,0]],[\"wire\",[72,32,0,0,32]]],\"icon\":[[\"terminal\",[-32,-24,0]],[\"terminal\",[-32,-8,0]],[\"terminal\",[-32,8,0]],[\"terminal\",[8,-8,4]],[\"text\",[-12,-8,0],{\"text\":\"F\",\"font\":\"12pt bold serif\",\"align\":\"center\"}],[\"line\",[-24,16,0,0,-48]],[\"line\",[-24,-32,0,24,0]],[\"line\",[0,-32,0,0,48]],[\"line\",[0,16,0,-24,0]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C\\n.group outputs F\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 L\\n001 H\\n010 L\\n011 H\\n100 L\\n101 H\\n000 L\\n110 H\\n000 L\\n111 H\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot F\\n.plot I(Vdd)\\n\"]]},\"/fsm/fsm\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"test-readonly\":\"true\"},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs RESET IN\\n.group outputs U V\\n.mode gate\\n\\n.cycle CLK=0 assert inputs tran 10n CLK=1 tran 20n CLK=0 tran 5n sample outputs tran 5n\\n\\n1 0 LH //  1. now in SA\\n0 0 LH //  2. now in SA\\n0 1 LL //  3. now in SB\\n0 0 LL //  4. now in SD\\n0 1 HL //  5. now in SF\\n0 1 HL //  6. now in SF\\n0 0 LH //  7. now in SA\\n0 1 LL //  8. now in SB\\n0 1 HH //  9. now in SC\\n0 0 LL // 10. now in SD\\n0 0 LL // 11. now in SE\\n0 1 HH // 12. now in SC\\n0 1 LL // 13. now in SE\\n0 0 HL // 14. now in SF\\n0 0 LH // 15. now in SA\\n\\n// now test that RESET always returns us SA\\n1 0 LH // 16. now in SA (reset asserted)\\n0 1 LL // 17. now in SB\\n1 0 LH // 18. now in SA (reset asserted)\\n0 1 LL // 19. now in SB\\n0 1 HH // 20. now in SC\\n1 0 LH // 21. now in SA (reset asserted)\\n0 1 LL // 22. now in SB\\n0 0 LL // 23. now in SD\\n1 0 LH // 24. now in SA (reset asserted)\\n0 1 LL // 25. now in SB\\n0 0 LL // 26. now in SD\\n0 1 HL // 27. now in SF\\n1 0 LH // 28. now in SA (reset asserted)\\n0 1 LL // 29. now in SB\\n0 0 LL // 30. now in SD\\n0 0 LL // 31. now in SE\\n1 0 LH // 32. now in SA (reset asserted)\\n\\n// test RESET again this time with IN=1 on reset cycles\\n1 1 LH // 33. now in SA (reset asserted)\\n0 1 LL // 34. now in SB\\n1 1 LH // 35. now in SA (reset asserted)\\n0 1 LL // 36. now in SB\\n0 1 HH // 37. now in SC\\n1 1 LH // 38. now in SA (reset asserted)\\n0 1 LL // 39. now in SB\\n0 0 LL // 40. now in SD\\n1 1 LH // 41. now in SA (reset asserted)\\n0 1 LL // 42. now in SB\\n0 0 LL // 43. now in SD\\n0 1 HL // 44. now in SF\\n1 1 LH // 45. now in SA (reset asserted)\\n0 1 LL // 46. now in SB\\n0 0 LL // 47. now in SD\\n0 0 LL // 48. now in SE\\n1 1 LH // 49. now in SA (reset asserted)\\n\\n.plot CLK\\n.plot RESET\\n.plot IN\\n.plot U\\n.plot V\\n\"]],\"schematic\":[[\"port\",[736,-176,4],{\"signal\":\"CLK\"}],[\"port\",[792,-216,7],{\"signal\":\"RESET\"}],[\"port\",[632,-272,0],{\"signal\":\"IN\"}],[\"port\",[872,-304,4],{\"signal\":\"U\",\"direction\":\"out\"}],[\"port\",[872,-328,4],{\"signal\":\"V\",\"direction\":\"out\"}],[\"/user/untitled\",[72,-56,0]],[\"memory\",[720,-296,0],{\"naddr\":\"4\",\"ndata\":\"4\",\"name\":\"ROM2\",\"contents\":\"0b0100 //D -> E \\n0b1000 //  -> F\\n0b0000 //B -> D\\n0b1110 //  -> C\\n0b1000 //E -> F\\n0b1110 //  -> C\\n0b0111 //A -> A\\n0b0011 //  -> B\\n0b0110 //F -> A\\n0b1000 //  -> F\\n// unused locations\\n0b0110\\n0b0110\\n0b0110\\n0b0110\\n0b0001 //C -> D\\n0b0101 //  -> E\"}],[\"wire\",[720,-288,0,-16,0],{\"signal\":\"1'1\"}],[\"wire\",[720,-280,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[720,-272,0,-16,0],{\"signal\":\"0'1\"}],[\"/gates/mux2\",[800,-184,2]],[\"wire\",[800,-184,0,24,0],{\"signal\":\"011'3\"}],[\"wire\",[800,-200,0,16,0],{\"width\":\"3\",\"signal\":\"D[2:0]\"}],[\"/gates/dreg\",[736,-192,4]],[\"wire\",[736,-192,0,48,0],{\"width\":\"3\"}],[\"wire\",[696,-192,0,-24,0],{\"width\":\"3\"}],[\"wire\",[632,-272,0,16,0]],[\"/gates/buffer\",[648,-328,0]],[\"wire\",[648,-272,0,0,-56]],[\"wire\",[680,-328,0,16,0],{\"signal\":\"A[3]\"}],[\"/gates/buffer\",[672,-192,4]],[\"wire\",[640,-192,0,-16,0],{\"signal\":\"A[2:0]\",\"width\":\"3\"}],[\"/gates/buffer\",[840,-304,0]],[\"wire\",[840,-304,0,-16,0],{\"signal\":\"D[3]\"}],[\"wire\",[872,-328,0,-40,0]],[\"/gates/buffer\",[800,-328,0]],[\"wire\",[800,-328,0,-8,0],{\"signal\":\"A[3]\"}],[\"wire\",[720,-296,0,-16,0],{\"signal\":\"0000'4\"}]]},\"/user/testy\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"memory\",[-24,-8,0],{\"naddr\":\"4\",\"ndata\":\"4\",\"name\":\"rom\",\"contents\":\"0b0100 //D -> E \\n0b1000 //  -> F\\n0b0000 //B -> D\\n0b1110 //  -> C\\n0b1000 //E -> F\\n0b1110 //  -> C\\n0b0111 //A -> A\\n0b0011 //  -> B\\n0b0110 //F -> A\\n0b1000 //  -> F\\n// unused locations\\n0b0110\\n0b0110\\n0b0110\\n0b0110\\n0b0001 //C -> D\\n0b0101 //  -> E\"}],[\"wire\",[-24,0,0,-16,0],{\"signal\":\"1'1\"}],[\"wire\",[-24,8,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-24,16,0,-16,0],{\"signal\":\"0'1\"}],[\"port\",[-40,-8,0],{\"signal\":\"romin\"}],[\"port\",[56,-8,4],{\"signal\":\"romout\",\"direction\":\"out\"}],[\"wire\",[48,-8,0,8,0]],[\"wire\",[-24,-8,0,-16,0]]],\"test\":[[\"test\",\"\"]]},\"/adder/nand2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}}},\"/adder/inverter\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"5p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2300\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"1200\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.007p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"10\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n0 H\\n1 L\\n\\n\\n.plot A\\n.plot Z\\n\"]],\"schematic\":[[\"/analog/pfet\",[0,-32,0],{\"W\":\"16\"}],[\"/analog/nfet\",[0,0,0],{\"W\":\"4\"}],[\"vdd\",[0,-32,0]],[\"ground\",[0,32,0]],[\"port\",[-24,0,0],{\"signal\":\"A\"}],[\"wire\",[-24,-16,0,0,16]],[\"wire\",[-24,16,0,0,-16]],[\"port\",[0,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[32,0,4],{\"line\":\"no\",\"name\":\"Z\"}],[\"line\",[8,-8,0,0,16]],[\"line\",[8,8,0,16,-8]],[\"line\",[24,0,0,-16,-8]],[\"property\",[16,4,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"circle\",[26,0,0,2]],[\"line\",[32,0,0,-4,0]]]},\"/adder/and2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"30p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"120p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2300\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.002p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"13\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n00 L\\n01 L\\n10 L\\n11 H\\n\\n.plot A\\n.plot B\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-8,0],{\"signal\":\"A\"}],[\"port\",[-48,8,0],{\"signal\":\"B\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"/adder/nand2\",[-48,-8,0]],[\"/adder/inverter\",[0,0,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,-4,0,0,24]],[\"arc\",[20,-4,0,16,12,15,9]],[\"arc\",[20,20,6,16,12,15,9]],[\"line\",[8,-4,0,12,0]],[\"line\",[8,20,0,12,0]],[\"property\",[33,15,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"line\",[40,8,0,-4,0]]]},\"/adder/nand3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}}},\"/adder/and3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"30p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"150p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2600\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.002p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"17\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 L\\n001 L\\n010 L\\n011 L\\n100 L\\n101 L\\n110 L\\n111 H\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-16,0],{\"signal\":\"A\"}],[\"port\",[-48,0,0],{\"signal\":\"B\"}],[\"port\",[-48,16,0],{\"signal\":\"C\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"/adder/nand3\",[-48,-16,0]],[\"/adder/inverter\",[0,0,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"arc\",[20,4,0,16,12,15,9]],[\"arc\",[20,28,6,16,12,15,9]],[\"line\",[8,4,0,12,0]],[\"line\",[8,28,0,12,0]],[\"property\",[33,23,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"line\",[8,-4,0,0,40]],[\"line\",[40,16,0,-4,0]]]},\"/adder/nand4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"10p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"70p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4400\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"3500\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.005p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"17\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C D\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n0000 H\\n0001 H\\n0010 H\\n0011 H\\n0100 H\\n0101 H\\n0110 H\\n0111 H\\n1000 H\\n1001 H\\n1010 H\\n1011 H\\n1100 H\\n1101 H\\n1110 H\\n1111 L\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot D\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-56,32,0],{\"signal\":\"A\"}],[\"port\",[-56,16,0],{\"signal\":\"B\"}],[\"port\",[40,32,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"port\",[-56,48,0],{\"signal\":\"C\"}],[\"port\",[-56,64,0],{\"signal\":\"D\"}],[\"/adder/nand2\",[-8,24,0]],[\"/adder/and2\",[-56,16,0]],[\"/adder/and2\",[-56,48,0]],[\"wire\",[-8,40,0,0,16]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"arc\",[20,12,0,16,12,15,9]],[\"arc\",[20,36,6,16,12,15,9]],[\"line\",[8,12,0,12,0]],[\"line\",[8,36,0,12,0]],[\"circle\",[38,24,0,2]],[\"property\",[33,31,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"line\",[8,-4,0,0,57]]]},\"/adder/and4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"30p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"160p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2800\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.002p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C D\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n0000 L\\n0001 L\\n0010 L\\n0011 L\\n0100 L\\n0101 L\\n0110 L\\n0111 L\\n1000 L\\n1001 L\\n1010 L\\n1011 L\\n1100 L\\n1101 L\\n1110 L\\n1111 H\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot D\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-24,0],{\"signal\":\"A\"}],[\"port\",[-48,-8,0],{\"signal\":\"B\"}],[\"port\",[-48,8,0],{\"signal\":\"C\"}],[\"port\",[-48,24,0],{\"signal\":\"D\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"/adder/nand4\",[-48,-24,0]],[\"/adder/inverter\",[0,0,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"arc\",[20,12,0,16,12,15,9]],[\"arc\",[20,36,6,16,12,15,9]],[\"line\",[8,12,0,12,0]],[\"line\",[8,36,0,12,0]],[\"property\",[33,31,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"line\",[8,-4,0,0,57]],[\"line\",[40,24,0,-4,0]]]},\"/adder/buffer\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"80p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2200\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"1200\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.003p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"13\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n0 L\\n1 H\\n\\n\\n.plot A\\n.plot Z\\n\"]],\"schematic\":[[\"/adder/inverter\",[-32,0,0]],[\"/adder/inverter\",[0,0,0]],[\"port\",[-32,0,0],{\"signal\":\"A\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[32,0,4],{\"name\":\"Z\"}],[\"line\",[8,-8,0,0,16]],[\"line\",[8,8,0,16,-8]],[\"line\",[24,0,0,-16,-8]],[\"property\",[16,4,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/adder/mux2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"120p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2500\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.005p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"27\",\"label\":\"Size (Î¼Â²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs D0 D1 S\\n.group outputs Y\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 L\\n001 L\\n010 L\\n011 H\\n100 H\\n101 L\\n110 H\\n111 H\\n\\n.plot D0 D1 S\\n.plot Y\\n\"]],\"schematic\":[[\"wire\",[-8,-24,0,0,8]],[\"wire\",[-8,0,0,0,8]],[\"port\",[-56,-32,0],{\"signal\":\"D0\"}],[\"port\",[-56,0,0],{\"signal\":\"D1\"}],[\"port\",[-56,40,0],{\"signal\":\"S\"}],[\"port\",[40,-8,4],{\"direction\":\"out\",\"signal\":\"Y\"}],[\"wire\",[-56,16,0,-8,0],{\"signal\":\"S\"}],[\"wire\",[-56,-16,0,-8,0],{\"signal\":\"SN\"}],[\"wire\",[-16,40,0,-8,0],{\"signal\":\"SN\"}],[\"/adder/nand2\",[-56,-32,0]],[\"/adder/nand2\",[-56,0,0]],[\"/adder/nand2\",[-8,-16,0]],[\"/adder/inverter\",[-56,40,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"D1\",\"line\":\"no\"}],[\"terminal\",[0,16,0],{\"name\":\"D0\",\"line\":\"no\"}],[\"terminal\",[8,32,5],{\"name\":\"S\"}],[\"line\",[4,-8,0,0,32]],[\"line\",[12,0,0,0,16]],[\"terminal\",[16,8,4],{\"name\":\"Y\",\"line\":\"no\"}],[\"text\",[5,0,0],{\"text\":\"1\",\"font\":\"4pt sans-serif\"}],[\"text\",[5,16,0],{\"text\":\"0\",\"font\":\"4pt sans-serif\"}],[\"line\",[4,-8,0,8,8]],[\"line\",[0,16,0,4,0]],[\"line\",[0,0,0,4,0]],[\"line\",[12,8,0,4,0]],[\"line\",[4,24,0,8,-8]],[\"line\",[8,24,0,0,-4]],[\"property\",[12,20,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/adder/mux4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"40p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"190p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2500\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.006p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"66\",\"label\":\"Size (Î¼Â²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs D0 D1 D2 D3 S[1] S[0]\\n.group outputs Y\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000000 L\\n000001 L\\n000010 L\\n000011 L\\n000100 L\\n000101 L\\n000110 L\\n000111 H\\n\\n001000 L\\n001001 L\\n001010 H\\n001011 L\\n001100 L\\n001101 L\\n001110 H\\n001111 H\\n\\n010000 L\\n010001 H\\n010010 L\\n010011 L\\n010100 L\\n010101 H\\n010110 L\\n010111 H\\n\\n011000 L\\n011001 H\\n011010 H\\n011011 L\\n011100 L\\n011101 H\\n011110 H\\n011111 H\\n\\n100000 H\\n100001 L\\n100010 L\\n100011 L\\n100100 H\\n100101 L\\n100110 L\\n100111 H\\n\\n101000 H\\n101001 L\\n101010 H\\n101011 L\\n101100 H\\n101101 L\\n101110 H\\n101111 H\\n\\n110000 H\\n110001 H\\n110010 L\\n110011 L\\n110100 H\\n110101 H\\n110110 L\\n110111 H\\n\\n111000 H\\n111001 H\\n111010 H\\n111011 L\\n111100 H\\n111101 H\\n111110 H\\n111111 H\\n\\n.plot D0 D1 D2 D3 S[1] S[0]\\n.plot Y\\n\"]],\"schematic\":[[\"wire\",[0,8,0,0,16]],[\"wire\",[0,24,0,16,0]],[\"wire\",[0,56,0,0,-16]],[\"wire\",[0,40,0,16,0]],[\"wire\",[16,8,0,0,-48]],[\"wire\",[16,-40,0,-16,0]],[\"wire\",[16,56,0,0,48]],[\"wire\",[16,104,0,-16,0]],[\"port\",[-48,-56,0],{\"signal\":\"D0\"}],[\"port\",[-48,-8,0],{\"signal\":\"D1\"}],[\"port\",[-48,40,0],{\"signal\":\"D2\"}],[\"port\",[-48,88,0],{\"signal\":\"D3\"}],[\"port\",[-48,136,0],{\"signal\":\"S[1:0]\"}],[\"port\",[64,32,4],{\"direction\":\"out\",\"signal\":\"Y\"}],[\"wire\",[-48,-40,0,-8,0],{\"signal\":\"SN[0]\"}],[\"wire\",[-16,136,0,8,0],{\"signal\":\"SN[1:0]\"}],[\"wire\",[-48,-24,0,-8,0],{\"signal\":\"SN[1]\"}],[\"wire\",[-48,120,0,-8,0],{\"signal\":\"S[1]\"}],[\"wire\",[-48,104,0,-8,0],{\"signal\":\"S[0]\"}],[\"wire\",[-48,56,0,-8,0],{\"signal\":\"SN[0]\"}],[\"wire\",[-48,72,0,-8,0],{\"signal\":\"S[1]\"}],[\"wire\",[-48,24,0,-8,0],{\"signal\":\"SN[1]\"}],[\"wire\",[-48,8,0,-8,0],{\"signal\":\"S[0]\"}],[\"/adder/nand4\",[16,8,0]],[\"/adder/nand3\",[-48,-56,0]],[\"/adder/nand3\",[-48,-8,0]],[\"/adder/nand3\",[-48,40,0]],[\"/adder/nand3\",[-48,88,0]],[\"/adder/inverter\",[-48,136,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"D3\",\"line\":\"no\"}],[\"terminal\",[0,16,0],{\"name\":\"D2\",\"line\":\"no\"}],[\"terminal\",[8,64,5],{\"name\":\"S[1:0]\"}],[\"terminal\",[16,24,4],{\"name\":\"Y\",\"line\":\"no\"}],[\"text\",[5,0,0],{\"text\":\"3\",\"font\":\"4pt sans-serif\"}],[\"text\",[5,16,0],{\"text\":\"2\",\"font\":\"4pt sans-serif\"}],[\"terminal\",[0,32,0],{\"name\":\"D1\",\"line\":\"no\"}],[\"terminal\",[0,48,0],{\"name\":\"D0\",\"line\":\"no\"}],[\"line\",[4,-8,0,0,64]],[\"text\",[5,32,0],{\"text\":\"1\",\"font\":\"4pt sans-serif\"}],[\"text\",[5,48,0],{\"text\":\"0\",\"font\":\"4pt sans-serif\"}],[\"line\",[0,0,0,4,0]],[\"line\",[0,16,0,4,0]],[\"line\",[0,32,0,4,0]],[\"line\",[0,48,0,4,0]],[\"line\",[16,24,0,-4,0]],[\"line\",[4,-8,0,8,8]],[\"line\",[4,56,0,8,-8]],[\"line\",[12,0,0,0,48]],[\"line\",[8,56,0,0,-4]],[\"property\",[12,52,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/adder/nor2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"10p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"50p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"6700\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2400\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.004p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"10\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n00 H\\n01 L\\n10 L\\n11 L\\n\\n.plot A\\n.plot B\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-16,-16,0],{\"signal\":\"A\"}],[\"port\",[56,-16,0],{\"signal\":\"B\"}],[\"port\",[80,-32,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"/analog/nfet\",[8,-32,0],{\"W\":\"4\"}],[\"/analog/nfet\",[80,-32,0],{\"W\":\"4\"}],[\"wire\",[8,-32,0,72,0]],[\"wire\",[8,0,0,72,0]],[\"ground\",[80,0,0]],[\"/analog/pfet\",[80,-64,0],{\"W\":\"16\"}],[\"/analog/pfet\",[80,-96,0],{\"W\":\"16\"}],[\"vdd\",[80,-96,0]],[\"port\",[56,-80,0],{\"signal\":\"A\"}],[\"port\",[56,-48,0],{\"signal\":\"B\"}]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,20,0,8,0]],[\"line\",[8,-4,0,8,0]],[\"arc\",[16,-4,0,20,12,18,9]],[\"arc\",[16,20,6,20,12,18,9]],[\"circle\",[38,8,0,2.23606797749979]],[\"arc\",[8,-4,0,0,24,3,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"property\",[32,14,0],{\"align\":\"top-left\",\"format\":\"{name}\"}]]},\"/adder/nor3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"80p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"8500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2400\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\".005p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"13\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 H\\n001 L\\n010 L\\n011 L\\n100 L\\n101 L\\n110 L\\n111 L\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-32,-8,0],{\"signal\":\"A\"}],[\"port\",[-32,-40,0],{\"signal\":\"B\"}],[\"port\",[40,-40,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"port\",[-32,-72,0],{\"signal\":\"C\"}],[\"/adder/nor2\",[-8,-48,0]],[\"wire\",[-32,-40,0,0,-16]],[\"wire\",[-8,-48,0,24,-16]],[\"wire\",[-32,-8,0,24,-24]],[\"/adder/or2\",[-32,-72,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"line\",[8,28,0,8,0]],[\"line\",[8,4,0,8,0]],[\"arc\",[16,4,0,20,12,18,9]],[\"arc\",[16,28,6,20,12,18,9]],[\"circle\",[38,16,0,2.23606797749979]],[\"arc\",[8,4,0,0,24,3,12]],[\"property\",[32,22,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"arc\",[8,-4,0,0,8,2,4]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,3,0]],[\"line\",[8,32,0,2,0]],[\"arc\",[8,28,0,0,8,2,5]]]},\"/adder/nor4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"120p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"9500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2400\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.005p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C D\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n0000 H\\n0001 L\\n0010 L\\n0011 L\\n0100 L\\n0101 L\\n0110 L\\n0111 L\\n1000 L\\n1001 L\\n1010 L\\n1011 L\\n1100 L\\n1101 L\\n1110 L\\n1111 L\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot D\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-8,0],{\"signal\":\"A\"}],[\"port\",[-48,-24,0],{\"signal\":\"B\"}],[\"port\",[16,-40,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"port\",[-48,-72,0],{\"signal\":\"C\"}],[\"port\",[-48,-88,0],{\"signal\":\"D\"}],[\"/adder/or2\",[-48,-88,0]],[\"/adder/or2\",[-48,-24,0]],[\"/adder/nor2\",[-32,-48,0]],[\"wire\",[-32,-32,0,32,16]],[\"wire\",[-32,-48,0,32,-32]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"line\",[8,36,0,8,0]],[\"line\",[8,12,0,8,0]],[\"arc\",[16,12,0,20,12,18,9]],[\"arc\",[16,36,6,20,12,18,9]],[\"circle\",[38,24,0,2.23606797749979]],[\"arc\",[8,12,0,0,24,3,12]],[\"property\",[32,30,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"arc\",[8,36,0,0,17,2,12]],[\"arc\",[8,12,6,0,17,2,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"line\",[8,32,0,2,0]],[\"line\",[8,48,0,2,0]]]},\"/adder/or2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"string\",\"value\":\"\",\"label\":\"name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"30p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"150p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2500\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.002p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"13\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n00 L\\n01 H\\n10 H\\n11 H\\n\\n.plot A\\n.plot B\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-8,0],{\"signal\":\"A\"}],[\"port\",[-48,8,0],{\"signal\":\"B\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"/adder/nor2\",[-48,-8,0]],[\"/adder/inverter\",[0,0,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,8,4],{\"name\":\"Z\"}],[\"line\",[8,20,0,8,0]],[\"line\",[8,-4,0,8,0]],[\"arc\",[16,-4,0,20,12,18,9]],[\"arc\",[16,20,6,20,12,18,9]],[\"arc\",[8,-4,0,0,24,3,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"property\",[32,14,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"line\",[40,8,0,-4,0]]]},\"/adder/or3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"40p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"210p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2500\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"0.003p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"17\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 L\\n001 H\\n010 H\\n011 H\\n100 H\\n101 H\\n110 H\\n111 H\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-16,0],{\"signal\":\"A\"}],[\"port\",[-48,0,0],{\"signal\":\"B\"}],[\"port\",[-48,16,0],{\"signal\":\"C\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"/adder/nor3\",[-48,-16,0]],[\"/adder/inverter\",[0,0,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,16,4],{\"name\":\"Z\"}],[\"line\",[8,28,0,8,0]],[\"line\",[8,4,0,8,0]],[\"arc\",[16,4,0,20,12,18,9]],[\"arc\",[16,28,6,20,12,18,9]],[\"arc\",[8,4,0,0,24,3,12]],[\"property\",[32,22,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"arc\",[8,-4,0,0,8,2,4]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,3,0]],[\"line\",[8,32,0,2,0]],[\"arc\",[8,28,0,0,8,2,5]],[\"line\",[40,16,0,-4,0]]]},\"/adder/or4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"choices\":[\"\"],\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"tcd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"60p\",\"label\":\"Contamination delay (s)\"},\"tpd\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"290p\",\"label\":\"Propagation delay (s)\"},\"tr\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"4500\",\"label\":\"Output rise time (s/F)\"},\"tf\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"2600\",\"label\":\"Output fall time (s/F)\"},\"cin\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\".003p\",\"label\":\"Input capacitance (F)\"},\"size\":{\"edit\":\"no\",\"choices\":[\"\"],\"type\":\"number\",\"value\":\"20\",\"label\":\"Size (μ²)\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B C D\\n.group outputs Z\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n0000 L\\n0001 H\\n0010 H\\n0011 H\\n0100 H\\n0101 H\\n0110 H\\n0111 H\\n1000 H\\n1001 H\\n1010 H\\n1011 H\\n1100 H\\n1101 H\\n1110 H\\n1111 H\\n\\n.plot A\\n.plot B\\n.plot C\\n.plot D\\n.plot Z\\n\"]],\"schematic\":[[\"port\",[-48,-24,0],{\"signal\":\"A\"}],[\"port\",[-48,-8,0],{\"signal\":\"B\"}],[\"port\",[-48,8,0],{\"signal\":\"C\"}],[\"port\",[32,0,4],{\"direction\":\"out\",\"signal\":\"Z\"}],[\"port\",[-48,24,0],{\"signal\":\"D\"}],[\"/adder/nor4\",[-48,-24,0]],[\"/adder/inverter\",[0,0,0]]],\"icon\":[[\"terminal\",[0,0,0],{\"name\":\"A\"}],[\"terminal\",[0,16,0],{\"name\":\"B\"}],[\"terminal\",[48,24,4],{\"name\":\"Z\"}],[\"line\",[8,36,0,8,0]],[\"line\",[8,12,0,8,0]],[\"arc\",[16,12,0,20,12,18,9]],[\"arc\",[16,36,6,20,12,18,9]],[\"arc\",[8,12,0,0,24,3,12]],[\"property\",[32,30,0],{\"align\":\"top-left\",\"format\":\"{name}\"}],[\"terminal\",[0,32,0],{\"name\":\"C\"}],[\"terminal\",[0,48,0],{\"name\":\"D\"}],[\"arc\",[8,36,0,0,17,2,12]],[\"arc\",[8,12,6,0,17,2,12]],[\"line\",[8,0,0,2,0]],[\"line\",[8,16,0,2,0]],[\"line\",[8,32,0,2,0]],[\"line\",[8,48,0,2,0]],[\"line\",[40,24,0,-4,0]]]},\"/adder/xor2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}}},\"/adder/fa\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-112,-40,0],{\"signal\":\"A\"}],[\"port\",[-112,-24,0],{\"signal\":\"B\"}],[\"port\",[-112,-8,0],{\"signal\":\"Cin\"}],[\"port\",[24,-112,4],{\"signal\":\"Cout\",\"direction\":\"out\"}],[\"port\",[24,-24,4],{\"signal\":\"S\",\"direction\":\"out\"}],[\"/adder/xor2\",[-72,-40,0]],[\"/adder/xor2\",[-24,-32,0]],[\"wire\",[-40,-16,0,0,8]],[\"/adder/nand2\",[-72,-120,0]],[\"/adder/nand2\",[-72,-88,0]],[\"/adder/nand2\",[-72,-152,0]],[\"wire\",[-24,-144,0,0,16]],[\"wire\",[-88,-40,0,0,-80]],[\"wire\",[-88,-120,0,16,0]],[\"wire\",[-72,-120,0,0,-16]],[\"wire\",[-112,-40,0,24,0]],[\"wire\",[-72,-104,0,-24,0]],[\"wire\",[-96,-104,0,0,80]],[\"wire\",[-112,-24,0,16,0]],[\"wire\",[-72,-88,0,0,-16]],[\"wire\",[-72,-72,0,-32,0]],[\"wire\",[-104,-72,0,0,64]],[\"wire\",[-40,-8,0,-64,0]],[\"wire\",[-112,-8,0,8,0]],[\"wire\",[-104,-72,0,0,-80]],[\"wire\",[-72,-152,0,-32,0]],[\"/adder/nand3\",[-24,-128,0]],[\"wire\",[-24,-80,0,0,-16]],[\"wire\",[-40,-16,0,16,0]],[\"wire\",[-96,-24,0,24,0]],[\"wire\",[-88,-40,0,16,0]]],\"icon\":[[\"terminal\",[-24,-8,0],{\"name\":\"A\"}],[\"terminal\",[-24,8,0],{\"name\":\"B\"}],[\"terminal\",[0,32,3],{\"name\":\"Cin\"}],[\"terminal\",[24,0,4],{\"name\":\"S\"}],[\"terminal\",[0,-32,7],{\"name\":\"Cout\"}],[\"line\",[16,-24,0,-32,0]],[\"line\",[-16,24,0,32,0]],[\"text\",[-15,-8,0],{\"text\":\"A\",\"font\":\"4pt sans-serif\"}],[\"text\",[-15,8,0],{\"text\":\"B\",\"font\":\"4pt sans-serif\"}],[\"text\",[15,0,0],{\"text\":\"S\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[0,-23,0],{\"text\":\"Cout\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[0,23,0],{\"text\":\"Cin\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[0,0,0],{\"text\":\"FA\",\"align\":\"center\",\"font\":\"bold 6pt sans-serif\"}],[\"line\",[-16,-24,0,0,48]],[\"line\",[16,-24,0,0,48]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B Cin\\n.group outputs Cout S\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 LL\\n001 LH\\n010 LH\\n011 HL\\n100 LH\\n101 HL\\n110 HL\\n111 HH\\n\\n.plot A\\n.plot B\\n.plot Cin\\n.plot Cout\\n.plot S\\n\"]]},\"/adder/adder3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"readonly\":{\"label\":\"Read only\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"/adder/fa\",[32,-8,7]],[\"/adder/fa\",[-32,-8,7]],[\"/adder/fa\",[-96,-8,7]],[\"wire\",[40,-32,0,0,-8],{\"signal\":\"B[0]\"}],[\"wire\",[24,-32,0,0,-8],{\"signal\":\"A[0]\"}],[\"wire\",[-24,-32,0,0,-8],{\"signal\":\"B[1]\"}],[\"wire\",[-40,-32,0,0,-8],{\"signal\":\"A[1]\"}],[\"wire\",[-88,-32,0,0,-8],{\"signal\":\"B[2]\"}],[\"wire\",[-104,-32,0,0,-8],{\"signal\":\"A[2]\"}],[\"wire\",[-96,24,0,0,-8],{\"signal\":\"S[2]\"}],[\"wire\",[-32,24,0,0,-8],{\"signal\":\"S[1]\"}],[\"wire\",[32,24,0,0,-8],{\"signal\":\"S[0]\"}],[\"wire\",[-128,24,0,0,-32],{\"signal\":\"S[3]\"}],[\"ground\",[72,-8,0]],[\"wire\",[72,-8,0,-8,0]]],\"icon\":[[\"terminal\",[-32,-24,0],{\"name\":\"A[2:0]\"}],[\"terminal\",[-32,-8,0],{\"name\":\"B[2:0]\"}],[\"terminal\",[8,-16,4],{\"name\":\"S[3:0]\"}],[\"text\",[-12,-16,0],{\"text\":\"+\",\"font\":\"12pt bold sans\",\"align\":\"center\"}],[\"line\",[-24,-32,0,0,32]],[\"line\",[-24,0,0,24,0]],[\"line\",[0,0,0,0,-32]],[\"line\",[0,-32,0,-24,0]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[2:0] B[2:0]\\n.group outputs S[3:0]\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n000 001 LLLH //  1: a=0, b=1, y=1\\n001 000 LLLH //  2: a=1, b=0, y=1\\n001 001 LLHL //  3: a=1, b=1, y=2\\n010 010 LHLL //  4: a=2, b=2, y=4\\n100 100 HLLL //  5: a=4, b=4, y=8\\n000 000 LLLL //  6: a=0, b=0, y=0\\n001 111 HLLL //  7: a=1, b=7, y=8\\n111 001 HLLL //  8: a=7, b=1, y=8\\n010 101 LHHH //  9: a=2, b=5, y=7\\n101 010 LHHH // 10: a=5, b=2, y=7\\n111 111 HHHL // 11: a=7, b=7, y=14\\n\\n.plot D(A[2:0])\\n.plot D(B[2:0])\\n.plot D(S[3:0])\\n\"]]},\"/alu/arith\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"icon-readonly\":\"true\",\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-32,-88,0],{\"signal\":\"A[31:0]\"}],[\"port\",[-88,-32,0],{\"signal\":\"B[31:0]\"}],[\"port\",[-88,-48,0],{\"signal\":\"AFN\"}],[\"port\",[88,-72,4],{\"signal\":\"S[31:0]\",\"direction\":\"out\"}],[\"port\",[80,-224,4],{\"signal\":\"V\",\"direction\":\"out\"}],[\"port\",[88,8,4],{\"signal\":\"N\",\"direction\":\"out\"}],[\"port\",[88,-32,4],{\"signal\":\"Z\",\"direction\":\"out\"}],[\"wire\",[80,8,0,-8,0],{\"signal\":\"S[31]\"}],[\"jumper\",[80,8,0]],[\"/user/nor32\",[40,-32,0],{\"name\":\"nor32\"}],[\"/user/add32\",[0,-88,0]],[\"/gates/xor2\",[-80,-48,0]],[\"wire\",[88,-48,0,-80,0]],[\"wire\",[-32,-40,0,0,-32],{\"signal\":\"xb[31:0]\",\"width\":\"32\"}],[\"wire\",[-32,-104,0,-56,0]],[\"wire\",[-88,-104,0,0,56]],[\"wire\",[-88,-48,0,8,0]],[\"wire\",[-80,-32,0,-8,0],{\"width\":\"32\"}],[\"wire\",[88,-72,0,0,24]],[\"wire\",[8,-48,0,0,16]],[\"/gates/and3\",[-16,-248,0]],[\"/gates/inverter\",[-48,-216,0]],[\"wire\",[-48,-216,0,-8,0],{\"signal\":\"s[31]\"}],[\"/gates/or2\",[32,-232,0]],[\"/gates/and3\",[-16,-168,0]],[\"wire\",[-48,-216,0,0,48]],[\"wire\",[-48,-168,0,32,0]],[\"/gates/inverter\",[-48,-152,0]],[\"/gates/inverter\",[-48,-136,0]],[\"wire\",[-48,-152,0,-32,0],{\"signal\":\"xb[31]\"}],[\"wire\",[-48,-136,0,-48,0],{\"signal\":\"a[31]\"}],[\"wire\",[-96,-136,0,0,-112]],[\"wire\",[-16,-248,0,-80,0]],[\"wire\",[-80,-152,0,0,-80]],[\"wire\",[-16,-232,0,-64,0]],[\"wire\",[32,-216,0,0,64]]],\"icon\":[[\"text\",[0,-11,0],{\"text\":\"ARITH\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[-32,8,0],{\"name\":\"B[31:0]\"}],[\"terminal\",[-32,16,0],{\"name\":\"AFN\"}],[\"terminal\",[32,0,4],{\"name\":\"S[31:0]\"}],[\"text\",[-23,8,0],{\"text\":\"B[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,0,0],{\"text\":\"A[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,16,0],{\"text\":\"AFN\",\"font\":\"4pt sans-serif\"}],[\"text\",[23,0,0],{\"text\":\"S[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[-24,-16,0,48,0]],[\"line\",[24,32,0,-48,0]],[\"property\",[0,-17,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}],[\"terminal\",[-16,40,5],{\"name\":\"Z\"}],[\"terminal\",[0,40,5],{\"name\":\"V\"}],[\"terminal\",[16,40,5],{\"name\":\"N\"}],[\"text\",[-16,31,0],{\"text\":\"Z\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[0,31,0],{\"text\":\"V\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[16,31,0],{\"text\":\"N\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"line\",[-24,-16,0,0,48]],[\"line\",[24,-16,0,0,48]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs AFN A[31:0] B[31:0]\\n.group outputs S[31:0] Z V N\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n0 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  1: afn=0, a=0X00000000, b=0X00000000, s=0X00000000\\n0 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  2: afn=0, a=0X00000000, b=0X00000001, s=0X00000001\\n0 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  3: afn=0, a=0X00000000, b=0XFFFFFFFF, s=0XFFFFFFFF\\n0 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH //  4: afn=0, a=0X00000000, b=0XAAAAAAAA, s=0XAAAAAAAA\\n0 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL //  5: afn=0, a=0X00000000, b=0X55555555, s=0X55555555\\n0 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  6: afn=0, a=0X00000001, b=0X00000000, s=0X00000001\\n0 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  7: afn=0, a=0X00000001, b=0X00000001, s=0X00000002\\n0 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  8: afn=0, a=0X00000001, b=0XFFFFFFFF, s=0X00000000\\n0 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH //  9: afn=0, a=0X00000001, b=0XAAAAAAAA, s=0XAAAAAAAB\\n0 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 10: afn=0, a=0X00000001, b=0X55555555, s=0X55555556\\n0 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 11: afn=0, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\n0 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 12: afn=0, a=0XFFFFFFFF, b=0X00000001, s=0X00000000\\n0 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 13: afn=0, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0XFFFFFFFE\\n0 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 14: afn=0, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0XAAAAAAA9\\n0 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 15: afn=0, a=0XFFFFFFFF, b=0X55555555, s=0X55555554\\n0 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 16: afn=0, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\n0 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 17: afn=0, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAAB\\n0 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 18: afn=0, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAA9\\n0 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 19: afn=0, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X55555554\\n0 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 20: afn=0, a=0XAAAAAAAA, b=0X55555555, s=0XFFFFFFFF\\n0 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 21: afn=0, a=0X55555555, b=0X00000000, s=0X55555555\\n0 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 22: afn=0, a=0X55555555, b=0X00000001, s=0X55555556\\n0 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 23: afn=0, a=0X55555555, b=0XFFFFFFFF, s=0X55555554\\n0 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 24: afn=0, a=0X55555555, b=0XAAAAAAAA, s=0XFFFFFFFF\\n0 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 25: afn=0, a=0X55555555, b=0X55555555, s=0XAAAAAAAA\\n1 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 26: fn=1, a=0X00000000, b=0X00000000, s=0X00000000\\n1 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 27: fn=1, a=0X00000000, b=0X00000001, s=0XFFFFFFFF\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 28: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\n1 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 29: fn=1, a=0X00000000, b=0XAAAAAAAA, s=0X55555556\\n1 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 30: fn=1, a=0X00000000, b=0X55555555, s=0XAAAAAAAB\\n1 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 31: fn=1, a=0X00000001, b=0X00000000, s=0X00000001\\n1 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 32: fn=1, a=0X00000001, b=0X00000001, s=0X00000000\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 33: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\n1 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 34: fn=1, a=0X00000001, b=0XAAAAAAAA, s=0X55555557\\n1 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 35: fn=1, a=0X00000001, b=0X55555555, s=0XAAAAAAAC\\n1 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 36: fn=1, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\n1 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 37: fn=1, a=0XFFFFFFFF, b=0X00000001, s=0XFFFFFFFE\\n1 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 38: fn=1, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0X00000000\\n1 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 39: fn=1, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0X55555555\\n1 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 40: fn=1, a=0XFFFFFFFF, b=0X55555555, s=0XAAAAAAAA\\n1 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 41: fn=1, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\n1 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 42: fn=1, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAA9\\n1 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 43: fn=1, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAAB\\n1 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 44: fn=1, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X00000000\\n1 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 45: fn=1, a=0XAAAAAAAA, b=0X55555555, s=0X55555555\\n1 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 46: fn=1, a=0X55555555, b=0X00000000, s=0X55555555\\n1 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 47: fn=1, a=0X55555555, b=0X00000001, s=0X55555554\\n1 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 48: fn=1, a=0X55555555, b=0XFFFFFFFF, s=0X55555556\\n1 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 49: fn=1, a=0X55555555, b=0XAAAAAAAA, s=0XAAAAAAAB\\n1 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 50: fn=1, a=0X55555555, b=0X55555555, s=0X00000000\\n1 01111111111111111111111111111111 11111111111111111111111111111111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 51: fn=1, a=0X7FFFFFFF, b=0XFFFFFFFF, s=0X80000000\\n1 00111111111111111111111111111111 11111111111111111111111111111111 LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 52: fn=1, a=0X3FFFFFFF, b=0XFFFFFFFF, s=0X40000000\\n1 00011111111111111111111111111111 11111111111111111111111111111111 LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 53: fn=1, a=0X1FFFFFFF, b=0XFFFFFFFF, s=0X20000000\\n1 00001111111111111111111111111111 11111111111111111111111111111111 LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 54: fn=1, a=0X0FFFFFFF, b=0XFFFFFFFF, s=0X10000000\\n1 00000111111111111111111111111111 11111111111111111111111111111111 LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 55: fn=1, a=0X07FFFFFF, b=0XFFFFFFFF, s=0X08000000\\n1 00000011111111111111111111111111 11111111111111111111111111111111 LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 56: fn=1, a=0X03FFFFFF, b=0XFFFFFFFF, s=0X04000000\\n1 00000001111111111111111111111111 11111111111111111111111111111111 LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 57: fn=1, a=0X01FFFFFF, b=0XFFFFFFFF, s=0X02000000\\n1 00000000111111111111111111111111 11111111111111111111111111111111 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLL // 58: fn=1, a=0X00FFFFFF, b=0XFFFFFFFF, s=0X01000000\\n1 00000000011111111111111111111111 11111111111111111111111111111111 LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLL // 59: fn=1, a=0X007FFFFF, b=0XFFFFFFFF, s=0X00800000\\n1 00000000001111111111111111111111 11111111111111111111111111111111 LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLL // 60: fn=1, a=0X003FFFFF, b=0XFFFFFFFF, s=0X00400000\\n1 00000000000111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLL // 61: fn=1, a=0X001FFFFF, b=0XFFFFFFFF, s=0X00200000\\n1 00000000000011111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL LLL // 62: fn=1, a=0X000FFFFF, b=0XFFFFFFFF, s=0X00100000\\n1 00000000000001111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL LLL // 63: fn=1, a=0X0007FFFF, b=0XFFFFFFFF, s=0X00080000\\n1 00000000000000111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL LLL // 64: fn=1, a=0X0003FFFF, b=0XFFFFFFFF, s=0X00040000\\n1 00000000000000011111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL LLL // 65: fn=1, a=0X0001FFFF, b=0XFFFFFFFF, s=0X00020000\\n1 00000000000000001111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL // 66: fn=1, a=0X0000FFFF, b=0XFFFFFFFF, s=0X00010000\\n1 00000000000000000111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL LLL // 67: fn=1, a=0X00007FFF, b=0XFFFFFFFF, s=0X00008000\\n1 00000000000000000011111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL LLL // 68: fn=1, a=0X00003FFF, b=0XFFFFFFFF, s=0X00004000\\n1 00000000000000000001111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL LLL // 69: fn=1, a=0X00001FFF, b=0XFFFFFFFF, s=0X00002000\\n1 00000000000000000000111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL LLL // 70: fn=1, a=0X00000FFF, b=0XFFFFFFFF, s=0X00001000\\n1 00000000000000000000011111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL LLL // 71: fn=1, a=0X000007FF, b=0XFFFFFFFF, s=0X00000800\\n1 00000000000000000000001111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL LLL // 72: fn=1, a=0X000003FF, b=0XFFFFFFFF, s=0X00000400\\n1 00000000000000000000000111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL LLL // 73: fn=1, a=0X700001FF, b=0XFFFFFFFF, s=0X00000200\\n1 00000000000000000000000011111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL // 74: fn=1, a=0X000000FF, b=0XFFFFFFFF, s=0X00000100\\n1 00000000000000000000000001111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLL // 75: fn=1, a=0X0000007F, b=0XFFFFFFFF, s=0X00000080\\n1 00000000000000000000000000111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLL // 76: fn=1, a=0X0000003F, b=0XFFFFFFFF, s=0X00000040\\n1 00000000000000000000000000011111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLL // 77: fn=1, a=0X0000001F, b=0XFFFFFFFF, s=0X00000020\\n1 00000000000000000000000000001111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL // 78: fn=1, a=0X0000000F, b=0XFFFFFFFF, s=0X00000010\\n1 00000000000000000000000000000111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLL // 79: fn=1, a=0X00000007, b=0XFFFFFFFF, s=0X00000008\\n1 00000000000000000000000000000011 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL // 80: fn=1, a=0X00000003, b=0XFFFFFFFF, s=0X00000004\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 81: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 82: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\n      \\n.plot X(AFN)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot Z\\n.plot V\\n.plot N\\n\"]]},\"/alu/bool\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"icon-readonly\":\"true\",\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs BFN[3:0] A[31:0] B[31:0]\\n.group outputs Y[31:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n0000 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  1: bfn=0b0000, a=0XFF00FF00, b=0XFFFF0000, y=0X00000000\\n0001 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH //  2: bfn=0b0001, a=0XFF00FF00, b=0XFFFF0000, y=0X000000FF\\n0010 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHLLLLLLLL //  3: bfn=0b0010, a=0XFF00FF00, b=0XFFFF0000, y=0X0000FF00\\n0011 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH //  4: bfn=0b0011, a=0XFF00FF00, b=0XFFFF0000, y=0X0000FFFF\\n0100 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLLLLLLLLL //  5: bfn=0b0100, a=0XFF00FF00, b=0XFFFF0000, y=0X00FF0000\\n0101 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLHHHHHHHH //  6: bfn=0b0101, a=0XFF00FF00, b=0XFFFF0000, y=0X00FF00FF\\n0110 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHLLLLLLLL //  7: bfn=0b0110, a=0XFF00FF00, b=0XFFFF0000, y=0X00FFFF00\\n0111 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH //  8: bfn=0b0111, a=0XFF00FF00, b=0XFFFF0000, y=0X00FFFFFF\\n1000 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLLLLLLLLL //  9: bfn=0b1000, a=0XFF00FF00, b=0XFFFF0000, y=0XFF000000\\n1001 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLHHHHHHHH // 10: bfn=0b1001, a=0XFF00FF00, b=0XFFFF0000, y=0XFF0000FF\\n1010 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHLLLLLLLL // 11: bfn=0b1010, a=0XFF00FF00, b=0XFFFF0000, y=0XFF00FF00\\n1011 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHHHHHHHHH // 12: bfn=0b1011, a=0XFF00FF00, b=0XFFFF0000, y=0XFF00FFFF\\n1100 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL // 13: bfn=0b1100, a=0XFF00FF00, b=0XFFFF0000, y=0XFFFF0000\\n1101 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLHHHHHHHH // 14: bfn=0b1101, a=0XFF00FF00, b=0XFFFF0000, y=0XFFFF00FF\\n1110 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL // 15: bfn=0b1110, a=0XFF00FF00, b=0XFFFF0000, y=0XFFFFFF00\\n1111 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH // 16: bfn=0b1111, a=0XFF00FF00, b=0XFFFF0000, y=0XFFFFFFFF\\n      \\n.plot X(BFN[3:0])\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(Y[31:0])\\n\"]],\"schematic\":[[\"port\",[0,-72,4],{\"signal\":\"Y[31:0]\",\"direction\":\"out\"}],[\"port\",[-88,-56,0],{\"signal\":\"BFN[3:0]\"}],[\"port\",[-88,-72,0],{\"signal\":\"B[31:0]\"}],[\"port\",[-88,-88,0],{\"signal\":\"A[31:0]\"}],[\"/gates/mux4\",[-16,-96,0]],[\"wire\",[-8,-32,0,-16,0],{\"signal\":\"B[31:0], A[31:0]\"}],[\"wire\",[-16,-48,0,-8,0],{\"signal\":\"BFN[0]\"}],[\"wire\",[-16,-64,0,-8,0],{\"signal\":\"BFN[1]\"}],[\"wire\",[-16,-80,0,-8,0],{\"signal\":\"BFN[2]\"}],[\"wire\",[-16,-96,0,-8,0],{\"signal\":\"BFN[3]\"}]],\"icon\":[[\"text\",[0,-3,0],{\"text\":\"BOOL\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-32,8,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[-32,16,0],{\"name\":\"B[31:0]\"}],[\"terminal\",[-32,24,0],{\"name\":\"BFN[3:0]\"}],[\"terminal\",[32,8,4],{\"name\":\"Y[31:0]\"}],[\"text\",[-23,16,0],{\"text\":\"B[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,8,0],{\"text\":\"A[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,24,0],{\"text\":\"BFN[3:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[23,8,0],{\"text\":\"Y[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[-24,-8,0,48,0]],[\"line\",[24,32,0,-48,0]],[\"property\",[0,-9,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}],[\"line\",[-24,-8,0,0,40]],[\"line\",[24,-8,0,0,40]]]},\"/alu/FA\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"icon-readonly\":\"true\",\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-112,-48,0],{\"signal\":\"A\"}],[\"port\",[-112,-32,0],{\"signal\":\"B\"}],[\"port\",[-112,-16,0],{\"signal\":\"Cin\"}],[\"port\",[24,-136,4],{\"signal\":\"Cout\",\"direction\":\"out\"}],[\"port\",[24,-32,4],{\"signal\":\"S\",\"direction\":\"out\"}],[\"/gates/xor2\",[-72,-48,0]],[\"wire\",[-24,-16,0,0,-8]],[\"/gates/nand3\",[-24,-152,0]],[\"/gates/nand2\",[-72,-184,0]],[\"/gates/nand2\",[-72,-104,0]],[\"/gates/nand2\",[-72,-144,0]],[\"wire\",[-24,-176,0,0,24]],[\"wire\",[-24,-120,0,0,24]],[\"wire\",[-72,-144,0,-8,0]],[\"wire\",[-80,-144,0,0,96]],[\"wire\",[-112,-48,0,32,0]],[\"wire\",[-72,-48,0,-8,0]],[\"wire\",[-72,-128,0,-16,0]],[\"wire\",[-88,-128,0,0,96]],[\"wire\",[-112,-32,0,24,0]],[\"wire\",[-72,-32,0,-16,0]],[\"wire\",[-72,-128,0,0,24]],[\"wire\",[-72,-168,0,0,24]],[\"wire\",[-72,-88,0,-24,0]],[\"wire\",[-72,-184,0,-24,0]],[\"wire\",[-96,-184,0,0,96]],[\"wire\",[-96,-88,0,0,72]],[\"wire\",[-112,-16,0,16,0]],[\"wire\",[-24,-16,0,-72,0]],[\"/gates/xor2\",[-24,-40,0]]],\"icon\":[[\"terminal\",[-24,-8,0],{\"name\":\"A\"}],[\"terminal\",[-24,8,0],{\"name\":\"B\"}],[\"terminal\",[0,32,3],{\"name\":\"Cin\"}],[\"terminal\",[24,0,4],{\"name\":\"S\"}],[\"terminal\",[0,-32,7],{\"name\":\"Cout\"}],[\"line\",[16,-24,0,-32,0]],[\"line\",[-16,24,0,32,0]],[\"text\",[-15,-8,0],{\"text\":\"A\",\"font\":\"4pt sans-serif\"}],[\"text\",[-15,8,0],{\"text\":\"B\",\"font\":\"4pt sans-serif\"}],[\"text\",[15,0,0],{\"text\":\"S\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[0,-23,0],{\"text\":\"Cout\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[0,23,0],{\"text\":\"Cin\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[0,0,0],{\"text\":\"FA\",\"align\":\"center\",\"font\":\"bold 6pt sans-serif\"}],[\"line\",[-16,-24,0,0,48]],[\"line\",[16,-24,0,0,48]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n.mode gate\\n\\n.group inputs A B Cin\\n.group outputs Cout S\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 LL\\n001 LH\\n010 LH\\n011 HL\\n100 LH\\n101 HL\\n110 HL\\n111 HH\\n\\n.plot A\\n.plot B\\n.plot Cin\\n.plot Cout\\n.plot S\\n\"]]},\"/alu/cmp\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"icon-readonly\":\"true\",\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-104,88,0],{\"signal\":\"V\"}],[\"port\",[-104,72,0],{\"signal\":\"N\"}],[\"port\",[16,-16,4],{\"signal\":\"Y[31:1]\",\"direction\":\"out\"}],[\"port\",[16,24,2],{\"signal\":\"Y[0]\",\"direction\":\"out\"}],[\"jumper\",[8,-16,0]],[\"wire\",[8,-16,0,-8,0],{\"signal\":\"0'31\"}],[\"port\",[-104,8,0],{\"signal\":\"Z\"}],[\"port\",[-72,-16,0],{\"signal\":\"CFN[1:0]\"}],[\"/gates/mux2\",[-48,24,6]],[\"/gates/xor2\",[-104,72,0]],[\"/gates/or2\",[-96,16,0]],[\"wire\",[-40,-8,0,0,-8],{\"signal\":\"cfn[1]\"}],[\"/gates/mux2\",[0,16,0]],[\"wire\",[8,48,6,0,-8],{\"signal\":\"cfn[0]\"}],[\"wire\",[-32,16,6,32,0]],[\"wire\",[-56,80,0,40,0]],[\"wire\",[0,32,0,-16,0]],[\"wire\",[-96,16,0,0,-8]],[\"wire\",[-48,8,0,-48,0]],[\"wire\",[-96,8,0,-8,0]],[\"wire\",[-96,32,0,0,16]],[\"wire\",[-96,48,0,40,0]],[\"wire\",[-56,80,0,0,-32]],[\"wire\",[-16,32,0,0,48]],[\"text\",[-100,-49,0],{\"text\":\"signals arrive in order: \\nn,z,v\"}]],\"icon\":[[\"text\",[0,19,0],{\"text\":\"CMP\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-16,-16,7],{\"name\":\"Z\"}],[\"terminal\",[0,-16,7],{\"name\":\"V\"}],[\"terminal\",[16,-16,7],{\"name\":\"N\"}],[\"terminal\",[32,8,4],{\"name\":\"Y[31:0]\"}],[\"text\",[16,-7,0],{\"text\":\"N\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[-16,-7,0],{\"text\":\"Z\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[-23,8,0],{\"text\":\"CFN[1:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[23,8,0],{\"text\":\"Y[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[-24,-8,0,48,0]],[\"line\",[24,24,0,-48,0]],[\"property\",[0,25,0],{\"format\":\"{name}\",\"align\":\"top-center\"}],[\"text\",[0,-7,0],{\"text\":\"V\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"terminal\",[-32,8,0],{\"name\":\"CFN[1:0]\"}],[\"line\",[-24,-8,0,0,32]],[\"line\",[24,-8,0,0,32]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs CFN[1:0] Z V N\\n.group outputs Y[31:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n01 000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  1: cfn=CMPEQ, z=0, v=0, n=0, y=0\\n10 000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  2: cfn=CMPLT, z=0, v=0, n=0, y=0\\n11 000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  3: cfn=CMPLE, z=0, v=0, n=0, y=0\\n01 001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  4: cfn=CMPEQ, z=0, v=0, n=1, y=0\\n10 001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  5: cfn=CMPLT, z=0, v=0, n=1, y=1\\n11 001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  6: cfn=CMPLE, z=0, v=0, n=1, y=1\\n01 010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  7: cfn=CMPEQ, z=0, v=1, n=0, y=0\\n10 010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  8: cfn=CMPLT, z=0, v=1, n=0, y=1\\n11 010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  9: cfn=CMPLE, z=0, v=1, n=0, y=1\\n01 011 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL // 10: cfn=CMPEQ, z=0, v=1, n=1, y=0\\n10 011 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL // 11: cfn=CMPLT, z=0, v=1, n=1, y=0\\n11 011 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL // 12: cfn=CMPLE, z=0, v=1, n=1, y=0\\n01 100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 13: cfn=CMPEQ, z=1, v=0, n=0, y=1\\n10 100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL // 14: cfn=CMPLT, z=1, v=0, n=0, y=0\\n11 100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 15: cfn=CMPLE, z=1, v=0, n=0, y=1\\n01 101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 16: cfn=CMPEQ, z=1, v=0, n=1, y=1\\n10 101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 17: fn=CMPLT, z=1, v=0, n=1, y=1\\n11 101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 18: fn=CMPLE, z=1, v=0, n=1, y=1\\n01 110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 19: fn=CMPEQ, z=1, v=1, n=0, y=1\\n10 110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 20: fn=CMPLT, z=1, v=1, n=0, y=1\\n11 110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 21: fn=CMPLE, z=1, v=1, n=0, y=1\\n      \\n.plot X(CFN[1:0])\\n.plot Z\\n.plot V\\n.plot N\\n.plot X(Y[31:0])\\n\"]]},\"/alu/shift\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"icon-readonly\":\"true\",\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-120,-104,6],{\"signal\":\"A[31:0]\"}],[\"port\",[-104,-48,0],{\"signal\":\"B[4:0]\"}],[\"port\",[8,-120,0],{\"signal\":\"SFN[1:0]\"}],[\"port\",[72,-48,4],{\"signal\":\"Y[31:0]\",\"direction\":\"out\"}],[\"wire\",[-104,-64,0,-16,0],{\"signal\":\"sfn[1]\"}],[\"/gates/mux2\",[-120,-88,6]],[\"wire\",[-112,-120,6,0,16],{\"signal\":\"sfn[0]\"}],[\"wire\",[-120,-88,0,-8,0],{\"signal\":\"A[0:31]\"}],[\"wire\",[-104,-80,0,0,-16],{\"width\":\"32\"}],[\"/gates/mux2\",[56,-56,6]],[\"wire\",[64,-88,6,0,16],{\"signal\":\"sfn[0]\"}],[\"wire\",[56,-56,0,-8,0],{\"signal\":\"so[0:31]\",\"width\":\"32\"}],[\"wire\",[72,-48,0,0,-16],{\"width\":\"32\"}],[\"wire\",[0,-72,0,56,0],{\"width\":\"32\",\"signal\":\"so[31:0]\"}],[\"/user/shiftl32\",[-64,-56,0]]],\"icon\":[[\"text\",[0,-11,0],{\"text\":\"SHIFT\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[-32,8,0],{\"name\":\"B[4:0]\"}],[\"terminal\",[-32,16,0],{\"name\":\"SFN[1:0]\"}],[\"terminal\",[32,0,4],{\"name\":\"Y[31:0]\"}],[\"text\",[-23,8,0],{\"text\":\"B[4:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,0,0],{\"text\":\"A[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,16,0],{\"text\":\"SFN[1:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[23,0,0],{\"text\":\"Y[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[-24,-16,0,48,0]],[\"line\",[24,24,0,-48,0]],[\"property\",[0,-17,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}],[\"line\",[-24,-16,0,0,40]],[\"line\",[24,-16,0,0,40]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs SFN[1:0] A[31:0] B[4:0]\\n.group outputs Y[31:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00 00000000000000000000000000000000 00000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: fn=SHL, a=0X00000000, b= 0, y=0X00000000\\n01 00000000000000000000000000000000 00000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   2: fn=SHR, a=0X00000000, b= 0, y=0X00000000\\n11 00000000000000000000000000000000 00000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   3: fn=SRA, a=0X00000000, b= 0, y=0X00000000\\n00 00000000000000000000000000000000 00001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   4: fn=SHL, a=0X00000000, b= 1, y=0X00000000\\n01 00000000000000000000000000000000 00001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   5: fn=SHR, a=0X00000000, b= 1, y=0X00000000\\n11 00000000000000000000000000000000 00001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   6: fn=SRA, a=0X00000000, b= 1, y=0X00000000\\n00 00000000000000000000000000000000 00010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   7: fn=SHL, a=0X00000000, b= 2, y=0X00000000\\n01 00000000000000000000000000000000 00010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   8: fn=SHR, a=0X00000000, b= 2, y=0X00000000\\n11 00000000000000000000000000000000 00010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   9: fn=SRA, a=0X00000000, b= 2, y=0X00000000\\n00 00000000000000000000000000000000 00100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  10: fn=SHL, a=0X00000000, b= 4, y=0X00000000\\n01 00000000000000000000000000000000 00100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  11: fn=SHR, a=0X00000000, b= 4, y=0X00000000\\n11 00000000000000000000000000000000 00100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  12: fn=SRA, a=0X00000000, b= 4, y=0X00000000\\n00 00000000000000000000000000000000 01000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  13: fn=SHL, a=0X00000000, b= 8, y=0X00000000\\n01 00000000000000000000000000000000 01000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  14: fn=SHR, a=0X00000000, b= 8, y=0X00000000\\n11 00000000000000000000000000000000 01000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  15: fn=SRA, a=0X00000000, b= 8, y=0X00000000\\n00 00000000000000000000000000000000 10000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  16: fn=SHL, a=0X00000000, b=16, y=0X00000000\\n01 00000000000000000000000000000000 10000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  17: fn=SHR, a=0X00000000, b=16, y=0X00000000\\n11 00000000000000000000000000000000 10000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  18: fn=SRA, a=0X00000000, b=16, y=0X00000000\\n00 00000000000000000000000000000000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  19: fn=SHL, a=0X00000000, b=31, y=0X00000000\\n01 00000000000000000000000000000000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  20: fn=SHR, a=0X00000000, b=31, y=0X00000000\\n11 00000000000000000000000000000000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  21: fn=SRA, a=0X00000000, b=31, y=0X00000000\\n00 00000000000000000000000000000001 00000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  22: fn=SHL, a=0X00000001, b= 0, y=0X00000001\\n01 00000000000000000000000000000001 00000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  23: fn=SHR, a=0X00000001, b= 0, y=0X00000001\\n11 00000000000000000000000000000001 00000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  24: fn=SRA, a=0X00000001, b= 0, y=0X00000001\\n00 00000000000000000000000000000001 00001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL //  25: fn=SHL, a=0X00000001, b= 1, y=0X00000002\\n01 00000000000000000000000000000001 00001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  26: fn=SHR, a=0X00000001, b= 1, y=0X00000000\\n11 00000000000000000000000000000001 00001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  27: fn=SRA, a=0X00000001, b= 1, y=0X00000000\\n00 00000000000000000000000000000001 00010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //  28: fn=SHL, a=0X00000001, b= 2, y=0X00000004\\n01 00000000000000000000000000000001 00010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  29: fn=SHR, a=0X00000001, b= 2, y=0X00000000\\n11 00000000000000000000000000000001 00010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  30: fn=SRA, a=0X00000001, b= 2, y=0X00000000\\n00 00000000000000000000000000000001 00100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL //  31: fn=SHL, a=0X00000001, b= 4, y=0X00000010\\n01 00000000000000000000000000000001 00100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  32: fn=SHR, a=0X00000001, b= 4, y=0X00000000\\n11 00000000000000000000000000000001 00100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  33: fn=SRA, a=0X00000001, b= 4, y=0X00000000\\n00 00000000000000000000000000000001 01000 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL //  34: fn=SHL, a=0X00000001, b= 8, y=0X00000100\\n01 00000000000000000000000000000001 01000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  35: fn=SHR, a=0X00000001, b= 8, y=0X00000000\\n11 00000000000000000000000000000001 01000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  36: fn=SRA, a=0X00000001, b= 8, y=0X00000000\\n00 00000000000000000000000000000001 10000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL //  37: fn=SHL, a=0X00000001, b=16, y=0X00010000\\n01 00000000000000000000000000000001 10000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  38: fn=SHR, a=0X00000001, b=16, y=0X00000000\\n11 00000000000000000000000000000001 10000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  39: fn=SRA, a=0X00000001, b=16, y=0X00000000\\n00 00000000000000000000000000000001 11111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  40: fn=SHL, a=0X00000001, b=31, y=0X80000000\\n01 00000000000000000000000000000001 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  41: fn=SHR, a=0X00000001, b=31, y=0X00000000\\n11 00000000000000000000000000000001 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  42: fn=SRA, a=0X00000001, b=31, y=0X00000000\\n00 11111111111111111111111111111111 00000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  43: fn=SHL, a=0XFFFFFFFF, b= 0, y=0XFFFFFFFF\\n01 11111111111111111111111111111111 00000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  44: fn=SHR, a=0XFFFFFFFF, b= 0, y=0XFFFFFFFF\\n11 11111111111111111111111111111111 00000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  45: fn=SRA, a=0XFFFFFFFF, b= 0, y=0XFFFFFFFF\\n00 11111111111111111111111111111111 00001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL //  46: fn=SHL, a=0XFFFFFFFF, b= 1, y=0XFFFFFFFE\\n01 11111111111111111111111111111111 00001 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  47: fn=SHR, a=0XFFFFFFFF, b= 1, y=0X7FFFFFFF\\n11 11111111111111111111111111111111 00001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  48: fn=SRA, a=0XFFFFFFFF, b= 1, y=0XFFFFFFFF\\n00 11111111111111111111111111111111 00010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL //  49: fn=SHL, a=0XFFFFFFFF, b= 2, y=0XFFFFFFFC\\n01 11111111111111111111111111111111 00010 LLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  50: fn=SHR, a=0XFFFFFFFF, b= 2, y=0X3FFFFFFF\\n11 11111111111111111111111111111111 00010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  51: fn=SRA, a=0XFFFFFFFF, b= 2, y=0XFFFFFFFF\\n00 11111111111111111111111111111111 00100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL //  52: fn=SHL, a=0XFFFFFFFF, b= 4, y=0XFFFFFFF0\\n01 11111111111111111111111111111111 00100 LLLLHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  53: fn=SHR, a=0XFFFFFFFF, b= 4, y=0X0FFFFFFF\\n11 11111111111111111111111111111111 00100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  54: fn=SRA, a=0XFFFFFFFF, b= 4, y=0XFFFFFFFF\\n00 11111111111111111111111111111111 01000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL //  55: fn=SHL, a=0XFFFFFFFF, b= 8, y=0XFFFFFF00\\n01 11111111111111111111111111111111 01000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH //  56: fn=SHR, a=0XFFFFFFFF, b= 8, y=0X00FFFFFF\\n11 11111111111111111111111111111111 01000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  57: fn=SRA, a=0XFFFFFFFF, b= 8, y=0XFFFFFFFF\\n00 11111111111111111111111111111111 10000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL //  58: fn=SHL, a=0XFFFFFFFF, b=16, y=0XFFFF0000\\n01 11111111111111111111111111111111 10000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH //  59: fn=SHR, a=0XFFFFFFFF, b=16, y=0X0000FFFF\\n11 11111111111111111111111111111111 10000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  60: fn=SRA, a=0XFFFFFFFF, b=16, y=0XFFFFFFFF\\n00 11111111111111111111111111111111 11111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  61: fn=SHL, a=0XFFFFFFFF, b=31, y=0X80000000\\n01 11111111111111111111111111111111 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  62: fn=SHR, a=0XFFFFFFFF, b=31, y=0X00000001\\n11 11111111111111111111111111111111 11111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH //  63: fn=SRA, a=0XFFFFFFFF, b=31, y=0XFFFFFFFF\\n00 00010010001101000101011001111000 00000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL //  64: fn=SHL, a=0X12345678, b= 0, y=0X12345678\\n01 00010010001101000101011001111000 00000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL //  65: fn=SHR, a=0X12345678, b= 0, y=0X12345678\\n11 00010010001101000101011001111000 00000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL //  66: fn=SRA, a=0X12345678, b= 0, y=0X12345678\\n00 00010010001101000101011001111000 00001 LLHLLHLLLHHLHLLLHLHLHHLLHHHHLLLL //  67: fn=SHL, a=0X12345678, b= 1, y=0X2468ACF0\\n01 00010010001101000101011001111000 00001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL //  68: fn=SHR, a=0X12345678, b= 1, y=0X091A2B3C\\n11 00010010001101000101011001111000 00001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL //  69: fn=SRA, a=0X12345678, b= 1, y=0X091A2B3C\\n00 00010010001101000101011001111000 00010 LHLLHLLLHHLHLLLHLHLHHLLHHHHLLLLL //  70: fn=SHL, a=0X12345678, b= 2, y=0X48D159E0\\n01 00010010001101000101011001111000 00010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL //  71: fn=SHR, a=0X12345678, b= 2, y=0X048D159E\\n11 00010010001101000101011001111000 00010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL //  72: fn=SRA, a=0X12345678, b= 2, y=0X048D159E\\n00 00010010001101000101011001111000 00100 LLHLLLHHLHLLLHLHLHHLLHHHHLLLLLLL //  73: fn=SHL, a=0X12345678, b= 4, y=0X23456780\\n01 00010010001101000101011001111000 00100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH //  74: fn=SHR, a=0X12345678, b= 4, y=0X01234567\\n11 00010010001101000101011001111000 00100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH //  75: fn=SRA, a=0X12345678, b= 4, y=0X01234567\\n00 00010010001101000101011001111000 01000 LLHHLHLLLHLHLHHLLHHHHLLLLLLLLLLL //  76: fn=SHL, a=0X12345678, b= 8, y=0X34567800\\n01 00010010001101000101011001111000 01000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL //  77: fn=SHR, a=0X12345678, b= 8, y=0X00123456\\n11 00010010001101000101011001111000 01000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL //  78: fn=SRA, a=0X12345678, b= 8, y=0X00123456\\n00 00010010001101000101011001111000 10000 LHLHLHHLLHHHHLLLLLLLLLLLLLLLLLLL //  79: fn=SHL, a=0X12345678, b=16, y=0X56780000\\n01 00010010001101000101011001111000 10000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL //  80: fn=SHR, a=0X12345678, b=16, y=0X00001234\\n11 00010010001101000101011001111000 10000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL //  81: fn=SRA, a=0X12345678, b=16, y=0X00001234\\n00 00010010001101000101011001111000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  82: fn=SHL, a=0X12345678, b=31, y=0X00000000\\n01 00010010001101000101011001111000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  83: fn=SHR, a=0X12345678, b=31, y=0X00000000\\n11 00010010001101000101011001111000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  84: fn=SRA, a=0X12345678, b=31, y=0X00000000\\n00 11111110110111001011101010011000 00000 HHHHHHHLHHLHHHLLHLHHHLHLHLLHHLLL //  85: fn=SHL, a=0XFEDCBA98, b= 0, y=0XFEDCBA98\\n01 11111110110111001011101010011000 00000 HHHHHHHLHHLHHHLLHLHHHLHLHLLHHLLL //  86: fn=SHR, a=0XFEDCBA98, b= 0, y=0XFEDCBA98\\n11 11111110110111001011101010011000 00000 HHHHHHHLHHLHHHLLHLHHHLHLHLLHHLLL //  87: fn=SRA, a=0XFEDCBA98, b= 0, y=0XFEDCBA98\\n00 11111110110111001011101010011000 00001 HHHHHHLHHLHHHLLHLHHHLHLHLLHHLLLL //  88: fn=SHL, a=0XFEDCBA98, b= 1, y=0XFDB97530\\n01 11111110110111001011101010011000 00001 LHHHHHHHLHHLHHHLLHLHHHLHLHLLHHLL //  89: fn=SHR, a=0XFEDCBA98, b= 1, y=0X7F6E5D4C\\n11 11111110110111001011101010011000 00001 HHHHHHHHLHHLHHHLLHLHHHLHLHLLHHLL //  90: fn=SRA, a=0XFEDCBA98, b= 1, y=0XFF6E5D4C\\n00 11111110110111001011101010011000 00010 HHHHHLHHLHHHLLHLHHHLHLHLLHHLLLLL //  91: fn=SHL, a=0XFEDCBA98, b= 2, y=0XFB72EA60\\n01 11111110110111001011101010011000 00010 LLHHHHHHHLHHLHHHLLHLHHHLHLHLLHHL //  92: fn=SHR, a=0XFEDCBA98, b= 2, y=0X3FB72EA6\\n11 11111110110111001011101010011000 00010 HHHHHHHHHLHHLHHHLLHLHHHLHLHLLHHL //  93: fn=SRA, a=0XFEDCBA98, b= 2, y=0XFFB72EA6\\n00 11111110110111001011101010011000 00100 HHHLHHLHHHLLHLHHHLHLHLLHHLLLLLLL //  94: fn=SHL, a=0XFEDCBA98, b= 4, y=0XEDCBA980\\n01 11111110110111001011101010011000 00100 LLLLHHHHHHHLHHLHHHLLHLHHHLHLHLLH //  95: fn=SHR, a=0XFEDCBA98, b= 4, y=0X0FEDCBA9\\n11 11111110110111001011101010011000 00100 HHHHHHHHHHHLHHLHHHLLHLHHHLHLHLLH //  96: fn=SRA, a=0XFEDCBA98, b= 4, y=0XFFEDCBA9\\n00 11111110110111001011101010011000 01000 HHLHHHLLHLHHHLHLHLLHHLLLLLLLLLLL //  97: fn=SHL, a=0XFEDCBA98, b= 8, y=0XDCBA9800\\n01 11111110110111001011101010011000 01000 LLLLLLLLHHHHHHHLHHLHHHLLHLHHHLHL //  98: fn=SHR, a=0XFEDCBA98, b= 8, y=0X00FEDCBA\\n11 11111110110111001011101010011000 01000 HHHHHHHHHHHHHHHLHHLHHHLLHLHHHLHL //  99: fn=SRA, a=0XFEDCBA98, b= 8, y=0XFFFEDCBA\\n00 11111110110111001011101010011000 10000 HLHHHLHLHLLHHLLLLLLLLLLLLLLLLLLL // 100: fn=SHL, a=0XFEDCBA98, b=16, y=0XBA980000\\n01 11111110110111001011101010011000 10000 LLLLLLLLLLLLLLLLHHHHHHHLHHLHHHLL // 101: fn=SHR, a=0XFEDCBA98, b=16, y=0X0000FEDC\\n11 11111110110111001011101010011000 10000 HHHHHHHHHHHHHHHHHHHHHHHLHHLHHHLL // 102: fn=SRA, a=0XFEDCBA98, b=16, y=0XFFFFFEDC\\n00 11111110110111001011101010011000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL // 103: fn=SHL, a=0XFEDCBA98, b=31, y=0X00000000\\n01 11111110110111001011101010011000 11111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH // 104: fn=SHR, a=0XFEDCBA98, b=31, y=0X00000001\\n11 11111110110111001011101010011000 11111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH // 105: fn=SRA, a=0XFEDCBA98, b=31, y=0XFFFFFFFF\\n\\n.plot X(SFN[1:0])\\n.plot X(A[31:0])\\n.plot X(B[4:0])\\n.plot X(Y[31:0])\"]]},\"/alu/alu\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"readonly\":\"true\"},\"schematic\":[[\"/alu/bool\",[-32,-40,0],{\"name\":\"bool\"}],[\"/alu/cmp\",[-32,88,0],{\"name\":\"cmp\"}],[\"wire\",[-64,96,0,-8,0],{\"signal\":\"FN[2:1]\"}],[\"wire\",[-64,-16,0,-8,0],{\"signal\":\"FN[3:0]\"}],[\"port\",[-128,-88,0],{\"signal\":\"A[31:0]\"}],[\"port\",[-128,-24,0],{\"signal\":\"B[31:0]\"}],[\"port\",[-128,48,0],{\"signal\":\"FN[5:0]\"}],[\"port\",[104,72,4],{\"signal\":\"Y[31:0]\",\"direction\":\"out\"}],[\"wire\",[-64,-72,0,-8,0],{\"signal\":\"FN[1:0]\"}],[\"/alu/arith\",[-32,24,0],{\"name\":\"arith\"}],[\"wire\",[-64,40,0,-8,0],{\"signal\":\"FN[0]\"}],[\"wire\",[-120,24,0,56,0]],[\"wire\",[-64,-80,0,-8,0],{\"signal\":\"B[4:0]\"}],[\"wire\",[-64,-88,0,-56,0]],[\"/gates/mux4\",[88,48,0]],[\"wire\",[-120,-32,0,56,0]],[\"wire\",[96,112,0,0,8],{\"signal\":\"FN[5:4]\"}],[\"/alu/shift\",[-32,-88,0],{\"name\":\"shift\"}],[\"wire\",[-48,64,0,0,8],{\"signal\":\"z\"}],[\"wire\",[-32,64,0,0,8],{\"signal\":\"v\"}],[\"wire\",[-16,64,0,0,8],{\"signal\":\"n\"}],[\"wire\",[-64,-24,0,-64,0]],[\"wire\",[-64,32,0,-64,0]],[\"wire\",[-128,-88,0,8,0]],[\"wire\",[0,-88,0,48,0]],[\"wire\",[0,24,0,8,0]],[\"wire\",[8,24,0,0,56]],[\"wire\",[0,-32,0,32,0]],[\"wire\",[-120,-32,0,0,56]],[\"wire\",[-120,-88,0,0,56]],[\"wire\",[-128,-24,0,0,56]],[\"wire\",[48,-88,0,0,136]],[\"wire\",[32,-32,0,0,96]],[\"wire\",[48,48,0,40,0],{\"signal\":\"shift[31:0]\"}],[\"wire\",[32,64,0,56,0],{\"signal\":\"bool[31:0]\"}],[\"wire\",[8,80,0,80,0],{\"signal\":\"arith[31:0]\"}],[\"wire\",[0,96,0,88,0],{\"signal\":\"cmp[31:0]\"}]],\"icon\":[[\"text\",[-8,-8,0],{\"text\":\"ALU\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-32,-16,0],{\"name\":\"B[31:0]\"}],[\"terminal\",[-32,16,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[-8,40,3],{\"name\":\"FN[5:0]\"}],[\"terminal\",[16,0,4],{\"name\":\"Y[31:0]\"}],[\"text\",[-23,16,0],{\"text\":\"A[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,-16,0],{\"text\":\"B[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[7,0,0],{\"text\":\"Y[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[-8,25,0],{\"text\":\"FN[5:0]\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"line\",[-24,-3,0,4,3]],[\"line\",[-20,0,0,-4,3]],[\"line\",[-24,32,0,32,-12]],[\"line\",[8,-21,0,-32,-11]],[\"line\",[-24,-32,0,0,29]],[\"line\",[-24,3,0,0,29]],[\"line\",[8,-21,0,0,41]],[\"property\",[-8,-27,0],{\"format\":\"{name}\",\"align\":\"bottom-left\"}],[\"line\",[-8,32,0,0,-6]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs FN[5:0] A[31:0] B[31:0]\\n.group outputs Y[31:0] Z V N\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n100000 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //   1: fn=F0000, a=0xff00ff00, b=0xffff0000, y=0x00000000\\n100001 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH LLH //   2: fn=F0001, a=0xff00ff00, b=0xffff0000, y=0x000000ff\\n100010 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHLLLLLLLL LLH //   3: fn=F0010, a=0xff00ff00, b=0xffff0000, y=0x0000ff00\\n100011 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //   4: fn=F0011, a=0xff00ff00, b=0xffff0000, y=0x0000ffff\\n100100 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLLLLLLLLL LLH //   5: fn=F0100, a=0xff00ff00, b=0xffff0000, y=0x00ff0000\\n100101 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLHHHHHHHH LLH //   6: fn=F0101, a=0xff00ff00, b=0xffff0000, y=0x00ff00ff\\n100110 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHLLLLLLLL LLH //   7: fn=  XOR, a=0xff00ff00, b=0xffff0000, y=0x00ffff00\\n100111 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //   8: fn=F0111, a=0xff00ff00, b=0xffff0000, y=0x00ffffff\\n101000 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLLLLLLLLL LLH //   9: fn=  AND, a=0xff00ff00, b=0xffff0000, y=0xff000000\\n101001 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLHHHHHHHH LLH //  10: fn= XNOR, a=0xff00ff00, b=0xffff0000, y=0xff0000ff\\n101010 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHLLLLLLLL LLH //  11: fn=    A, a=0xff00ff00, b=0xffff0000, y=0xff00ff00\\n101011 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHHHHHHHHH LLH //  12: fn=F1011, a=0xff00ff00, b=0xffff0000, y=0xff00ffff\\n101100 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLH //  13: fn=F1100, a=0xff00ff00, b=0xffff0000, y=0xffff0000\\n101101 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLHHHHHHHH LLH //  14: fn=F1101, a=0xff00ff00, b=0xffff0000, y=0xffff00ff\\n101110 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLH //  15: fn=   OR, a=0xff00ff00, b=0xffff0000, y=0xffffff00\\n101111 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  16: fn=F1111, a=0xff00ff00, b=0xffff0000, y=0xffffffff\\n110000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  17: fn=  SHL, a=0x00000000, b=0x00000000, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  18: fn=  SHR, a=0x00000000, b=0x00000000, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  19: fn=  SRA, a=0x00000000, b=0x00000000, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  20: fn=  SHL, a=0x00000000, b=0x00000001, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  21: fn=  SHR, a=0x00000000, b=0x00000001, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  22: fn=  SRA, a=0x00000000, b=0x00000001, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  23: fn=  SHL, a=0x00000000, b=0x00000002, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  24: fn=  SHR, a=0x00000000, b=0x00000002, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  25: fn=  SRA, a=0x00000000, b=0x00000002, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  26: fn=  SHL, a=0x00000000, b=0x00000004, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  27: fn=  SHR, a=0x00000000, b=0x00000004, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  28: fn=  SRA, a=0x00000000, b=0x00000004, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  29: fn=  SHL, a=0x00000000, b=0x00000008, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  30: fn=  SHR, a=0x00000000, b=0x00000008, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  31: fn=  SRA, a=0x00000000, b=0x00000008, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  32: fn=  SHL, a=0x00000000, b=0x00000010, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  33: fn=  SHR, a=0x00000000, b=0x00000010, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  34: fn=  SRA, a=0x00000000, b=0x00000010, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  35: fn=  SHL, a=0x00000000, b=0x0000001f, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  36: fn=  SHR, a=0x00000000, b=0x0000001f, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  37: fn=  SRA, a=0x00000000, b=0x0000001f, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  38: fn=  SHL, a=0x00000001, b=0x00000000, y=0x00000001\\n110001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  39: fn=  SHR, a=0x00000001, b=0x00000000, y=0x00000001\\n110011 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  40: fn=  SRA, a=0x00000001, b=0x00000000, y=0x00000001\\n110000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  41: fn=  SHL, a=0x00000001, b=0x00000001, y=0x00000002\\n110001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  42: fn=  SHR, a=0x00000001, b=0x00000001, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  43: fn=  SRA, a=0x00000001, b=0x00000001, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL //  44: fn=  SHL, a=0x00000001, b=0x00000002, y=0x00000004\\n110001 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  45: fn=  SHR, a=0x00000001, b=0x00000002, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  46: fn=  SRA, a=0x00000001, b=0x00000002, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL //  47: fn=  SHL, a=0x00000001, b=0x00000004, y=0x00000010\\n110001 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  48: fn=  SHR, a=0x00000001, b=0x00000004, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  49: fn=  SRA, a=0x00000001, b=0x00000004, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL //  50: fn=  SHL, a=0x00000001, b=0x00000008, y=0x00000100\\n110001 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  51: fn=  SHR, a=0x00000001, b=0x00000008, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  52: fn=  SRA, a=0x00000001, b=0x00000008, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL //  53: fn=  SHL, a=0x00000001, b=0x00000010, y=0x00010000\\n110001 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  54: fn=  SHR, a=0x00000001, b=0x00000010, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  55: fn=  SRA, a=0x00000001, b=0x00000010, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  56: fn=  SHL, a=0x00000001, b=0x0000001f, y=0x80000000\\n110001 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  57: fn=  SHR, a=0x00000001, b=0x0000001f, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  58: fn=  SRA, a=0x00000001, b=0x0000001f, y=0x00000000\\n110000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  59: fn=  SHL, a=0xffffffff, b=0x00000000, y=0xffffffff\\n110001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  60: fn=  SHR, a=0xffffffff, b=0x00000000, y=0xffffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  61: fn=  SRA, a=0xffffffff, b=0x00000000, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL HLL //  62: fn=  SHL, a=0xffffffff, b=0x00000001, y=0xfffffffe\\n110001 11111111111111111111111111111111 00000000000000000000000000000001 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  63: fn=  SHR, a=0xffffffff, b=0x00000001, y=0x7fffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  64: fn=  SRA, a=0xffffffff, b=0x00000001, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLL //  65: fn=  SHL, a=0xffffffff, b=0x00000002, y=0xfffffffc\\n110001 11111111111111111111111111111111 00000000000000000000000000000010 LLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  66: fn=  SHR, a=0xffffffff, b=0x00000002, y=0x3fffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  67: fn=  SRA, a=0xffffffff, b=0x00000002, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL LLL //  68: fn=  SHL, a=0xffffffff, b=0x00000004, y=0xfffffff0\\n110001 11111111111111111111111111111111 00000000000000000000000000000100 LLLLHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  69: fn=  SHR, a=0xffffffff, b=0x00000004, y=0x0fffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  70: fn=  SRA, a=0xffffffff, b=0x00000004, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLL //  71: fn=  SHL, a=0xffffffff, b=0x00000008, y=0xffffff00\\n110001 11111111111111111111111111111111 00000000000000000000000000001000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //  72: fn=  SHR, a=0xffffffff, b=0x00000008, y=0x00ffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  73: fn=  SRA, a=0xffffffff, b=0x00000008, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLL //  74: fn=  SHL, a=0xffffffff, b=0x00000010, y=0xffff0000\\n110001 11111111111111111111111111111111 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //  75: fn=  SHR, a=0xffffffff, b=0x00000010, y=0x0000ffff\\n110011 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  76: fn=  SRA, a=0xffffffff, b=0x00000010, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  77: fn=  SHL, a=0xffffffff, b=0x0000001f, y=0x80000000\\n110001 11111111111111111111111111111111 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH //  78: fn=  SHR, a=0xffffffff, b=0x0000001f, y=0x00000001\\n110011 11111111111111111111111111111111 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  79: fn=  SRA, a=0xffffffff, b=0x0000001f, y=0xffffffff\\n110000 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  80: fn=  SHL, a=0x12345678, b=0x00000000, y=0x12345678\\n110001 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  81: fn=  SHR, a=0x12345678, b=0x00000000, y=0x12345678\\n110011 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  82: fn=  SRA, a=0x12345678, b=0x00000000, y=0x12345678\\n110000 00010010001101000101011001111000 00000000000000000000000000000001 LLHLLHLLLHHLHLLLHLHLHHLLHHHHLLLL LLL //  83: fn=  SHL, a=0x12345678, b=0x00000001, y=0x2468acf0\\n110001 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  84: fn=  SHR, a=0x12345678, b=0x00000001, y=0x091a2b3c\\n110011 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  85: fn=  SRA, a=0x12345678, b=0x00000001, y=0x091a2b3c\\n110000 00010010001101000101011001111000 00000000000000000000000000000010 LHLLHLLLHHLHLLLHLHLHHLLHHHHLLLLL LLL //  86: fn=  SHL, a=0x12345678, b=0x00000002, y=0x48d159e0\\n110001 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  87: fn=  SHR, a=0x12345678, b=0x00000002, y=0x048d159e\\n110011 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  88: fn=  SRA, a=0x12345678, b=0x00000002, y=0x048d159e\\n110000 00010010001101000101011001111000 00000000000000000000000000000100 LLHLLLHHLHLLLHLHLHHLLHHHHLLLLLLL LLL //  89: fn=  SHL, a=0x12345678, b=0x00000004, y=0x23456780\\n110001 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  90: fn=  SHR, a=0x12345678, b=0x00000004, y=0x01234567\\n110011 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  91: fn=  SRA, a=0x12345678, b=0x00000004, y=0x01234567\\n110000 00010010001101000101011001111000 00000000000000000000000000001000 LLHHLHLLLHLHLHHLLHHHHLLLLLLLLLLL LLL //  92: fn=  SHL, a=0x12345678, b=0x00000008, y=0x34567800\\n110001 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  93: fn=  SHR, a=0x12345678, b=0x00000008, y=0x00123456\\n110011 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  94: fn=  SRA, a=0x12345678, b=0x00000008, y=0x00123456\\n110000 00010010001101000101011001111000 00000000000000000000000000010000 LHLHLHHLLHHHHLLLLLLLLLLLLLLLLLLL LLL //  95: fn=  SHL, a=0x12345678, b=0x00000010, y=0x56780000\\n110001 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  96: fn=  SHR, a=0x12345678, b=0x00000010, y=0x00001234\\n110011 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  97: fn=  SRA, a=0x12345678, b=0x00000010, y=0x00001234\\n110000 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  98: fn=  SHL, a=0x12345678, b=0x0000001f, y=0x00000000\\n110001 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  99: fn=  SHR, a=0x12345678, b=0x0000001f, y=0x00000000\\n110011 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 100: fn=  SRA, a=0x12345678, b=0x0000001f, y=0x00000000\\n110000 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 101: fn=  SHL, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\n110001 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 102: fn=  SHR, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\n110011 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 103: fn=  SRA, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\n110000 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHLHHLHHHLLHLHLHLHHHLLHHLLLL LLH // 104: fn=  SHL, a=0xfedcab98, b=0x00000001, y=0xfdb95730\\n110001 11111110110111001010101110011000 00000000000000000000000000000001 LHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 105: fn=  SHR, a=0xfedcab98, b=0x00000001, y=0x7f6e55cc\\n110011 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 106: fn=  SRA, a=0xfedcab98, b=0x00000001, y=0xff6e55cc\\n110000 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHLHHLHHHLLHLHLHLHHHLLHHLLLLL LLH // 107: fn=  SHL, a=0xfedcab98, b=0x00000002, y=0xfb72ae60\\n110001 11111110110111001010101110011000 00000000000000000000000000000010 LLHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 108: fn=  SHR, a=0xfedcab98, b=0x00000002, y=0x3fb72ae6\\n110011 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 109: fn=  SRA, a=0xfedcab98, b=0x00000002, y=0xffb72ae6\\n110000 11111110110111001010101110011000 00000000000000000000000000000100 HHHLHHLHHHLLHLHLHLHHHLLHHLLLLLLL LLH // 110: fn=  SHL, a=0xfedcab98, b=0x00000004, y=0xedcab980\\n110001 11111110110111001010101110011000 00000000000000000000000000000100 LLLLHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 111: fn=  SHR, a=0xfedcab98, b=0x00000004, y=0x0fedcab9\\n110011 11111110110111001010101110011000 00000000000000000000000000000100 HHHHHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 112: fn=  SRA, a=0xfedcab98, b=0x00000004, y=0xffedcab9\\n110000 11111110110111001010101110011000 00000000000000000000000000001000 HHLHHHLLHLHLHLHHHLLHHLLLLLLLLLLL LLH // 113: fn=  SHL, a=0xfedcab98, b=0x00000008, y=0xdcab9800\\n110001 11111110110111001010101110011000 00000000000000000000000000001000 LLLLLLLLHHHHHHHLHHLHHHLLHLHLHLHH LLH // 114: fn=  SHR, a=0xfedcab98, b=0x00000008, y=0x00fedcab\\n110011 11111110110111001010101110011000 00000000000000000000000000001000 HHHHHHHHHHHHHHHLHHLHHHLLHLHLHLHH LLH // 115: fn=  SRA, a=0xfedcab98, b=0x00000008, y=0xfffedcab\\n110000 11111110110111001010101110011000 00000000000000000000000000010000 HLHLHLHHHLLHHLLLLLLLLLLLLLLLLLLL LLH // 116: fn=  SHL, a=0xfedcab98, b=0x00000010, y=0xab980000\\n110001 11111110110111001010101110011000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHLHHLHHHLL LLH // 117: fn=  SHR, a=0xfedcab98, b=0x00000010, y=0x0000fedc\\n110011 11111110110111001010101110011000 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHLHHLHHHLL LLH // 118: fn=  SRA, a=0xfedcab98, b=0x00000010, y=0xfffffedc\\n110000 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 119: fn=  SHL, a=0xfedcab98, b=0x0000001f, y=0x00000000\\n110001 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 120: fn=  SHR, a=0xfedcab98, b=0x0000001f, y=0x00000001\\n110011 11111110110111001010101110011000 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 121: fn=  SRA, a=0xfedcab98, b=0x0000001f, y=0xffffffff\\n010000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 122: fn=  ADD, a=0x00000000, b=0x00000000, y=0x00000000\\n010000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 123: fn=  ADD, a=0x00000000, b=0x00000001, y=0x00000001\\n010000 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 124: fn=  ADD, a=0x00000000, b=0x-0000001, y=0xffffffff\\n010000 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 125: fn=  ADD, a=0x00000000, b=0xaaaaaaaa, y=0xaaaaaaaa\\n010000 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 126: fn=  ADD, a=0x00000000, b=0x55555555, y=0x55555555\\n010000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 127: fn=  ADD, a=0x00000001, b=0x00000000, y=0x00000001\\n010000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 128: fn=  ADD, a=0x00000001, b=0x00000001, y=0x00000002\\n010000 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 129: fn=  ADD, a=0x00000001, b=0x-0000001, y=0x00000000\\n010000 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 130: fn=  ADD, a=0x00000001, b=0xaaaaaaaa, y=0xaaaaaaab\\n010000 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 131: fn=  ADD, a=0x00000001, b=0x55555555, y=0x55555556\\n010000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 132: fn=  ADD, a=0x-0000001, b=0x00000000, y=0xffffffff\\n010000 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 133: fn=  ADD, a=0x-0000001, b=0x00000001, y=0x00000000\\n010000 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 134: fn=  ADD, a=0x-0000001, b=0x-0000001, y=0xfffffffe\\n010000 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 135: fn=  ADD, a=0x-0000001, b=0xaaaaaaaa, y=0xaaaaaaa9\\n010000 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 136: fn=  ADD, a=0x-0000001, b=0x55555555, y=0x55555554\\n010000 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 137: fn=  ADD, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\n010000 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 138: fn=  ADD, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaab\\n010000 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 139: fn=  ADD, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaa9\\n010000 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 140: fn=  ADD, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x55555554\\n010000 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 141: fn=  ADD, a=0xaaaaaaaa, b=0x55555555, y=0xffffffff\\n010000 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 142: fn=  ADD, a=0x55555555, b=0x00000000, y=0x55555555\\n010000 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 143: fn=  ADD, a=0x55555555, b=0x00000001, y=0x55555556\\n010000 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 144: fn=  ADD, a=0x55555555, b=0x-0000001, y=0x55555554\\n010000 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 145: fn=  ADD, a=0x55555555, b=0xaaaaaaaa, y=0xffffffff\\n010000 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 146: fn=  ADD, a=0x55555555, b=0x55555555, y=0xaaaaaaaa\\n010001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 147: fn=  SUB, a=0x00000000, b=0x00000000, y=0x00000000\\n010001 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 148: fn=  SUB, a=0x00000000, b=0x00000001, y=0xffffffff\\n010001 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 149: fn=  SUB, a=0x00000000, b=0x-0000001, y=0x00000001\\n010001 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 150: fn=  SUB, a=0x00000000, b=0xaaaaaaaa, y=0x55555556\\n010001 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 151: fn=  SUB, a=0x00000000, b=0x55555555, y=0xaaaaaaab\\n010001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 152: fn=  SUB, a=0x00000001, b=0x00000000, y=0x00000001\\n010001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 153: fn=  SUB, a=0x00000001, b=0x00000001, y=0x00000000\\n010001 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 154: fn=  SUB, a=0x00000001, b=0x-0000001, y=0x00000002\\n010001 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 155: fn=  SUB, a=0x00000001, b=0xaaaaaaaa, y=0x55555557\\n010001 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 156: fn=  SUB, a=0x00000001, b=0x55555555, y=0xaaaaaaac\\n010001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 157: fn=  SUB, a=0x-0000001, b=0x00000000, y=0xffffffff\\n010001 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 158: fn=  SUB, a=0x-0000001, b=0x00000001, y=0xfffffffe\\n010001 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 159: fn=  SUB, a=0x-0000001, b=0x-0000001, y=0x00000000\\n010001 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 160: fn=  SUB, a=0x-0000001, b=0xaaaaaaaa, y=0x55555555\\n010001 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 161: fn=  SUB, a=0x-0000001, b=0x55555555, y=0xaaaaaaaa\\n010001 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 162: fn=  SUB, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\n010001 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 163: fn=  SUB, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaa9\\n010001 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 164: fn=  SUB, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaab\\n010001 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 165: fn=  SUB, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x00000000\\n010001 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 166: fn=  SUB, a=0xaaaaaaaa, b=0x55555555, y=0x55555555\\n010001 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 167: fn=  SUB, a=0x55555555, b=0x00000000, y=0x55555555\\n010001 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 168: fn=  SUB, a=0x55555555, b=0x00000001, y=0x55555554\\n010001 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 169: fn=  SUB, a=0x55555555, b=0x-0000001, y=0x55555556\\n010001 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 170: fn=  SUB, a=0x55555555, b=0xaaaaaaaa, y=0xaaaaaaab\\n010001 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 171: fn=  SUB, a=0x55555555, b=0x55555555, y=0x00000000\\n000011 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 172: fn=CMPEQ, a=0x00000005, b=0xdeadbeef, y=0x00000000\\n000101 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 173: fn=CMPLT, a=0x00000005, b=0xdeadbeef, y=0x00000000\\n000111 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 174: fn=CMPLE, a=0x00000005, b=0xdeadbeef, y=0x00000000\\n000011 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 175: fn=CMPEQ, a=0x12345678, b=0x12345678, y=0x00000001\\n000101 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 176: fn=CMPLT, a=0x12345678, b=0x12345678, y=0x00000000\\n000111 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 177: fn=CMPLE, a=0x12345678, b=0x12345678, y=0x00000001\\n000011 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHL // 178: fn=CMPEQ, a=0x80000000, b=0x00000001, y=0x00000000\\n000101 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 179: fn=CMPLT, a=0x80000000, b=0x00000001, y=0x00000001\\n000111 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 180: fn=CMPLE, a=0x80000000, b=0x00000001, y=0x00000001\\n000011 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 181: fn=CMPEQ, a=0xdeadbeef, b=0x00000005, y=0x00000000\\n000101 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 182: fn=CMPLT, a=0xdeadbeef, b=0x00000005, y=0x00000001\\n000111 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 183: fn=CMPLE, a=0xdeadbeef, b=0x00000005, y=0x00000001\\n000011 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 184: fn=CMPEQ, a=0x7fffffff, b=0xffffffff, y=0x00000000\\n000101 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 185: fn=CMPLT, a=0x7fffffff, b=0xffffffff, y=0x00000000\\n000111 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 186: fn=CMPLE, a=0x7fffffff, b=0xffffffff, y=0x00000000\\n\\n// map FN[5:0] to text for operation\\n.plotdef op ? ? ? CMPEQ ? CMPLT ? CMPLE ? ? ? ? ? ? ? ? ADD SUB ? ? ? ? ? ? ? ? ? ? ? ? ? ? F0000 F0001 F0010 F0011 F0100 F0101 XOR F0111 AND XNOR A F1011 F1100 F1101 OR F1111 SHL SHR ? SRA ? ? ? ? ? ? ? ? ? ? ? ?\\n\\n.plot op(FN[5:0])\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(Y[31:0])\\n.plot Z\\n.plot V\\n.plot N\"]]},\"/user/add32\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-32,-48,0],{\"signal\":\"cin\"}],[\"/alu/FA\",[128,48,7]],[\"wire\",[136,24,0,0,-16],{\"signal\":\"B[0]\"}],[\"wire\",[120,24,0,0,-16],{\"signal\":\"A[0]\"}],[\"wire\",[96,48,0,-16,0],{\"signal\":\"c[1]\"}],[\"wire\",[160,48,0,16,0],{\"signal\":\"cin\"}],[\"wire\",[128,72,0,0,16],{\"signal\":\"s[0]\"}],[\"/alu/FA\",[-40,96,7]],[\"wire\",[-48,72,0,0,-16],{\"signal\":\"A[30:1]\"}],[\"wire\",[-72,96,0,-16,0],{\"signal\":\"c[31:2]\"}],[\"wire\",[-8,96,0,16,0],{\"signal\":\"c[30:1]\"}],[\"wire\",[-40,120,0,0,16],{\"signal\":\"s[30:1]\"}],[\"wire\",[-32,72,0,0,-8],{\"signal\":\"B[30:1]\"}],[\"/alu/FA\",[-160,40,7]],[\"wire\",[-168,16,0,0,-16],{\"signal\":\"A[31]\"}],[\"wire\",[-192,40,0,-16,0],{\"signal\":\"cout\"}],[\"wire\",[-128,40,0,16,0],{\"signal\":\"c[31]\"}],[\"wire\",[-160,64,0,0,16],{\"signal\":\"s[31]\"}],[\"wire\",[-152,16,0,0,-8],{\"signal\":\"B[31]\"}],[\"port\",[-32,-32,0],{\"signal\":\"A[31:0]\"}],[\"port\",[-32,-16,0],{\"signal\":\"B[31:0]\"}],[\"port\",[64,-48,0],{\"signal\":\"s[31:0]\",\"direction\":\"out\"}],[\"port\",[64,-32,0],{\"signal\":\"cout\",\"direction\":\"out\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[31:0] B[31:0] cin\\n.group outputs S[31:0] cout\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\n\\n00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\n\\n.plot X(cin)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot X(cout)\"]],\"icon\":[[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[88,0,4],{\"name\":\"cout\"}],[\"text\",[-19,0,0],{\"text\":\"A[31:0]\"}],[\"text\",[75,0,4],{\"text\":\"cout\"}],[\"terminal\",[-32,16,0],{\"name\":\"B[31:0]\"}],[\"text\",[-19,16,0],{\"text\":\"B[31:0]\"}],[\"terminal\",[88,16,4],{\"name\":\"S[31:0]\"}],[\"text\",[75,16,4],{\"text\":\"S[31:0]\"}],[\"terminal\",[-32,-16,0],{\"name\":\"cin\"}],[\"text\",[-19,-16,0],{\"text\":\"cin\"}],[\"line\",[-24,-29,0,0,57]],[\"line\",[-24,28,0,104,0]],[\"line\",[80,28,0,0,-56]],[\"line\",[80,-28,0,-104,0]],[\"text\",[21,-20,0],{\"text\":\"add32\\n\"}]]},\"/user/nor32\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"/gates/nor2\",[-24,144,0]],[\"/gates/nor4\",[-24,-16,0]],[\"wire\",[-24,0,0,-16,0],{\"signal\":\"in[23:16]\"}],[\"wire\",[-24,16,0,-16,0],{\"signal\":\"in[15:8]\"}],[\"wire\",[-24,32,0,-16,0],{\"signal\":\"in[7:0]\"}],[\"wire\",[24,8,0,16,0],{\"signal\":\"layer1[7:0]\"}],[\"wire\",[-24,-16,0,-16,0],{\"signal\":\"in[31:24]\"}],[\"/gates/nand4\",[-24,64,0]],[\"wire\",[-24,64,0,-16,0],{\"signal\":\"layer1[7:6]\"}],[\"wire\",[-24,80,0,-16,0],{\"signal\":\"layer1[5:4]\"}],[\"wire\",[-24,96,0,-16,0],{\"signal\":\"layer1[3:2]\"}],[\"wire\",[-24,112,0,-16,0],{\"signal\":\"layer1[1:0]\"}],[\"wire\",[24,88,0,16,0],{\"signal\":\"layer2[1:0]\"}],[\"wire\",[-24,160,0,-16,0],{\"signal\":\"layer2[0]\"}],[\"wire\",[-24,144,0,-16,0],{\"signal\":\"layer2[1]\"}],[\"port\",[24,152,4],{\"signal\":\"out\",\"direction\":\"out\"}],[\"port\",[-32,-48,0],{\"signal\":\"in[31:0]\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs in[31:0]\\n.group outputs out\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n11111111000000001111111100000000 L \\n00000000000000000000000000000000 H \\n10000000000000000000000000000000 L\\n\\n10000000000000000000000000000000 L\\n01000000000000000000000000000000 L\\n00100000000000000000000000000000 L\\n00010000000000000000000000000000 L\\n00001000000000000000000000000000 L\\n00000100000000000000000000000000 L \\n00000010000000000000000000000000 L\\n00000001000000000000000000000000 L\\n00000000100000000000000000000000 L\\n00000000010000000000000000000000 L\\n00000000001000000000000000000000 L\\n00000000000100000000000000000000 L\\n00000000000010000000000000000000 L\\n00000000000001000000000000000000 L\\n00000000000000100000000000000000 L \\n00000000000000010000000000000000 L\\n00000000000000001000000000000000 L\\n00000000000000000100000000000000 L\\n00000000000000000010000000000000 L\\n00000000000000000001000000000000 L\\n00000000000000000000100000000000 L\\n00000000000000000000010000000000 L\\n00000000000000000000001000000000 L\\n00000000000000000000000100000000 L\\n00000000000000000000000010000000 L\\n00000000000000000000000001000000 L\\n00000000000000000000000000100000 L\\n00000000000000000000000000010000 L\\n00000000000000000000000000001000 L\\n00000000000000000000000000000100 L\\n00000000000000000000000000000010 L\\n00000000000000000000000000000001 L\\n\\n11111111111111111111111111111111 L\\n\\n.plot X(in[31:0])\\n.plot X(out)\\n\"]],\"icon\":[[\"terminal\",[-32,0,0],{\"name\":\"in[31:0]\"}],[\"terminal\",[48,0,4],{\"name\":\"out\"}],[\"text\",[-19,0,0],{\"text\":\"in[31:0]\"}],[\"text\",[35,0,4],{\"text\":\"out\"}],[\"line\",[-24,-8,0,64,0]],[\"line\",[40,-8,0,0,16]],[\"line\",[40,19,0,-64,0]],[\"line\",[-24,8,0,0,-16]],[\"property\",[-4,12,0],{\"format\":\"{name}\"}],[\"line\",[-24,8,0,0,11]],[\"line\",[40,19,0,0,-12]]]},\"/user/add3test\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"test\":[[\"test\",\"\"]]},\"/user/shiftl32\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"/gates/mux2\",[-120,-48,0],{\"name\":\"mxsh16\"}],[\"port\",[24,-56,0],{\"signal\":\"a[31:0]\"}],[\"port\",[24,-32,0],{\"signal\":\"b[4:0]\"}],[\"port\",[24,88,4],{\"signal\":\"sl[31:0]\",\"direction\":\"out\"}],[\"wire\",[-120,-48,0,-8,0],{\"signal\":\"a[15:0],ext#16\"}],[\"wire\",[-120,-32,0,-8,0],{\"signal\":\"a[31:0]\"}],[\"wire\",[-112,-16,0,-16,0],{\"signal\":\"b[4]\"}],[\"wire\",[-104,-40,0,16,0],{\"signal\":\"q[31:0]\"}],[\"/gates/mux2\",[8,80,0],{\"name\":\"mxsh1\"}],[\"wire\",[8,80,0,-8,0],{\"signal\":\"t[30:0],ext\"}],[\"wire\",[8,96,0,-8,0],{\"signal\":\"t[31:0]\"}],[\"wire\",[16,112,0,-16,0],{\"signal\":\"b[0]\"}],[\"/gates/mux2\",[-120,16,0],{\"name\":\"mxsh8\"}],[\"wire\",[-120,16,0,-8,0],{\"signal\":\"q[23:0],ext#8\"}],[\"wire\",[-120,32,0,-8,0],{\"signal\":\"q[31:0]\"}],[\"wire\",[-112,48,0,-16,0],{\"signal\":\"b[3]\"}],[\"wire\",[-104,24,0,16,0],{\"signal\":\"r[31:0]\"}],[\"/gates/mux2\",[8,16,0],{\"name\":\"mxsh4\"}],[\"wire\",[8,16,0,-8,0],{\"signal\":\"r[27:0],ext#4\"}],[\"wire\",[8,32,0,-8,0],{\"signal\":\"r[31:0]\"}],[\"wire\",[16,48,0,-16,0],{\"signal\":\"b[2]\"}],[\"wire\",[24,24,0,16,0],{\"signal\":\"s[31:0]\"}],[\"/gates/mux2\",[-120,80,0],{\"name\":\"mxsh2\"}],[\"wire\",[-120,80,0,-8,0],{\"signal\":\"s[29:0],ext#2\"}],[\"wire\",[-120,96,0,-8,0],{\"signal\":\"s[31:0]\"}],[\"wire\",[-112,112,0,-16,0],{\"signal\":\"b[1]\"}],[\"wire\",[-104,88,0,16,0],{\"signal\":\"t[31:0]\"}],[\"port\",[-104,-104,0],{\"signal\":\"arith\"}],[\"/gates/mux2\",[-112,-136,0]],[\"wire\",[-112,-120,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-96,-128,0,16,0],{\"signal\":\"ext\"}],[\"wire\",[-112,-136,0,-16,0],{\"signal\":\"a[0]\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs a[31:0] b[4:0] arith\\n.group outputs sl[31:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000000000000000000000000000001 00001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL\\n00000000000000000000000000000001 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\n11111111111111111111111111111111 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\n\\n00000000000000000000000000000001 00001 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHH\\n00000000000000000000000000000001 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\n11111111111111111111111111111111 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\n\\n.plot X(a[31:0])\\n.plot X(b[4:0])\\n.plot X(sl[31:0])\\n\"]],\"icon\":[[\"terminal\",[-40,-24,0],{\"name\":\"a[31:0]\"}],[\"terminal\",[-40,8,0],{\"name\":\"b[4:0]\"}],[\"terminal\",[64,-16,4],{\"name\":\"sl[31:0]\"}],[\"text\",[5,-2,0],{\"text\":\"SL32\"}],[\"property\",[25,17,0],{\"format\":\"{name}\"}],[\"text\",[-30,-23,0],{\"text\":\"a[31:0]\"}],[\"text\",[-24,8,0],{\"text\":\"b[4:0]\"}],[\"text\",[53,-14,4],{\"text\":\"sl[31:0]\"}],[\"line\",[-32,-32,0,88,0]],[\"line\",[56,-32,0,0,56]],[\"line\",[56,24,0,-88,0]],[\"line\",[-32,24,0,0,-56]],[\"terminal\",[-40,-8,0],{\"name\":\"arith\"}],[\"text\",[-26,-8,0],{\"text\":\"arith\"}]]},\"/caches/icache\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"icon-readonly\":\"true\"},\"test\":[[\"test\",\"\"]],\"schematic\":[[\"port\",[-216,-520,0],{\"signal\":\"ia[31:0]\"}],[\"port\",[-216,-504,0],{\"signal\":\"reset\"}],[\"port\",[-216,-488,0],{\"signal\":\"clk\"}],[\"port\",[-248,-376,4],{\"signal\":\"xdata[63:0]\"}],[\"port\",[-216,-552,0],{\"signal\":\"irdy\",\"direction\":\"out\"}],[\"text\",[-255,-565,0],{\"text\":\"CPU interface\"}],[\"text\",[-268,-410,0],{\"text\":\"Main memory interface\"}],[\"jumper\",[-256,-392,0]],[\"wire\",[-256,-392,0,-8,0],{\"signal\":\"ia[31:3]\"}],[\"port\",[-248,-392,4],{\"signal\":\"xma[31:3]\",\"direction\":\"out\"}],[\"port\",[-216,-536,0],{\"signal\":\"id[31:0]\",\"direction\":\"out\"}],[\"jumper\",[-232,-448,0]],[\"wire\",[-224,-448,0,8,0],{\"signal\":\"line[4:0]\"}],[\"wire\",[-232,-448,0,-8,0],{\"signal\":\"ia[7:3]\"}],[\"jumper\",[-232,-464,0]],[\"wire\",[-224,-464,0,8,0],{\"signal\":\"offset\"}],[\"wire\",[-232,-464,0,-8,0],{\"signal\":\"ia[2]\"}],[\"jumper\",[-232,-432,0]],[\"wire\",[-224,-432,0,8,0],{\"signal\":\"atag[23:0]\"}],[\"wire\",[-232,-432,0,-8,0],{\"signal\":\"ia[31:8]\"}],[\"memory\",[-256,-328,0],{\"nports\":\"2\",\"naddr\":\"5\",\"ndata\":\"89\",\"contents\":\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\",\"name\":\"way0\"}],[\"wire\",[-256,-320,0,-16,0],{\"signal\":\"1'1\"}],[\"wire\",[-256,-312,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-256,-304,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-256,-328,0,-16,0],{\"signal\":\"line[4:0]\"}],[\"wire\",[-256,-288,0,-16,0],{\"signal\":\"line[4:0]\"}],[\"wire\",[-256,-280,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-256,-272,0,-16,0],{\"signal\":\"cwe0\"}],[\"wire\",[-256,-264,0,-16,0],{\"signal\":\"clk\"}],[\"wire\",[-184,-328,0,16,0],{\"signal\":\"valid0,tag0[23:0],cdata0[63:0]\"}],[\"wire\",[-184,-288,0,16,0],{\"signal\":\"1'1,ia[31:8],xdata[63:0]\"}],[\"memory\",[0,-328,0],{\"nports\":\"2\",\"naddr\":\"5\",\"ndata\":\"89\",\"contents\":\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\",\"name\":\"way1\"}],[\"wire\",[0,-320,0,-16,0],{\"signal\":\"1'1\"}],[\"wire\",[0,-312,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[0,-304,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[0,-328,0,-16,0],{\"signal\":\"line[4:0]\"}],[\"wire\",[0,-288,0,-16,0],{\"signal\":\"line[4:0]\"}],[\"wire\",[0,-280,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[0,-272,0,-16,0],{\"signal\":\"cwe1\"}],[\"wire\",[0,-264,0,-16,0],{\"signal\":\"clk\"}],[\"wire\",[72,-328,0,16,0],{\"signal\":\"valid1,tag1[23:0],cdata1[63:0]\"}],[\"wire\",[72,-288,0,16,0],{\"signal\":\"1'1,ia[31:8],xdata[63:0]\"}],[\"/caches/equal24\",[-24,-192,0]],[\"wire\",[-64,-208,0,-16,0],{\"signal\":\"tag0[23:0]\"}],[\"wire\",[-64,-192,0,-16,0],{\"signal\":\"atag[23:0]\"}],[\"wire\",[0,-200,0,40,0],{\"signal\":\"match0\"}],[\"/gates/and3\",[40,-200,0]],[\"/gates/inverter\",[8,-168,0]],[\"wire\",[88,-184,0,16,0],{\"signal\":\"hit0\"}],[\"wire\",[8,-168,0,-16,0],{\"signal\":\"reset\"}],[\"/caches/equal24\",[-24,-104,0]],[\"wire\",[-64,-120,0,-16,0],{\"signal\":\"tag1[23:0]\"}],[\"wire\",[-64,-104,0,-16,0],{\"signal\":\"atag[23:0]\"}],[\"/gates/and3\",[40,-112,0]],[\"/gates/inverter\",[8,-80,0]],[\"wire\",[88,-96,0,16,0],{\"signal\":\"hit1\"}],[\"wire\",[8,-80,0,-16,0],{\"signal\":\"reset\"}],[\"wire\",[40,-96,0,-16,0],{\"signal\":\"valid1\"}],[\"wire\",[40,-184,0,-24,0],{\"signal\":\"valid0\"}],[\"wire\",[0,-112,0,40,0],{\"signal\":\"match1\"}],[\"memory\",[-328,-160,0],{\"naddr\":\"3\",\"ndata\":\"4\",\"name\":\"cache_fsm\",\"contents\":\"0b0010 //state: 00, miss: 0\\n//       nstate: 0, rdy=1, cwe=0\\n0b0100 //state: 00, miss: 1\\n//       nstate: 1, rdy=0, cwe=0\\n0b1000 //state: 01, miss: 0\\n0b1000 //state: 01, miss: 1\\n0b0011 //state: 10, miss: 0\\n0b0011 //state: 10, miss: 1\\n\"}],[\"wire\",[-328,-160,0,-16,0],{\"signal\":\"state[1:0],miss\"}],[\"wire\",[-328,-152,0,-16,0],{\"signal\":\"1'1\"}],[\"wire\",[-328,-144,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-328,-136,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-256,-160,0,16,0],{\"signal\":\"nstate[1:0],irdy,cwe\"}],[\"/gates/dreg\",[-280,-80,0]],[\"wire\",[-240,-80,0,16,0],{\"signal\":\"state[1:0]\"}],[\"wire\",[-280,-64,0,0,16],{\"signal\":\"clk\"}],[\"/gates/and2\",[-344,-88,0]],[\"wire\",[-296,-80,0,16,0],{\"width\":\"2\"}],[\"wire\",[-344,-88,0,-16,0],{\"signal\":\"nstate[1:0]\"}],[\"wire\",[-344,-72,0,-16,0],{\"signal\":\"resetn\"}],[\"text\",[-199,-552,0],{\"text\":\"instruction ready\"}],[\"text\",[-194,-536,0],{\"text\":\"instruction data\\n\"}],[\"text\",[-166,-433,0],{\"text\":\"cache tag\"}],[\"text\",[-166,-448,0],{\"text\":\"cache line\"}],[\"text\",[-195,-520,0],{\"text\":\"instruction adress\"}],[\"text\",[-169,-316,0],{\"text\":\"read port\"}],[\"text\",[-167,-276,0],{\"text\":\"write port\"}],[\"text\",[-164,-377,0],{\"text\":\"data fetched from main mem\"}],[\"/gates/nor2\",[-352,-216,0]],[\"wire\",[-352,-216,0,-16,0],{\"signal\":\"hit0\"}],[\"wire\",[-352,-200,0,-16,0],{\"signal\":\"hit1\"}],[\"wire\",[-304,-208,0,16,0],{\"signal\":\"miss\"}],[\"/gates/mux2\",[144,-240,0]],[\"wire\",[160,-232,0,16,0],{\"signal\":\"waysel[63:0]\"}],[\"wire\",[144,-240,0,-16,0],{\"signal\":\"cdata0[63:0]\"}],[\"wire\",[144,-224,0,-16,0],{\"signal\":\"cdata1[63:0]\"}],[\"/gates/mux2\",[200,-192,0]],[\"wire\",[200,-192,0,-16,0],{\"signal\":\"waysel[63:32]\"}],[\"wire\",[200,-176,0,-16,0],{\"signal\":\"waysel[31:0]\"}],[\"wire\",[216,-184,0,16,0],{\"signal\":\"id[31:0]\"}],[\"wire\",[152,-208,0,-24,0],{\"signal\":\"hit0\"}],[\"wire\",[184,-160,0,24,0],{\"signal\":\"offset\"}],[\"memory\",[48,-520,0],{\"nports\":\"2\",\"naddr\":\"5\",\"name\":\"lru_state\",\"contents\":\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\"}],[\"wire\",[48,-520,0,-16,0],{\"signal\":\"ia[7:3]\"}],[\"wire\",[48,-512,0,-16,0],{\"signal\":\"1'1\"}],[\"wire\",[48,-504,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[48,-496,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[48,-480,0,-16,0],{\"signal\":\"ia[7:3]\"}],[\"wire\",[48,-472,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[48,-456,0,-16,0],{\"signal\":\"clk\"}],[\"wire\",[120,-520,0,32,0],{\"signal\":\"lru_is_1\"}],[\"wire\",[120,-480,0,16,0]],[\"/gates/inverter\",[152,-520,0]],[\"wire\",[184,-520,0,16,0],{\"signal\":\"lru_is_0\"}],[\"/gates/or2\",[184,-488,4]],[\"wire\",[184,-488,0,16,0],{\"signal\":\"cwe0\"}],[\"wire\",[184,-472,0,16,0],{\"signal\":\"hit0\"}],[\"/gates/and2\",[-32,-472,0]],[\"wire\",[48,-464,0,-32,0]],[\"wire\",[-32,-472,0,-8,0],{\"signal\":\"irdy\"}],[\"wire\",[-32,-456,0,-8,0],{\"signal\":\"resetn\"}],[\"/gates/inverter\",[-72,-456,0]],[\"wire\",[-72,-456,0,-8,0],{\"signal\":\"reset\"}],[\"/gates/and3\",[296,-536,0]],[\"/gates/and3\",[296,-488,0]],[\"wire\",[344,-520,0,16,0],{\"signal\":\"cwe0\"}],[\"wire\",[344,-472,0,16,0],{\"signal\":\"cwe1\"}],[\"wire\",[296,-536,0,-16,0],{\"signal\":\"cwe\"}],[\"wire\",[296,-520,0,-16,0],{\"signal\":\"lru_is_0\"}],[\"wire\",[296,-504,0,-16,0],{\"signal\":\"resetn\"}],[\"wire\",[296,-488,0,-16,0],{\"signal\":\"cwe\"}],[\"wire\",[296,-472,0,-16,0],{\"signal\":\"lru_is_1\"}],[\"wire\",[296,-456,0,-16,0],{\"signal\":\"resetn\"}]],\"icon\":[[\"terminal\",[-88,-80,0],{\"name\":\"ia[31:0]\"}],[\"terminal\",[-88,-64,0],{\"name\":\"reset\"}],[\"terminal\",[-88,-48,0],{\"name\":\"clk\"}],[\"terminal\",[-88,-120,6],{\"name\":\"irdy\"}],[\"terminal\",[24,-120,2],{\"name\":\"xma[31:3]\"}],[\"terminal\",[24,-104,2],{\"name\":\"xdata[63:0]\"}],[\"terminal\",[-88,-104,6],{\"name\":\"id[31:0]\"}],[\"text\",[-78,-80,0],{\"text\":\"ia[31:0]\"}],[\"text\",[-78,-64,0],{\"text\":\"reset\"}],[\"text\",[-78,-48,0],{\"text\":\"clk\"}],[\"text\",[-78,-120,0],{\"text\":\"irdy\"}],[\"text\",[-78,-104,0],{\"text\":\"id[31:0]\"}],[\"text\",[14,-120,4],{\"text\":\"xma[31:3]\"}],[\"text\",[14,-104,4],{\"text\":\"xdata[63:0]\"}],[\"text\",[-32,-134,0],{\"text\":\"ICACHE\",\"align\":\"center\",\"font\":\"10pt bold sans-serif\"}],[\"line\",[-80,-40,0,96,0]],[\"line\",[16,-144,0,-96,0]],[\"line\",[-80,-144,0,0,104]],[\"line\",[16,-144,0,0,104]]]},\"/caches/test\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"icon-readonly\":\"true\",\"test-readonly\":\"true\",\"schematic-readonly\":\"true\"},\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs reset ia[31:0]\\n.group outputs irdy id[31:0]\\n\\n.mode gate\\n\\n.cycle CLK=1 tran 10n assert inputs tran 40n CLK=0 tran 49n sample outputs tran 1n\\n\\n1 -------------------------------- - -------------------------------- //  1 reset\\n\\n// read 0x000.  It's a miss, so fetch the 2-word block at locns 0 and 4 from main memory\\n// way 0 is LRU, so put the data there in line 0.  then make way 1 LRU for cache line 0.\\n0 00000000000000000000000000000000 L -------------------------------- //  2 read locn 0 =&gt; miss\\n0 00000000000000000000000000000000 L -------------------------------- //  3 read locn 0 RD1\\n0 00000000000000000000000000000000 H LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  4 read locn 0 RD2 =&gt; done\\n\\n// read 0x004  Expect a hit in line 0, way 0.\\n0 00000000000000000000000000000100 H LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  5 read locn 4 =&gt; hit\\n\\n// read 0x100 (which also maps to cache line 0) =&gt; a miss, but fill line 0 in way 1\\n// way 0 now becomes LRU for cache line 0\\n0 00000000000000000000000100000000 L -------------------------------- //  6 read locn 100 =&gt; miss\\n0 00000000000000000000000100000000 L -------------------------------- //  7 read locn 100 RD1\\n0 00000000000000000000000100000000 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL //  8 read locn 100 RD2 =&gt; done\\n\\n// read 0x004.  Should still be a hit in line 0, way 0.\\n0 00000000000000000000000000000100 H LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH //  9 read locn 4 =&gt; hit\\n\\n// read 0x104.  Expect a hit in line 0, way 1.\\n0 00000000000000000000000100000100 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLH // 10 read locn 104 =&gt; hit\\n\\n// read 0x204.  Expect a miss; refill line 0, way 0; way 1 becomes LRU\\n0 00000000000000000000001000000100 L -------------------------------- // 11 read locn 204 =&gt; miss\\n0 00000000000000000000001000000100 L -------------------------------- // 12 read locn 204 RD1\\n0 00000000000000000000001000000100 H LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLH // 13 read locn 204 RD2 =&gt; done\\n\\n// read 0x104.  Expect a hit since it should still be in line 0, way 1.\\n0 00000000000000000000000100000100 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLH // 14 read locn 104 =&gt; hit\\n\\n// read 0x3FC =&gt; a miss, fill line 31, way 0\\n0 00000000000000000000001111111100 L -------------------------------- // 15 read locn 3FC =&gt; miss\\n0 00000000000000000000001111111100 L -------------------------------- // 16 read locn 3FC RD1\\n0 00000000000000000000001111111100 H LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH // 17 read locn 3FC RD2 =&gt; done\\n\\n// read 0x100.  Expect a hit in line 0, way 1\\n0 00000000000000000000000100000000 H LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL // 18 read locn 100 =&gt; hit\\n// read 0x200.  Expect a hit in line 0, way 0\\n0 00000000000000000000001000000000 H LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL // 19 read locn 200 =&gt; hit\\n// read 0x3F8.  Expect a hit in line 31, way 0\\n0 00000000000000000000001111111000 H LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHL // 20 read locn 3F8 =&gt; done\\n\\n\\n.plot clk\\n.plot reset\\n.plot X(ia[31:0])\\n.plot irdy\\n.plot X(id[31:0])\\n.plot X(xma[31:3])\\n.plot X(xdata[63:32])\\n.plot X(xdata[31:0])\\n\\n\\n\"]],\"schematic\":[[\"memory\",[80,-40,0],{\"ndata\":\"64\",\"name\":\"Main\",\"naddr\":\"9\",\"contents\":\"0x0000000100000000\\n0x0000000300000002\\n0x0000000500000004\\n0x0000000700000006\\n0x0000000900000008\\n0x0000000B0000000A\\n0x0000000D0000000C\\n0x0000000F0000000E\\n\\n0x0000001100000010\\n0x0000001300000012\\n0x0000001500000014\\n0x0000001700000016\\n0x0000001900000018\\n0x0000001B0000001A\\n0x0000001D0000001C\\n0x0000001F0000001E\\n\\n0x0000002100000020\\n0x0000002300000022\\n0x0000002500000024\\n0x0000002700000026\\n0x0000002900000028\\n0x0000002B0000002A\\n0x0000002D0000002C\\n0x0000002F0000002E\\n\\n0x0000003100000030\\n0x0000003300000032\\n0x0000003500000034\\n0x0000003700000036\\n0x0000003900000038\\n0x0000003B0000003A\\n0x0000003D0000003C\\n0x0000003F0000003E\\n\\n0x0000004100000040\\n0x0000004300000042\\n0x0000004500000044\\n0x0000004700000046\\n0x0000004900000048\\n0x0000004B0000004A\\n0x0000004D0000004C\\n0x0000004F0000004E\\n\\n0x0000005100000050\\n0x0000005300000052\\n0x0000005500000054\\n0x0000005700000056\\n0x0000005900000058\\n0x0000005B0000005A\\n0x0000005D0000005C\\n0x0000005F0000005E\\n\\n0x0000006100000060\\n0x0000006300000062\\n0x0000006500000064\\n0x0000006700000066\\n0x0000006900000068\\n0x0000006B0000006A\\n0x0000006D0000006C\\n0x0000006F0000006E\\n\\n0x0000007100000070\\n0x0000007300000072\\n0x0000007500000074\\n0x0000007700000076\\n0x0000007900000078\\n0x0000007B0000007A\\n0x0000007D0000007C\\n0x0000007F0000007E\\n\\n0x0000008100000080\\n0x0000008300000082\\n0x0000008500000084\\n0x0000008700000086\\n0x0000008900000088\\n0x0000008B0000008A\\n0x0000008D0000008C\\n0x0000008F0000008E\\n\\n0x0000009100000090\\n0x0000009300000092\\n0x0000009500000094\\n0x0000009700000096\\n0x0000009900000098\\n0x0000009B0000009A\\n0x0000009D0000009C\\n0x0000009F0000009E\\n\\n0x000000A1000000A0\\n0x000000A3000000A2\\n0x000000A5000000A4\\n0x000000A7000000A6\\n0x000000A9000000A8\\n0x000000AB000000AA\\n0x000000AD000000AC\\n0x000000AF000000AE\\n\\n0x000000B1000000B0\\n0x000000B3000000B2\\n0x000000B5000000B4\\n0x000000B7000000B6\\n0x000000B9000000B8\\n0x000000BB000000BA\\n0x000000BD000000BC\\n0x000000BF000000BE\\n\\n0x000000C1000000C0\\n0x000000C3000000C2\\n0x000000C5000000C4\\n0x000000C7000000C6\\n0x000000C9000000C8\\n0x000000CB000000CA\\n0x000000CD000000CC\\n0x000000CF000000CE\\n\\n0x000000D1000000D0\\n0x000000D3000000D2\\n0x000000D5000000D4\\n0x000000D7000000D6\\n0x000000D9000000D8\\n0x000000DB000000DA\\n0x000000DD000000DC\\n0x000000DF000000DE\\n\\n0x000000E1000000E0\\n0x000000E3000000E2\\n0x000000E5000000E4\\n0x000000E7000000E6\\n0x000000E9000000E8\\n0x000000EB000000EA\\n0x000000ED000000EC\\n0x000000EF000000EE\\n\\n0x000000F1000000F0\\n0x000000F3000000F2\\n0x000000F5000000F4\\n0x000000F7000000F6\\n0x000000F9000000F8\\n0x000000FB000000FA\\n0x000000FD000000FC\\n0x000000FF000000FE\"}],[\"wire\",[80,-40,0,-8,0],{\"signal\":\"xma[11:3]\"}],[\"wire\",[80,-32,0,-8,0],{\"signal\":\"1'1\"}],[\"wire\",[80,-24,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[80,-16,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[152,-40,0,8,0],{\"signal\":\"xdata[63:0]\"}],[\"wire\",[-16,-56,0,8,0],{\"signal\":\"xdata[63:0]\"}],[\"wire\",[-16,-72,0,8,0],{\"signal\":\"xma[31:3]\"}],[\"wire\",[-128,-16,0,-8,0],{\"signal\":\"reset\"}],[\"wire\",[-128,0,0,-8,0],{\"signal\":\"clk\"}],[\"/caches/icache\",[-40,48,0],{\"name\":\"icache\"}],[\"wire\",[-128,-72,0,-8,0],{\"signal\":\"irdy\"}],[\"wire\",[-128,-56,0,-8,0],{\"signal\":\"id[31:0]\"}],[\"wire\",[-128,-32,0,-8,0],{\"signal\":\"ia[31:0]\"}]]},\"/caches/equal24\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"icon-readonly\":\"true\",\"schematic-readonly\":\"true\"},\"test\":[[\"test\",\"\"]],\"schematic\":[[\"port\",[-80,-128,0],{\"signal\":\"A[23:0]\"}],[\"port\",[-80,-112,0],{\"signal\":\"B[23:0]\"}],[\"wire\",[-32,-120,0,8,0],{\"signal\":\"eq[23:0]\"}],[\"wire\",[-80,-48,0,-8,0],{\"signal\":\"eq[5:0]\"}],[\"wire\",[-80,-64,0,-8,0],{\"signal\":\"eq[11:6]\"}],[\"wire\",[-80,-80,0,-8,0],{\"signal\":\"eq[17:12]\"}],[\"wire\",[-80,-96,0,-8,0],{\"signal\":\"eq[23:18]\"}],[\"wire\",[-32,-72,0,8,0],{\"signal\":\"mx[5:0]\"}],[\"/gates/nand4\",[-80,-96,0]],[\"/gates/xnor2\",[-80,-128,0]],[\"wire\",[-80,0,0,-8,0],{\"signal\":\"mx[1:0]\"}],[\"wire\",[-80,-16,0,-8,0],{\"signal\":\"mx[3:2]\"}],[\"wire\",[-80,-32,0,-8,0],{\"signal\":\"mx[5:4]\"}],[\"/gates/nor3\",[-80,-32,0]],[\"wire\",[-32,-16,0,8,0],{\"signal\":\"my[1:0]\"}],[\"/gates/nand2\",[-80,16,0]],[\"wire\",[-80,16,0,-8,0],{\"signal\":\"my[1]\"}],[\"wire\",[-80,32,0,-8,0],{\"signal\":\"my[0]\"}],[\"/gates/inverter\",[-32,24,0]],[\"port\",[0,24,4],{\"signal\":\"equal\",\"direction\":\"out\"}]],\"icon\":[[\"terminal\",[-40,-16,0],{\"name\":\"A[23:0]\"}],[\"terminal\",[-40,0,0],{\"name\":\"B[23:0]\"}],[\"terminal\",[24,-8,4],{\"name\":\"equal\"}],[\"text\",[-30,-16,0],{\"text\":\"A\"}],[\"text\",[-30,0,0],{\"text\":\"B\"}],[\"text\",[14,-8,0],{\"text\":\"equal\",\"align\":\"center-right\"}],[\"text\",[-8,-26,0],{\"text\":\"equal24\",\"align\":\"center\",\"font\":\"8pt bold sans-serif\"}],[\"line\",[-32,-32,0,0,40]],[\"line\",[-32,8,0,48,0]],[\"line\",[16,8,0,0,-40]],[\"line\",[16,-32,0,-48,0]]]},\"/beta/beta\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-512,-344,0],{\"signal\":\"clk\"}],[\"port\",[-424,-224,0],{\"signal\":\"reset\"}],[\"port\",[-504,-216,0],{\"signal\":\"irq\"}],[\"port\",[-232,-448,0],{\"signal\":\"id[31:0]\"}],[\"port\",[-160,-136,4],{\"signal\":\"mrd[31:0]\"}],[\"port\",[-360,-392,4],{\"signal\":\"ia[31:0]\",\"direction\":\"out\"}],[\"port\",[-168,-176,4],{\"signal\":\"ma[31:0]\",\"direction\":\"out\"}],[\"port\",[-320,-176,4],{\"signal\":\"mwr\",\"direction\":\"out\"}],[\"port\",[-320,-192,4],{\"signal\":\"moe\",\"direction\":\"out\"}],[\"port\",[-104,-312,4],{\"signal\":\"mwd[31:0]\",\"direction\":\"out\"}],[\"/beta/ctl\",[-368,-216,0]],[\"/beta/pc\",[-488,-416,0]],[\"/beta/regfile\",[-168,-352,0]],[\"/alu/alu\",[-168,-200,1]],[\"/gates/mux2\",[-208,-272,7]],[\"/gates/mux2\",[-144,-272,7]],[\"wire\",[-184,-232,0,-16,0]],[\"wire\",[-200,-256,0,0,24],{\"width\":\"32\"}],[\"wire\",[-496,-344,0,-16,0]],[\"wire\",[-232,-344,0,-16,0],{\"signal\":\"clk\"}],[\"wire\",[-144,-272,0,0,-16],{\"signal\":\"id[15]#16,id[15:0]\"}],[\"wire\",[-112,-264,0,0,16],{\"signal\":\"bsel\"}],[\"wire\",[-176,-264,0,0,16],{\"signal\":\"asel\"}],[\"wire\",[-192,-312,0,16,0],{\"signal\":\"jt[31:0]\"}],[\"wire\",[-496,-392,0,-16,0],{\"signal\":\"jt[31:2]\"}],[\"wire\",[-192,-312,0,-16,0]],[\"/user/nor32\",[-240,-312,4],{\"name\":\"Zero\"}],[\"wire\",[-288,-312,0,-16,0],{\"signal\":\"Z\"}],[\"wire\",[-192,-320,0,0,8]],[\"wire\",[-152,-232,0,16,0]],[\"wire\",[-192,-312,0,0,40],{\"width\":\"32\"}],[\"wire\",[-208,-272,0,0,-8]],[\"wire\",[-208,-280,0,-16,0],{\"signal\":\"0'1,pc_offset[30:0]\"}],[\"wire\",[-400,-360,0,16,0],{\"signal\":\"pc_offset[31:0]\"}],[\"text\",[-286,-270,0],{\"text\":\"ignore MSB\"}],[\"wire\",[-344,-224,0,16,0],{\"signal\":\"asel\"}],[\"wire\",[-344,-208,0,16,0],{\"signal\":\"bsel\"}],[\"wire\",[-344,-240,0,16,0],{\"signal\":\"alufn[5:0]\"}],[\"wire\",[-208,-208,0,-16,0],{\"signal\":\"alufn[5:0]\"}],[\"wire\",[-496,-360,0,-16,0],{\"signal\":\"reset\"}],[\"wire\",[-496,-376,0,-16,0],{\"signal\":\"pcsel[2:0]\"}],[\"wire\",[-496,-408,0,-16,0],{\"signal\":\"id[15:0]\"}],[\"wire\",[-400,-376,0,16,0],{\"signal\":\"pc_inc[31:0]\"}],[\"wire\",[-424,-192,0,-16,0],{\"signal\":\"z\"}],[\"/gates/mux2\",[-168,-160,1]],[\"/gates/mux2\",[-160,-136,1]],[\"wire\",[-200,-152,0,-16,0],{\"signal\":\"wdsel[0]\"}],[\"wire\",[-192,-128,0,-16,0],{\"signal\":\"wdsel[1]\"}],[\"wire\",[-168,-184,0,0,8]],[\"wire\",[-168,-120,0,0,16],{\"width\":\"32\"}],[\"wire\",[-40,-376,0,0,272]],[\"wire\",[-168,-176,0,0,16]],[\"wire\",[-176,-144,0,0,8],{\"width\":\"32\"}],[\"wire\",[-184,-160,0,0,-16]],[\"wire\",[-184,-176,0,-16,0],{\"signal\":\"pc_inc[31:0]\"}],[\"wire\",[-344,-160,0,16,0],{\"signal\":\"pcsel[2:0]\"}],[\"wire\",[-344,-144,0,16,0],{\"signal\":\"ra2sel\"}],[\"wire\",[-344,-128,0,16,0],{\"signal\":\"wasel\"}],[\"wire\",[-344,-112,0,16,0],{\"signal\":\"wdsel[1:0]\"}],[\"wire\",[-344,-96,0,16,0],{\"signal\":\"werf\"}],[\"wire\",[-232,-360,0,-16,0],{\"signal\":\"werf\"}],[\"wire\",[-232,-376,0,-16,0],{\"signal\":\"wasel\"}],[\"wire\",[-232,-392,0,-16,0],{\"signal\":\"id[25:21]\"}],[\"wire\",[-248,-408,0,16,0],{\"signal\":\"ra2sel\"}],[\"wire\",[-424,-208,0,-32,0]],[\"/gates/and2\",[-504,-216,0]],[\"/gates/inverter\",[-536,-200,0]],[\"wire\",[-544,-200,0,8,0],{\"signal\":\"pc[31]\"}],[\"jumper\",[-368,-392,0]],[\"wire\",[-368,-392,0,-32,0],{\"signal\":\"pc[31:0]\"}],[\"wire\",[-192,-432,0,0,-16],{\"signal\":\"id[20:16]\"}],[\"wire\",[-128,-448,0,0,16],{\"signal\":\"id[15:11]\"}],[\"wire\",[-104,-272,0,0,-40],{\"width\":\"32\"}],[\"wire\",[-136,-256,0,0,24],{\"width\":\"32\"}],[\"jumper\",[-328,-192,0]],[\"jumper\",[-328,-176,0]],[\"wire\",[-344,-192,0,16,0]],[\"wire\",[-328,-176,0,-16,0]],[\"wire\",[-424,-240,0,-16,0],{\"signal\":\"id[31:26]\"}],[\"text\",[-555,-181,0],{\"text\":\"sbit keep/disable?\"}],[\"wire\",[-128,-320,0,24,0]],[\"wire\",[-104,-320,0,0,8]],[\"wire\",[-128,-272,0,24,0]],[\"wire\",[-88,-376,0,48,0]],[\"wire\",[-168,-104,0,128,0]]],\"test\":[[\"test\",\"\"]],\"icon\":[[\"terminal\",[-32,16,0],{\"name\":\"clk\"}],[\"terminal\",[-32,0,0],{\"name\":\"reset\"}],[\"terminal\",[-32,-16,0],{\"name\":\"irq\"}],[\"terminal\",[-32,-32,0],{\"name\":\"mrd[31:0]\"}],[\"terminal\",[-32,-48,0],{\"name\":\"id[31:0]\"}],[\"text\",[-23,-48,0],{\"text\":\"ID[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,-32,0],{\"text\":\"MRD[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,-16,0],{\"text\":\"IRQ\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,0,0],{\"text\":\"RESET\",\"font\":\"4pt sans-serif\"}],[\"line\",[-16,16,0,-8,4]],[\"line\",[-16,16,0,-8,-4]],[\"terminal\",[64,-48,4],{\"name\":\"ia[31:0]\"}],[\"text\",[55,-48,4],{\"text\":\"IA[31:0]\",\"font\":\"4pt sans-serif\"}],[\"terminal\",[64,-32,4],{\"name\":\"ma[31:0]\"}],[\"text\",[55,-32,4],{\"text\":\"MA[31:0]\",\"font\":\"4pt sans-serif\"}],[\"terminal\",[64,-16,4],{\"name\":\"moe\"}],[\"text\",[55,-16,4],{\"text\":\"MOE\",\"font\":\"4pt sans-serif\"}],[\"terminal\",[64,0,4],{\"name\":\"mwr\"}],[\"text\",[55,0,4],{\"text\":\"MWR\",\"font\":\"4pt sans-serif\"}],[\"terminal\",[64,16,4],{\"name\":\"mwd[31:0]\"}],[\"text\",[55,16,4],{\"text\":\"MWD[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[16,-59,0],{\"text\":\"BETA\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"line\",[-24,-64,0,0,88]],[\"line\",[-24,24,0,80,0]],[\"line\",[56,24,0,0,-88]],[\"line\",[56,-64,0,-80,0]],[\"property\",[16,-66,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}]]},\"/beta/ctl\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"test-readonly\":{\"label\":\"test-readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[-56,-8,0],{\"name\":\"reset\"}],[\"terminal\",[-56,8,0],{\"name\":\"irq\"}],[\"terminal\",[-56,24,0],{\"name\":\"z\"}],[\"terminal\",[-56,-24,0],{\"name\":\"op[5:0]\"}],[\"terminal\",[24,72,2],{\"name\":\"ra2sel\"}],[\"terminal\",[24,-8,2],{\"name\":\"asel\"}],[\"terminal\",[24,8,2],{\"name\":\"bsel\"}],[\"terminal\",[24,-24,2],{\"name\":\"alufn[5:0]\"}],[\"terminal\",[24,104,2],{\"name\":\"wdsel[1:0]\"}],[\"terminal\",[24,88,2],{\"name\":\"wasel\"}],[\"terminal\",[24,120,2],{\"name\":\"werf\"}],[\"terminal\",[24,56,2],{\"name\":\"pcsel[2:0]\"}],[\"terminal\",[24,24,2],{\"name\":\"moe\"}],[\"terminal\",[24,40,2],{\"name\":\"mwr\"}],[\"text\",[-47,-24,0],{\"text\":\"OP[5:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-47,-8,0],{\"text\":\"RESET\",\"font\":\"4pt sans-serif\"}],[\"text\",[-47,8,0],{\"text\":\"IRQ\",\"font\":\"4pt sans-serif\"}],[\"text\",[-47,24,0],{\"text\":\"Z\",\"font\":\"4pt sans-serif\"}],[\"text\",[15,72,0],{\"text\":\"RA2SEL\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,-8,0],{\"text\":\"ASEL\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,8,0],{\"text\":\"BSEL\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,-24,0],{\"text\":\"ALUFN[5:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,104,0],{\"text\":\"WDSEL[1:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,88,0],{\"text\":\"WASEL\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,120,0],{\"text\":\"WERF\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,56,0],{\"text\":\"PCSEL[2:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,24,0],{\"text\":\"MOE\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[15,40,0],{\"text\":\"MWR\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[-16,-35,0],{\"text\":\"CTL\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"line\",[-48,-40,0,0,168]],[\"line\",[-48,128,0,64,0]],[\"line\",[16,128,0,0,-168]],[\"line\",[16,-40,0,-64,0]],[\"property\",[-16,-42,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs OP[5:0] RESET IRQ Z\\n.group outputs ALUFN[5:0] ASEL BSEL MOE MWR PCSEL[2:0] RA2SEL WASEL WDSEL[1:0] WERF\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n000000 000 ------ -- -L LHH - HLLH //   1: op=0b000000 ???\\n000000 001 ------ -- -L LHH - HLLH //   2: op=0b000000 ???\\n000000 010 ------ -- -L HLL - HLLH //   3: op=0b000000 ???\\n000000 011 ------ -- -L HLL - HLLH //   4: op=0b000000 ???\\n000000 100 ------ -- -L --- - ---- //   5: op=0b000000 ???\\n000000 101 ------ -- -L --- - ---- //   6: op=0b000000 ???\\n000000 110 ------ -- -L --- - ---- //   7: op=0b000000 ???\\n000000 111 ------ -- -L --- - ---- //   8: op=0b000000 ???\\n000001 000 ------ -- -L LHH - HLLH //   9: op=0b000001 ???\\n000001 001 ------ -- -L LHH - HLLH //  10: op=0b000001 ???\\n000001 010 ------ -- -L HLL - HLLH //  11: op=0b000001 ???\\n000001 011 ------ -- -L HLL - HLLH //  12: op=0b000001 ???\\n000001 100 ------ -- -L --- - ---- //  13: op=0b000001 ???\\n000001 101 ------ -- -L --- - ---- //  14: op=0b000001 ???\\n000001 110 ------ -- -L --- - ---- //  15: op=0b000001 ???\\n000001 111 ------ -- -L --- - ---- //  16: op=0b000001 ???\\n000010 000 ------ -- -L LHH - HLLH //  17: op=0b000010 ???\\n000010 001 ------ -- -L LHH - HLLH //  18: op=0b000010 ???\\n000010 010 ------ -- -L HLL - HLLH //  19: op=0b000010 ???\\n000010 011 ------ -- -L HLL - HLLH //  20: op=0b000010 ???\\n000010 100 ------ -- -L --- - ---- //  21: op=0b000010 ???\\n000010 101 ------ -- -L --- - ---- //  22: op=0b000010 ???\\n000010 110 ------ -- -L --- - ---- //  23: op=0b000010 ???\\n000010 111 ------ -- -L --- - ---- //  24: op=0b000010 ???\\n000011 000 ------ -- -L LHH - HLLH //  25: op=0b000011 ???\\n000011 001 ------ -- -L LHH - HLLH //  26: op=0b000011 ???\\n000011 010 ------ -- -L HLL - HLLH //  27: op=0b000011 ???\\n000011 011 ------ -- -L HLL - HLLH //  28: op=0b000011 ???\\n000011 100 ------ -- -L --- - ---- //  29: op=0b000011 ???\\n000011 101 ------ -- -L --- - ---- //  30: op=0b000011 ???\\n000011 110 ------ -- -L --- - ---- //  31: op=0b000011 ???\\n000011 111 ------ -- -L --- - ---- //  32: op=0b000011 ???\\n000100 000 ------ -- -L LHH - HLLH //  33: op=0b000100 ???\\n000100 001 ------ -- -L LHH - HLLH //  34: op=0b000100 ???\\n000100 010 ------ -- -L HLL - HLLH //  35: op=0b000100 ???\\n000100 011 ------ -- -L HLL - HLLH //  36: op=0b000100 ???\\n000100 100 ------ -- -L --- - ---- //  37: op=0b000100 ???\\n000100 101 ------ -- -L --- - ---- //  38: op=0b000100 ???\\n000100 110 ------ -- -L --- - ---- //  39: op=0b000100 ???\\n000100 111 ------ -- -L --- - ---- //  40: op=0b000100 ???\\n000101 000 ------ -- -L LHH - HLLH //  41: op=0b000101 ???\\n000101 001 ------ -- -L LHH - HLLH //  42: op=0b000101 ???\\n000101 010 ------ -- -L HLL - HLLH //  43: op=0b000101 ???\\n000101 011 ------ -- -L HLL - HLLH //  44: op=0b000101 ???\\n000101 100 ------ -- -L --- - ---- //  45: op=0b000101 ???\\n000101 101 ------ -- -L --- - ---- //  46: op=0b000101 ???\\n000101 110 ------ -- -L --- - ---- //  47: op=0b000101 ???\\n000101 111 ------ -- -L --- - ---- //  48: op=0b000101 ???\\n000110 000 ------ -- -L LHH - HLLH //  49: op=0b000110 ???\\n000110 001 ------ -- -L LHH - HLLH //  50: op=0b000110 ???\\n000110 010 ------ -- -L HLL - HLLH //  51: op=0b000110 ???\\n000110 011 ------ -- -L HLL - HLLH //  52: op=0b000110 ???\\n000110 100 ------ -- -L --- - ---- //  53: op=0b000110 ???\\n000110 101 ------ -- -L --- - ---- //  54: op=0b000110 ???\\n000110 110 ------ -- -L --- - ---- //  55: op=0b000110 ???\\n000110 111 ------ -- -L --- - ---- //  56: op=0b000110 ???\\n000111 000 ------ -- -L LHH - HLLH //  57: op=0b000111 ???\\n000111 001 ------ -- -L LHH - HLLH //  58: op=0b000111 ???\\n000111 010 ------ -- -L HLL - HLLH //  59: op=0b000111 ???\\n000111 011 ------ -- -L HLL - HLLH //  60: op=0b000111 ???\\n000111 100 ------ -- -L --- - ---- //  61: op=0b000111 ???\\n000111 101 ------ -- -L --- - ---- //  62: op=0b000111 ???\\n000111 110 ------ -- -L --- - ---- //  63: op=0b000111 ???\\n000111 111 ------ -- -L --- - ---- //  64: op=0b000111 ???\\n001000 000 ------ -- -L LHH - HLLH //  65: op=0b001000 ???\\n001000 001 ------ -- -L LHH - HLLH //  66: op=0b001000 ???\\n001000 010 ------ -- -L HLL - HLLH //  67: op=0b001000 ???\\n001000 011 ------ -- -L HLL - HLLH //  68: op=0b001000 ???\\n001000 100 ------ -- -L --- - ---- //  69: op=0b001000 ???\\n001000 101 ------ -- -L --- - ---- //  70: op=0b001000 ???\\n001000 110 ------ -- -L --- - ---- //  71: op=0b001000 ???\\n001000 111 ------ -- -L --- - ---- //  72: op=0b001000 ???\\n001001 000 ------ -- -L LHH - HLLH //  73: op=0b001001 ???\\n001001 001 ------ -- -L LHH - HLLH //  74: op=0b001001 ???\\n001001 010 ------ -- -L HLL - HLLH //  75: op=0b001001 ???\\n001001 011 ------ -- -L HLL - HLLH //  76: op=0b001001 ???\\n001001 100 ------ -- -L --- - ---- //  77: op=0b001001 ???\\n001001 101 ------ -- -L --- - ---- //  78: op=0b001001 ???\\n001001 110 ------ -- -L --- - ---- //  79: op=0b001001 ???\\n001001 111 ------ -- -L --- - ---- //  80: op=0b001001 ???\\n001010 000 ------ -- -L LHH - HLLH //  81: op=0b001010 ???\\n001010 001 ------ -- -L LHH - HLLH //  82: op=0b001010 ???\\n001010 010 ------ -- -L HLL - HLLH //  83: op=0b001010 ???\\n001010 011 ------ -- -L HLL - HLLH //  84: op=0b001010 ???\\n001010 100 ------ -- -L --- - ---- //  85: op=0b001010 ???\\n001010 101 ------ -- -L --- - ---- //  86: op=0b001010 ???\\n001010 110 ------ -- -L --- - ---- //  87: op=0b001010 ???\\n001010 111 ------ -- -L --- - ---- //  88: op=0b001010 ???\\n001011 000 ------ -- -L LHH - HLLH //  89: op=0b001011 ???\\n001011 001 ------ -- -L LHH - HLLH //  90: op=0b001011 ???\\n001011 010 ------ -- -L HLL - HLLH //  91: op=0b001011 ???\\n001011 011 ------ -- -L HLL - HLLH //  92: op=0b001011 ???\\n001011 100 ------ -- -L --- - ---- //  93: op=0b001011 ???\\n001011 101 ------ -- -L --- - ---- //  94: op=0b001011 ???\\n001011 110 ------ -- -L --- - ---- //  95: op=0b001011 ???\\n001011 111 ------ -- -L --- - ---- //  96: op=0b001011 ???\\n001100 000 ------ -- -L LHH - HLLH //  97: op=0b001100 ???\\n001100 001 ------ -- -L LHH - HLLH //  98: op=0b001100 ???\\n001100 010 ------ -- -L HLL - HLLH //  99: op=0b001100 ???\\n001100 011 ------ -- -L HLL - HLLH // 100: op=0b001100 ???\\n001100 100 ------ -- -L --- - ---- // 101: op=0b001100 ???\\n001100 101 ------ -- -L --- - ---- // 102: op=0b001100 ???\\n001100 110 ------ -- -L --- - ---- // 103: op=0b001100 ???\\n001100 111 ------ -- -L --- - ---- // 104: op=0b001100 ???\\n001101 000 ------ -- -L LHH - HLLH // 105: op=0b001101 ???\\n001101 001 ------ -- -L LHH - HLLH // 106: op=0b001101 ???\\n001101 010 ------ -- -L HLL - HLLH // 107: op=0b001101 ???\\n001101 011 ------ -- -L HLL - HLLH // 108: op=0b001101 ???\\n001101 100 ------ -- -L --- - ---- // 109: op=0b001101 ???\\n001101 101 ------ -- -L --- - ---- // 110: op=0b001101 ???\\n001101 110 ------ -- -L --- - ---- // 111: op=0b001101 ???\\n001101 111 ------ -- -L --- - ---- // 112: op=0b001101 ???\\n001110 000 ------ -- -L LHH - HLLH // 113: op=0b001110 ???\\n001110 001 ------ -- -L LHH - HLLH // 114: op=0b001110 ???\\n001110 010 ------ -- -L HLL - HLLH // 115: op=0b001110 ???\\n001110 011 ------ -- -L HLL - HLLH // 116: op=0b001110 ???\\n001110 100 ------ -- -L --- - ---- // 117: op=0b001110 ???\\n001110 101 ------ -- -L --- - ---- // 118: op=0b001110 ???\\n001110 110 ------ -- -L --- - ---- // 119: op=0b001110 ???\\n001110 111 ------ -- -L --- - ---- // 120: op=0b001110 ???\\n001111 000 ------ -- -L LHH - HLLH // 121: op=0b001111 ???\\n001111 001 ------ -- -L LHH - HLLH // 122: op=0b001111 ???\\n001111 010 ------ -- -L HLL - HLLH // 123: op=0b001111 ???\\n001111 011 ------ -- -L HLL - HLLH // 124: op=0b001111 ???\\n001111 100 ------ -- -L --- - ---- // 125: op=0b001111 ???\\n001111 101 ------ -- -L --- - ---- // 126: op=0b001111 ???\\n001111 110 ------ -- -L --- - ---- // 127: op=0b001111 ???\\n001111 111 ------ -- -L --- - ---- // 128: op=0b001111 ???\\n010000 000 ------ -- -L LHH - HLLH // 129: op=0b010000 ???\\n010000 001 ------ -- -L LHH - HLLH // 130: op=0b010000 ???\\n010000 010 ------ -- -L HLL - HLLH // 131: op=0b010000 ???\\n010000 011 ------ -- -L HLL - HLLH // 132: op=0b010000 ???\\n010000 100 ------ -- -L --- - ---- // 133: op=0b010000 ???\\n010000 101 ------ -- -L --- - ---- // 134: op=0b010000 ???\\n010000 110 ------ -- -L --- - ---- // 135: op=0b010000 ???\\n010000 111 ------ -- -L --- - ---- // 136: op=0b010000 ???\\n010001 000 ------ -- -L LHH - HLLH // 137: op=0b010001 ???\\n010001 001 ------ -- -L LHH - HLLH // 138: op=0b010001 ???\\n010001 010 ------ -- -L HLL - HLLH // 139: op=0b010001 ???\\n010001 011 ------ -- -L HLL - HLLH // 140: op=0b010001 ???\\n010001 100 ------ -- -L --- - ---- // 141: op=0b010001 ???\\n010001 101 ------ -- -L --- - ---- // 142: op=0b010001 ???\\n010001 110 ------ -- -L --- - ---- // 143: op=0b010001 ???\\n010001 111 ------ -- -L --- - ---- // 144: op=0b010001 ???\\n010010 000 ------ -- -L LHH - HLLH // 145: op=0b010010 ???\\n010010 001 ------ -- -L LHH - HLLH // 146: op=0b010010 ???\\n010010 010 ------ -- -L HLL - HLLH // 147: op=0b010010 ???\\n010010 011 ------ -- -L HLL - HLLH // 148: op=0b010010 ???\\n010010 100 ------ -- -L --- - ---- // 149: op=0b010010 ???\\n010010 101 ------ -- -L --- - ---- // 150: op=0b010010 ???\\n010010 110 ------ -- -L --- - ---- // 151: op=0b010010 ???\\n010010 111 ------ -- -L --- - ---- // 152: op=0b010010 ???\\n010011 000 ------ -- -L LHH - HLLH // 153: op=0b010011 ???\\n010011 001 ------ -- -L LHH - HLLH // 154: op=0b010011 ???\\n010011 010 ------ -- -L HLL - HLLH // 155: op=0b010011 ???\\n010011 011 ------ -- -L HLL - HLLH // 156: op=0b010011 ???\\n010011 100 ------ -- -L --- - ---- // 157: op=0b010011 ???\\n010011 101 ------ -- -L --- - ---- // 158: op=0b010011 ???\\n010011 110 ------ -- -L --- - ---- // 159: op=0b010011 ???\\n010011 111 ------ -- -L --- - ---- // 160: op=0b010011 ???\\n010100 000 ------ -- -L LHH - HLLH // 161: op=0b010100 ???\\n010100 001 ------ -- -L LHH - HLLH // 162: op=0b010100 ???\\n010100 010 ------ -- -L HLL - HLLH // 163: op=0b010100 ???\\n010100 011 ------ -- -L HLL - HLLH // 164: op=0b010100 ???\\n010100 100 ------ -- -L --- - ---- // 165: op=0b010100 ???\\n010100 101 ------ -- -L --- - ---- // 166: op=0b010100 ???\\n010100 110 ------ -- -L --- - ---- // 167: op=0b010100 ???\\n010100 111 ------ -- -L --- - ---- // 168: op=0b010100 ???\\n010101 000 ------ -- -L LHH - HLLH // 169: op=0b010101 ???\\n010101 001 ------ -- -L LHH - HLLH // 170: op=0b010101 ???\\n010101 010 ------ -- -L HLL - HLLH // 171: op=0b010101 ???\\n010101 011 ------ -- -L HLL - HLLH // 172: op=0b010101 ???\\n010101 100 ------ -- -L --- - ---- // 173: op=0b010101 ???\\n010101 101 ------ -- -L --- - ---- // 174: op=0b010101 ???\\n010101 110 ------ -- -L --- - ---- // 175: op=0b010101 ???\\n010101 111 ------ -- -L --- - ---- // 176: op=0b010101 ???\\n010110 000 ------ -- -L LHH - HLLH // 177: op=0b010110 ???\\n010110 001 ------ -- -L LHH - HLLH // 178: op=0b010110 ???\\n010110 010 ------ -- -L HLL - HLLH // 179: op=0b010110 ???\\n010110 011 ------ -- -L HLL - HLLH // 180: op=0b010110 ???\\n010110 100 ------ -- -L --- - ---- // 181: op=0b010110 ???\\n010110 101 ------ -- -L --- - ---- // 182: op=0b010110 ???\\n010110 110 ------ -- -L --- - ---- // 183: op=0b010110 ???\\n010110 111 ------ -- -L --- - ---- // 184: op=0b010110 ???\\n010111 000 ------ -- -L LHH - HLLH // 185: op=0b010111 ???\\n010111 001 ------ -- -L LHH - HLLH // 186: op=0b010111 ???\\n010111 010 ------ -- -L HLL - HLLH // 187: op=0b010111 ???\\n010111 011 ------ -- -L HLL - HLLH // 188: op=0b010111 ???\\n010111 100 ------ -- -L --- - ---- // 189: op=0b010111 ???\\n010111 101 ------ -- -L --- - ---- // 190: op=0b010111 ???\\n010111 110 ------ -- -L --- - ---- // 191: op=0b010111 ???\\n010111 111 ------ -- -L --- - ---- // 192: op=0b010111 ???\\n011000 000 LHLLLL LH HL LLL - LHLH // 193: op=0b011000 LD\\n011000 001 LHLLLL LH HL LLL - LHLH // 194: op=0b011000 LD\\n011000 010 ------ -- -L HLL - HLLH // 195: op=0b011000 LD\\n011000 011 ------ -- -L HLL - HLLH // 196: op=0b011000 LD\\n011000 100 ------ -- -L --- - ---- // 197: op=0b011000 LD\\n011000 101 ------ -- -L --- - ---- // 198: op=0b011000 LD\\n011000 110 ------ -- -L --- - ---- // 199: op=0b011000 LD\\n011000 111 ------ -- -L --- - ---- // 200: op=0b011000 LD\\n011001 000 LHLLLL LH LH LLL H ---L // 201: op=0b011001 ST\\n011001 001 LHLLLL LH LH LLL H ---L // 202: op=0b011001 ST\\n011001 010 ------ -- -L HLL - HLLH // 203: op=0b011001 ST\\n011001 011 ------ -- -L HLL - HLLH // 204: op=0b011001 ST\\n011001 100 ------ -- -L --- - ---- // 205: op=0b011001 ST\\n011001 101 ------ -- -L --- - ---- // 206: op=0b011001 ST\\n011001 110 ------ -- -L --- - ---- // 207: op=0b011001 ST\\n011001 111 ------ -- -L --- - ---- // 208: op=0b011001 ST\\n011010 000 ------ -- -L LHH - HLLH // 209: op=0b011010 ???\\n011010 001 ------ -- -L LHH - HLLH // 210: op=0b011010 ???\\n011010 010 ------ -- -L HLL - HLLH // 211: op=0b011010 ???\\n011010 011 ------ -- -L HLL - HLLH // 212: op=0b011010 ???\\n011010 100 ------ -- -L --- - ---- // 213: op=0b011010 ???\\n011010 101 ------ -- -L --- - ---- // 214: op=0b011010 ???\\n011010 110 ------ -- -L --- - ---- // 215: op=0b011010 ???\\n011010 111 ------ -- -L --- - ---- // 216: op=0b011010 ???\\n011011 000 ------ -- -L LHL - LLLH // 217: op=0b011011 JMP\\n011011 001 ------ -- -L LHL - LLLH // 218: op=0b011011 JMP\\n011011 010 ------ -- -L HLL - HLLH // 219: op=0b011011 JMP\\n011011 011 ------ -- -L HLL - HLLH // 220: op=0b011011 JMP\\n011011 100 ------ -- -L --- - ---- // 221: op=0b011011 JMP\\n011011 101 ------ -- -L --- - ---- // 222: op=0b011011 JMP\\n011011 110 ------ -- -L --- - ---- // 223: op=0b011011 JMP\\n011011 111 ------ -- -L --- - ---- // 224: op=0b011011 JMP\\n011100 000 ------ -- -L LLL - LLLH // 225: op=0b011100 BEQ\\n011100 001 ------ -- -L LLH - LLLH // 226: op=0b011100 BEQ\\n011100 010 ------ -- -L HLL - HLLH // 227: op=0b011100 BEQ\\n011100 011 ------ -- -L HLL - HLLH // 228: op=0b011100 BEQ\\n011100 100 ------ -- -L --- - ---- // 229: op=0b011100 BEQ\\n011100 101 ------ -- -L --- - ---- // 230: op=0b011100 BEQ\\n011100 110 ------ -- -L --- - ---- // 231: op=0b011100 BEQ\\n011100 111 ------ -- -L --- - ---- // 232: op=0b011100 BEQ\\n011101 000 ------ -- -L LLH - LLLH // 233: op=0b011101 BNE\\n011101 001 ------ -- -L LLL - LLLH // 234: op=0b011101 BNE\\n011101 010 ------ -- -L HLL - HLLH // 235: op=0b011101 BNE\\n011101 011 ------ -- -L HLL - HLLH // 236: op=0b011101 BNE\\n011101 100 ------ -- -L --- - ---- // 237: op=0b011101 BNE\\n011101 101 ------ -- -L --- - ---- // 238: op=0b011101 BNE\\n011101 110 ------ -- -L --- - ---- // 239: op=0b011101 BNE\\n011101 111 ------ -- -L --- - ---- // 240: op=0b011101 BNE\\n011110 000 ------ -- -L LHH - HLLH // 241: op=0b011110 ???\\n011110 001 ------ -- -L LHH - HLLH // 242: op=0b011110 ???\\n011110 010 ------ -- -L HLL - HLLH // 243: op=0b011110 ???\\n011110 011 ------ -- -L HLL - HLLH // 244: op=0b011110 ???\\n011110 100 ------ -- -L --- - ---- // 245: op=0b011110 ???\\n011110 101 ------ -- -L --- - ---- // 246: op=0b011110 ???\\n011110 110 ------ -- -L --- - ---- // 247: op=0b011110 ???\\n011110 111 ------ -- -L --- - ---- // 248: op=0b011110 ???\\n011111 000 HLHLHL H- HL LLL - LHLH // 249: op=0b011111 LDR\\n011111 001 HLHLHL H- HL LLL - LHLH // 250: op=0b011111 LDR\\n011111 010 ------ -- -L HLL - HLLH // 251: op=0b011111 LDR\\n011111 011 ------ -- -L HLL - HLLH // 252: op=0b011111 LDR\\n011111 100 ------ -- -L --- - ---- // 253: op=0b011111 LDR\\n011111 101 ------ -- -L --- - ---- // 254: op=0b011111 LDR\\n011111 110 ------ -- -L --- - ---- // 255: op=0b011111 LDR\\n011111 111 ------ -- -L --- - ---- // 256: op=0b011111 LDR\\n100000 000 LHLLLL LL -L LLL L LLHH // 257: op=0b100000 ADD\\n100000 001 LHLLLL LL -L LLL L LLHH // 258: op=0b100000 ADD\\n100000 010 ------ -- -L HLL - HLLH // 259: op=0b100000 ADD\\n100000 011 ------ -- -L HLL - HLLH // 260: op=0b100000 ADD\\n100000 100 ------ -- -L --- - ---- // 261: op=0b100000 ADD\\n100000 101 ------ -- -L --- - ---- // 262: op=0b100000 ADD\\n100000 110 ------ -- -L --- - ---- // 263: op=0b100000 ADD\\n100000 111 ------ -- -L --- - ---- // 264: op=0b100000 ADD\\n100001 000 LHLLLH LL -L LLL L LLHH // 265: op=0b100001 SUB\\n100001 001 LHLLLH LL -L LLL L LLHH // 266: op=0b100001 SUB\\n100001 010 ------ -- -L HLL - HLLH // 267: op=0b100001 SUB\\n100001 011 ------ -- -L HLL - HLLH // 268: op=0b100001 SUB\\n100001 100 ------ -- -L --- - ---- // 269: op=0b100001 SUB\\n100001 101 ------ -- -L --- - ---- // 270: op=0b100001 SUB\\n100001 110 ------ -- -L --- - ---- // 271: op=0b100001 SUB\\n100001 111 ------ -- -L --- - ---- // 272: op=0b100001 SUB\\n100010 000 ------ -- -L LHH - HLLH // 273: op=0b100010 MUL\\n100010 001 ------ -- -L LHH - HLLH // 274: op=0b100010 MUL\\n100010 010 ------ -- -L HLL - HLLH // 275: op=0b100010 MUL\\n100010 011 ------ -- -L HLL - HLLH // 276: op=0b100010 MUL\\n100010 100 ------ -- -L --- - ---- // 277: op=0b100010 MUL\\n100010 101 ------ -- -L --- - ---- // 278: op=0b100010 MUL\\n100010 110 ------ -- -L --- - ---- // 279: op=0b100010 MUL\\n100010 111 ------ -- -L --- - ---- // 280: op=0b100010 MUL\\n100011 000 ------ -- -L LHH - HLLH // 281: op=0b100011 DIV\\n100011 001 ------ -- -L LHH - HLLH // 282: op=0b100011 DIV\\n100011 010 ------ -- -L HLL - HLLH // 283: op=0b100011 DIV\\n100011 011 ------ -- -L HLL - HLLH // 284: op=0b100011 DIV\\n100011 100 ------ -- -L --- - ---- // 285: op=0b100011 DIV\\n100011 101 ------ -- -L --- - ---- // 286: op=0b100011 DIV\\n100011 110 ------ -- -L --- - ---- // 287: op=0b100011 DIV\\n100011 111 ------ -- -L --- - ---- // 288: op=0b100011 DIV\\n100100 000 LLLLHH LL -L LLL L LLHH // 289: op=0b100100 CMPEQ\\n100100 001 LLLLHH LL -L LLL L LLHH // 290: op=0b100100 CMPEQ\\n100100 010 ------ -- -L HLL - HLLH // 291: op=0b100100 CMPEQ\\n100100 011 ------ -- -L HLL - HLLH // 292: op=0b100100 CMPEQ\\n100100 100 ------ -- -L --- - ---- // 293: op=0b100100 CMPEQ\\n100100 101 ------ -- -L --- - ---- // 294: op=0b100100 CMPEQ\\n100100 110 ------ -- -L --- - ---- // 295: op=0b100100 CMPEQ\\n100100 111 ------ -- -L --- - ---- // 296: op=0b100100 CMPEQ\\n100101 000 LLLHLH LL -L LLL L LLHH // 297: op=0b100101 CMPLT\\n100101 001 LLLHLH LL -L LLL L LLHH // 298: op=0b100101 CMPLT\\n100101 010 ------ -- -L HLL - HLLH // 299: op=0b100101 CMPLT\\n100101 011 ------ -- -L HLL - HLLH // 300: op=0b100101 CMPLT\\n100101 100 ------ -- -L --- - ---- // 301: op=0b100101 CMPLT\\n100101 101 ------ -- -L --- - ---- // 302: op=0b100101 CMPLT\\n100101 110 ------ -- -L --- - ---- // 303: op=0b100101 CMPLT\\n100101 111 ------ -- -L --- - ---- // 304: op=0b100101 CMPLT\\n100110 000 LLLHHH LL -L LLL L LLHH // 305: op=0b100110 CMPLE\\n100110 001 LLLHHH LL -L LLL L LLHH // 306: op=0b100110 CMPLE\\n100110 010 ------ -- -L HLL - HLLH // 307: op=0b100110 CMPLE\\n100110 011 ------ -- -L HLL - HLLH // 308: op=0b100110 CMPLE\\n100110 100 ------ -- -L --- - ---- // 309: op=0b100110 CMPLE\\n100110 101 ------ -- -L --- - ---- // 310: op=0b100110 CMPLE\\n100110 110 ------ -- -L --- - ---- // 311: op=0b100110 CMPLE\\n100110 111 ------ -- -L --- - ---- // 312: op=0b100110 CMPLE\\n100111 000 ------ -- -L LHH - HLLH // 313: op=0b100111 ???\\n100111 001 ------ -- -L LHH - HLLH // 314: op=0b100111 ???\\n100111 010 ------ -- -L HLL - HLLH // 315: op=0b100111 ???\\n100111 011 ------ -- -L HLL - HLLH // 316: op=0b100111 ???\\n100111 100 ------ -- -L --- - ---- // 317: op=0b100111 ???\\n100111 101 ------ -- -L --- - ---- // 318: op=0b100111 ???\\n100111 110 ------ -- -L --- - ---- // 319: op=0b100111 ???\\n100111 111 ------ -- -L --- - ---- // 320: op=0b100111 ???\\n101000 000 HLHLLL LL -L LLL L LLHH // 321: op=0b101000 AND\\n101000 001 HLHLLL LL -L LLL L LLHH // 322: op=0b101000 AND\\n101000 010 ------ -- -L HLL - HLLH // 323: op=0b101000 AND\\n101000 011 ------ -- -L HLL - HLLH // 324: op=0b101000 AND\\n101000 100 ------ -- -L --- - ---- // 325: op=0b101000 AND\\n101000 101 ------ -- -L --- - ---- // 326: op=0b101000 AND\\n101000 110 ------ -- -L --- - ---- // 327: op=0b101000 AND\\n101000 111 ------ -- -L --- - ---- // 328: op=0b101000 AND\\n101001 000 HLHHHL LL -L LLL L LLHH // 329: op=0b101001 OR\\n101001 001 HLHHHL LL -L LLL L LLHH // 330: op=0b101001 OR\\n101001 010 ------ -- -L HLL - HLLH // 331: op=0b101001 OR\\n101001 011 ------ -- -L HLL - HLLH // 332: op=0b101001 OR\\n101001 100 ------ -- -L --- - ---- // 333: op=0b101001 OR\\n101001 101 ------ -- -L --- - ---- // 334: op=0b101001 OR\\n101001 110 ------ -- -L --- - ---- // 335: op=0b101001 OR\\n101001 111 ------ -- -L --- - ---- // 336: op=0b101001 OR\\n101010 000 HLLHHL LL -L LLL L LLHH // 337: op=0b101010 XOR\\n101010 001 HLLHHL LL -L LLL L LLHH // 338: op=0b101010 XOR\\n101010 010 ------ -- -L HLL - HLLH // 339: op=0b101010 XOR\\n101010 011 ------ -- -L HLL - HLLH // 340: op=0b101010 XOR\\n101010 100 ------ -- -L --- - ---- // 341: op=0b101010 XOR\\n101010 101 ------ -- -L --- - ---- // 342: op=0b101010 XOR\\n101010 110 ------ -- -L --- - ---- // 343: op=0b101010 XOR\\n101010 111 ------ -- -L --- - ---- // 344: op=0b101010 XOR\\n101011 000 HLHLLH LL -L LLL L LLHH // 345: op=0b101011 XNOR\\n101011 001 HLHLLH LL -L LLL L LLHH // 346: op=0b101011 XNOR\\n101011 010 ------ -- -L HLL - HLLH // 347: op=0b101011 XNOR\\n101011 011 ------ -- -L HLL - HLLH // 348: op=0b101011 XNOR\\n101011 100 ------ -- -L --- - ---- // 349: op=0b101011 XNOR\\n101011 101 ------ -- -L --- - ---- // 350: op=0b101011 XNOR\\n101011 110 ------ -- -L --- - ---- // 351: op=0b101011 XNOR\\n101011 111 ------ -- -L --- - ---- // 352: op=0b101011 XNOR\\n101100 000 HHLLLL LL -L LLL L LLHH // 353: op=0b101100 SHL\\n101100 001 HHLLLL LL -L LLL L LLHH // 354: op=0b101100 SHL\\n101100 010 ------ -- -L HLL - HLLH // 355: op=0b101100 SHL\\n101100 011 ------ -- -L HLL - HLLH // 356: op=0b101100 SHL\\n101100 100 ------ -- -L --- - ---- // 357: op=0b101100 SHL\\n101100 101 ------ -- -L --- - ---- // 358: op=0b101100 SHL\\n101100 110 ------ -- -L --- - ---- // 359: op=0b101100 SHL\\n101100 111 ------ -- -L --- - ---- // 360: op=0b101100 SHL\\n101101 000 HHLLLH LL -L LLL L LLHH // 361: op=0b101101 SHR\\n101101 001 HHLLLH LL -L LLL L LLHH // 362: op=0b101101 SHR\\n101101 010 ------ -- -L HLL - HLLH // 363: op=0b101101 SHR\\n101101 011 ------ -- -L HLL - HLLH // 364: op=0b101101 SHR\\n101101 100 ------ -- -L --- - ---- // 365: op=0b101101 SHR\\n101101 101 ------ -- -L --- - ---- // 366: op=0b101101 SHR\\n101101 110 ------ -- -L --- - ---- // 367: op=0b101101 SHR\\n101101 111 ------ -- -L --- - ---- // 368: op=0b101101 SHR\\n101110 000 HHLLHH LL -L LLL L LLHH // 369: op=0b101110 SRA\\n101110 001 HHLLHH LL -L LLL L LLHH // 370: op=0b101110 SRA\\n101110 010 ------ -- -L HLL - HLLH // 371: op=0b101110 SRA\\n101110 011 ------ -- -L HLL - HLLH // 372: op=0b101110 SRA\\n101110 100 ------ -- -L --- - ---- // 373: op=0b101110 SRA\\n101110 101 ------ -- -L --- - ---- // 374: op=0b101110 SRA\\n101110 110 ------ -- -L --- - ---- // 375: op=0b101110 SRA\\n101110 111 ------ -- -L --- - ---- // 376: op=0b101110 SRA\\n101111 000 ------ -- -L LHH - HLLH // 377: op=0b101111 ???\\n101111 001 ------ -- -L LHH - HLLH // 378: op=0b101111 ???\\n101111 010 ------ -- -L HLL - HLLH // 379: op=0b101111 ???\\n101111 011 ------ -- -L HLL - HLLH // 380: op=0b101111 ???\\n101111 100 ------ -- -L --- - ---- // 381: op=0b101111 ???\\n101111 101 ------ -- -L --- - ---- // 382: op=0b101111 ???\\n101111 110 ------ -- -L --- - ---- // 383: op=0b101111 ???\\n101111 111 ------ -- -L --- - ---- // 384: op=0b101111 ???\\n110000 000 LHLLLL LH -L LLL - LLHH // 385: op=0b110000 ADDC\\n110000 001 LHLLLL LH -L LLL - LLHH // 386: op=0b110000 ADDC\\n110000 010 ------ -- -L HLL - HLLH // 387: op=0b110000 ADDC\\n110000 011 ------ -- -L HLL - HLLH // 388: op=0b110000 ADDC\\n110000 100 ------ -- -L --- - ---- // 389: op=0b110000 ADDC\\n110000 101 ------ -- -L --- - ---- // 390: op=0b110000 ADDC\\n110000 110 ------ -- -L --- - ---- // 391: op=0b110000 ADDC\\n110000 111 ------ -- -L --- - ---- // 392: op=0b110000 ADDC\\n110001 000 LHLLLH LH -L LLL - LLHH // 393: op=0b110001 SUBC\\n110001 001 LHLLLH LH -L LLL - LLHH // 394: op=0b110001 SUBC\\n110001 010 ------ -- -L HLL - HLLH // 395: op=0b110001 SUBC\\n110001 011 ------ -- -L HLL - HLLH // 396: op=0b110001 SUBC\\n110001 100 ------ -- -L --- - ---- // 397: op=0b110001 SUBC\\n110001 101 ------ -- -L --- - ---- // 398: op=0b110001 SUBC\\n110001 110 ------ -- -L --- - ---- // 399: op=0b110001 SUBC\\n110001 111 ------ -- -L --- - ---- // 400: op=0b110001 SUBC\\n110010 000 ------ -- -L LHH - HLLH // 401: op=0b110010 MULC\\n110010 001 ------ -- -L LHH - HLLH // 402: op=0b110010 MULC\\n110010 010 ------ -- -L HLL - HLLH // 403: op=0b110010 MULC\\n110010 011 ------ -- -L HLL - HLLH // 404: op=0b110010 MULC\\n110010 100 ------ -- -L --- - ---- // 405: op=0b110010 MULC\\n110010 101 ------ -- -L --- - ---- // 406: op=0b110010 MULC\\n110010 110 ------ -- -L --- - ---- // 407: op=0b110010 MULC\\n110010 111 ------ -- -L --- - ---- // 408: op=0b110010 MULC\\n110011 000 ------ -- -L LHH - HLLH // 409: op=0b110011 DIVC\\n110011 001 ------ -- -L LHH - HLLH // 410: op=0b110011 DIVC\\n110011 010 ------ -- -L HLL - HLLH // 411: op=0b110011 DIVC\\n110011 011 ------ -- -L HLL - HLLH // 412: op=0b110011 DIVC\\n110011 100 ------ -- -L --- - ---- // 413: op=0b110011 DIVC\\n110011 101 ------ -- -L --- - ---- // 414: op=0b110011 DIVC\\n110011 110 ------ -- -L --- - ---- // 415: op=0b110011 DIVC\\n110011 111 ------ -- -L --- - ---- // 416: op=0b110011 DIVC\\n110100 000 LLLLHH LH -L LLL - LLHH // 417: op=0b110100 CMPEQC\\n110100 001 LLLLHH LH -L LLL - LLHH // 418: op=0b110100 CMPEQC\\n110100 010 ------ -- -L HLL - HLLH // 419: op=0b110100 CMPEQC\\n110100 011 ------ -- -L HLL - HLLH // 420: op=0b110100 CMPEQC\\n110100 100 ------ -- -L --- - ---- // 421: op=0b110100 CMPEQC\\n110100 101 ------ -- -L --- - ---- // 422: op=0b110100 CMPEQC\\n110100 110 ------ -- -L --- - ---- // 423: op=0b110100 CMPEQC\\n110100 111 ------ -- -L --- - ---- // 424: op=0b110100 CMPEQC\\n110101 000 LLLHLH LH -L LLL - LLHH // 425: op=0b110101 CMPLTC\\n110101 001 LLLHLH LH -L LLL - LLHH // 426: op=0b110101 CMPLTC\\n110101 010 ------ -- -L HLL - HLLH // 427: op=0b110101 CMPLTC\\n110101 011 ------ -- -L HLL - HLLH // 428: op=0b110101 CMPLTC\\n110101 100 ------ -- -L --- - ---- // 429: op=0b110101 CMPLTC\\n110101 101 ------ -- -L --- - ---- // 430: op=0b110101 CMPLTC\\n110101 110 ------ -- -L --- - ---- // 431: op=0b110101 CMPLTC\\n110101 111 ------ -- -L --- - ---- // 432: op=0b110101 CMPLTC\\n110110 000 LLLHHH LH -L LLL - LLHH // 433: op=0b110110 CMPLEC\\n110110 001 LLLHHH LH -L LLL - LLHH // 434: op=0b110110 CMPLEC\\n110110 010 ------ -- -L HLL - HLLH // 435: op=0b110110 CMPLEC\\n110110 011 ------ -- -L HLL - HLLH // 436: op=0b110110 CMPLEC\\n110110 100 ------ -- -L --- - ---- // 437: op=0b110110 CMPLEC\\n110110 101 ------ -- -L --- - ---- // 438: op=0b110110 CMPLEC\\n110110 110 ------ -- -L --- - ---- // 439: op=0b110110 CMPLEC\\n110110 111 ------ -- -L --- - ---- // 440: op=0b110110 CMPLEC\\n110111 000 ------ -- -L LHH - HLLH // 441: op=0b110111 ???\\n110111 001 ------ -- -L LHH - HLLH // 442: op=0b110111 ???\\n110111 010 ------ -- -L HLL - HLLH // 443: op=0b110111 ???\\n110111 011 ------ -- -L HLL - HLLH // 444: op=0b110111 ???\\n110111 100 ------ -- -L --- - ---- // 445: op=0b110111 ???\\n110111 101 ------ -- -L --- - ---- // 446: op=0b110111 ???\\n110111 110 ------ -- -L --- - ---- // 447: op=0b110111 ???\\n110111 111 ------ -- -L --- - ---- // 448: op=0b110111 ???\\n111000 000 HLHLLL LH -L LLL - LLHH // 449: op=0b111000 ANDC\\n111000 001 HLHLLL LH -L LLL - LLHH // 450: op=0b111000 ANDC\\n111000 010 ------ -- -L HLL - HLLH // 451: op=0b111000 ANDC\\n111000 011 ------ -- -L HLL - HLLH // 452: op=0b111000 ANDC\\n111000 100 ------ -- -L --- - ---- // 453: op=0b111000 ANDC\\n111000 101 ------ -- -L --- - ---- // 454: op=0b111000 ANDC\\n111000 110 ------ -- -L --- - ---- // 455: op=0b111000 ANDC\\n111000 111 ------ -- -L --- - ---- // 456: op=0b111000 ANDC\\n111001 000 HLHHHL LH -L LLL - LLHH // 457: op=0b111001 ORC\\n111001 001 HLHHHL LH -L LLL - LLHH // 458: op=0b111001 ORC\\n111001 010 ------ -- -L HLL - HLLH // 459: op=0b111001 ORC\\n111001 011 ------ -- -L HLL - HLLH // 460: op=0b111001 ORC\\n111001 100 ------ -- -L --- - ---- // 461: op=0b111001 ORC\\n111001 101 ------ -- -L --- - ---- // 462: op=0b111001 ORC\\n111001 110 ------ -- -L --- - ---- // 463: op=0b111001 ORC\\n111001 111 ------ -- -L --- - ---- // 464: op=0b111001 ORC\\n111010 000 HLLHHL LH -L LLL - LLHH // 465: op=0b111010 XORC\\n111010 001 HLLHHL LH -L LLL - LLHH // 466: op=0b111010 XORC\\n111010 010 ------ -- -L HLL - HLLH // 467: op=0b111010 XORC\\n111010 011 ------ -- -L HLL - HLLH // 468: op=0b111010 XORC\\n111010 100 ------ -- -L --- - ---- // 469: op=0b111010 XORC\\n111010 101 ------ -- -L --- - ---- // 470: op=0b111010 XORC\\n111010 110 ------ -- -L --- - ---- // 471: op=0b111010 XORC\\n111010 111 ------ -- -L --- - ---- // 472: op=0b111010 XORC\\n111011 000 HLHLLH LH -L LLL - LLHH // 473: op=0b111011 XNORC\\n111011 001 HLHLLH LH -L LLL - LLHH // 474: op=0b111011 XNORC\\n111011 010 ------ -- -L HLL - HLLH // 475: op=0b111011 XNORC\\n111011 011 ------ -- -L HLL - HLLH // 476: op=0b111011 XNORC\\n111011 100 ------ -- -L --- - ---- // 477: op=0b111011 XNORC\\n111011 101 ------ -- -L --- - ---- // 478: op=0b111011 XNORC\\n111011 110 ------ -- -L --- - ---- // 479: op=0b111011 XNORC\\n111011 111 ------ -- -L --- - ---- // 480: op=0b111011 XNORC\\n111100 000 HHLLLL LH -L LLL - LLHH // 481: op=0b111100 SHLC\\n111100 001 HHLLLL LH -L LLL - LLHH // 482: op=0b111100 SHLC\\n111100 010 ------ -- -L HLL - HLLH // 483: op=0b111100 SHLC\\n111100 011 ------ -- -L HLL - HLLH // 484: op=0b111100 SHLC\\n111100 100 ------ -- -L --- - ---- // 485: op=0b111100 SHLC\\n111100 101 ------ -- -L --- - ---- // 486: op=0b111100 SHLC\\n111100 110 ------ -- -L --- - ---- // 487: op=0b111100 SHLC\\n111100 111 ------ -- -L --- - ---- // 488: op=0b111100 SHLC\\n111101 000 HHLLLH LH -L LLL - LLHH // 489: op=0b111101 SHRC\\n111101 001 HHLLLH LH -L LLL - LLHH // 490: op=0b111101 SHRC\\n111101 010 ------ -- -L HLL - HLLH // 491: op=0b111101 SHRC\\n111101 011 ------ -- -L HLL - HLLH // 492: op=0b111101 SHRC\\n111101 100 ------ -- -L --- - ---- // 493: op=0b111101 SHRC\\n111101 101 ------ -- -L --- - ---- // 494: op=0b111101 SHRC\\n111101 110 ------ -- -L --- - ---- // 495: op=0b111101 SHRC\\n111101 111 ------ -- -L --- - ---- // 496: op=0b111101 SHRC\\n111110 000 HHLLHH LH -L LLL - LLHH // 497: op=0b111110 SRAC\\n111110 001 HHLLHH LH -L LLL - LLHH // 498: op=0b111110 SRAC\\n111110 010 ------ -- -L HLL - HLLH // 499: op=0b111110 SRAC\\n111110 011 ------ -- -L HLL - HLLH // 500: op=0b111110 SRAC\\n111110 100 ------ -- -L --- - ---- // 501: op=0b111110 SRAC\\n111110 101 ------ -- -L --- - ---- // 502: op=0b111110 SRAC\\n111110 110 ------ -- -L --- - ---- // 503: op=0b111110 SRAC\\n111110 111 ------ -- -L --- - ---- // 504: op=0b111110 SRAC\\n111111 000 ------ -- -L LHH - HLLH // 505: op=0b111111 ???\\n111111 001 ------ -- -L LHH - HLLH // 506: op=0b111111 ???\\n111111 010 ------ -- -L HLL - HLLH // 507: op=0b111111 ???\\n111111 011 ------ -- -L HLL - HLLH // 508: op=0b111111 ???\\n111111 100 ------ -- -L --- - ---- // 509: op=0b111111 ???\\n111111 101 ------ -- -L --- - ---- // 510: op=0b111111 ???\\n111111 110 ------ -- -L --- - ---- // 511: op=0b111111 ???\\n111111 111 ------ -- -L --- - ---- // 512: op=0b111111 ???\\n\\n.plot X(OP[5:0])\\n.plot RESET\\n.plot IRQ\\n.plot Z\\n.plot X(ALUFN[5:0])\\n.plot ASEL\\n.plot BSEL\\n.plot MOE\\n.plot MWR\\n.plot X(PCSEL[2:0])\\n.plot RA2SEL\\n.plot WASEL\\n.plot X(WDSEL[1:0])\\n.plot WERF\\n\\n\"]],\"schematic\":[[\"port\",[168,8,4],{\"signal\":\"ra2sel\",\"direction\":\"out\"}],[\"port\",[168,-64,4],{\"signal\":\"asel\",\"direction\":\"out\"}],[\"port\",[168,-48,4],{\"signal\":\"bsel\",\"direction\":\"out\"}],[\"port\",[168,-80,4],{\"signal\":\"alufn[5:0]\",\"direction\":\"out\"}],[\"port\",[64,40,4],{\"signal\":\"wdsel[1:0]\",\"direction\":\"out\"}],[\"port\",[64,24,4],{\"signal\":\"wasel\",\"direction\":\"out\"}],[\"port\",[64,56,4],{\"signal\":\"werf\",\"direction\":\"out\"}],[\"port\",[64,-8,4],{\"signal\":\"pcsel[2:0]\",\"direction\":\"out\"}],[\"port\",[168,-32,4],{\"signal\":\"moe\",\"direction\":\"out\"}],[\"port\",[-80,0,4],{\"signal\":\"mwr\",\"direction\":\"out\"}],[\"port\",[-112,-104,0],{\"signal\":\"op[5:0]\"}],[\"port\",[-88,24,0],{\"signal\":\"reset\"}],[\"port\",[-56,136,0],{\"signal\":\"irq\"}],[\"port\",[-288,0,0],{\"signal\":\"z\"}],[\"memory\",[-104,-104,0],{\"naddr\":\"6\",\"ndata\":\"18\",\"contents\":\"// alufn[5:0]\\n// asel, bsel\\n// moe, mwr\\n// pcsel[2:0]\\n// ra2sel\\n// wasel, wdsel[1:0], werf\\n0b??????_??_?0_011_?_1001  // 0b000000\\n0b??????_??_?0_011_?_1001  // 0b000001\\n0b??????_??_?0_011_?_1001  // 0b000010\\n0b??????_??_?0_011_?_1001  // 0b000011\\n0b??????_??_?0_011_?_1001  // 0b000100\\n0b??????_??_?0_011_?_1001  // 0b000101\\n0b??????_??_?0_011_?_1001  // 0b000110\\n0b??????_??_?0_011_?_1001  // 0b000111\\n\\n0b??????_??_?0_011_?_1001  // 0b001000\\n0b??????_??_?0_011_?_1001  // 0b001001\\n0b??????_??_?0_011_?_1001  // 0b001010\\n0b??????_??_?0_011_?_1001  // 0b001011\\n0b??????_??_?0_011_?_1001  // 0b001100\\n0b??????_??_?0_011_?_1001  // 0b001101\\n0b??????_??_?0_011_?_1001  // 0b001110\\n0b??????_??_?0_011_?_1001  // 0b001111\\n\\n// alufn[5:0]\\n// asel, bsel\\n// moe, mwr\\n// pcsel[2:0]\\n// ra2sel\\n// wasel, wdsel[1:0], werf\\n0b??????_??_?0_011_?_1001  // 0b010000\\n0b??????_??_?0_011_?_1001  // 0b010001\\n0b??????_??_?0_011_?_1001  // 0b010010\\n0b??????_??_?0_011_?_1001  // 0b010011\\n0b??????_??_?0_011_?_1001  // 0b010100\\n0b??????_??_?0_011_?_1001  // 0b010101\\n0b??????_??_?0_011_?_1001  // 0b010110\\n0b??????_??_?0_011_?_1001  // 0b010111\\n\\n/* OPC type\\n0bxxxxxx_01_?0_000_?_0011 \\n*/\\n0b010000_01_10_000_?_0101  // 0b011000 LD\\n0b010000_01_01_000_1_???0  // 0b011001 ST\\n0b??????_??_?0_011_?_1001  // 0b011010\\n0b??????_??_?0_010_?_0001  // 0b011011 JMP\\n0b??????_??_?0_001_?_0001  // 0b011100 BEQ (usesZ)\\n0b??????_??_?0_001_?_0001  // 0b011101 BNE (usesZ)\\n0b??????_??_?0_011_?_1001  // 0b011110\\n0b101010_1?_10_000_?_0101  // 0b011111 LDR\\n\\n// alufn[5:0]\\n// asel, bsel\\n// moe, mwr\\n// pcsel[2:0]\\n// ra2sel\\n// wasel, wdsel[1:0], werf\\n/* OP type\\n0bxxxxxx_00_?0_000_0_0011 \\n*/\\n0b010000_00_?0_000_0_0011  // 0b100000 ADD\\n0b010001_00_?0_000_0_0011  // 0b100001 SUB\\n0b??????_??_?0_011_?_1001  // 0b100010 [normally MUL, but ILLOP for our ALU]\\n0b??????_??_?0_011_?_1001  // 0b100011 [normally DIV, but ILOOP for our ALU]\\n0b000011_00_?0_000_0_0011  // 0b100100 CMPEQ\\n0b000101_00_?0_000_0_0011  // 0b100101 CMPLT\\n0b000111_00_?0_000_0_0011  // 0b100110 CMPLE\\n0b??????_??_?0_011_?_1001  // 0b100111\\n\\n0b101000_00_?0_000_0_0011  // 0b101000 AND\\n0b101110_00_?0_000_0_0011  // 0b101001 OR\\n0b100110_00_?0_000_0_0011  // 0b101010 XOR\\n0b101001_00_?0_000_0_0011  // 0b101011 XNOR\\n0b110000_00_?0_000_0_0011  // 0b101100 SHL\\n0b110001_00_?0_000_0_0011  // 0b101101 SHR\\n0b110011_00_?0_000_0_0011  // 0b101110 SRA\\n0b??????_??_?0_011_?_1001  // 0b101111\\n\\n// alufn[5:0]\\n// asel, bsel\\n// moe, mwr\\n// pcsel[2:0]\\n// ra2sel\\n// wasel, wdsel[1:0], werf\\n/* OPC type\\n0bxxxxxx_01_?0_000_?_0011 \\n*/\\n0b010000_01_?0_000_?_0011  // 0b110000 ADDC\\n0b010001_01_?0_000_?_0011  // 0b110001 SUBC\\n0b??????_??_?0_011_?_1001  // 0b110010 [normally MULC, but ILLOP for our ALU]\\n0b??????_??_?0_011_?_1001  // 0b110011 [normally DIVC, but ILLOP for our ALU]\\n0b000011_01_?0_000_?_0011  // 0b110100 CMPEQC\\n0b000101_01_?0_000_?_0011  // 0b110101 CMPLTC\\n0b000111_01_?0_000_?_0011  // 0b110110 CMPLEC\\n0b??????_??_?0_011_?_1001  // 0b110111\\n\\n0b101000_01_?0_000_?_0011  // 0b111000 ANDC\\n0b101110_01_?0_000_?_0011  // 0b111001 ORC\\n0b100110_01_?0_000_?_0011  // 0b111010 XORC\\n0b101001_01_?0_000_?_0011  // 0b111011 XNORC\\n0b110000_01_?0_000_?_0011  // 0b111100 SHLC\\n0b110001_01_?0_000_?_0011  // 0b111101 SHRC\\n0b110011_01_?0_000_?_0011  // 0b111110 SRAC\\n0b??????_??_?0_011_?_1001  // 0b111111\\n\"}],[\"wire\",[160,-80,0,-8,0],{\"signal\":\"d[17:12]\"}],[\"wire\",[160,-64,0,-8,0],{\"signal\":\"d[11]\"}],[\"wire\",[56,56,0,-8,0],{\"signal\":\"d_irq[0]\"}],[\"wire\",[56,40,0,-8,0],{\"signal\":\"d_irq[2:1]\"}],[\"wire\",[56,24,0,-8,0],{\"signal\":\"d_irq[3]\"}],[\"wire\",[160,8,0,-8,0],{\"signal\":\"d[4]\"}],[\"wire\",[56,-8,0,-8,0],{\"signal\":\"d_irq[6:4]\"}],[\"wire\",[-96,8,0,-8,0],{\"signal\":\"d_irq[7]\"}],[\"wire\",[160,-32,0,-8,0],{\"signal\":\"d[9]\"}],[\"wire\",[160,-48,0,-8,0],{\"signal\":\"d[10]\"}],[\"wire\",[-104,-96,0,-8,0],{\"signal\":\"1'1\"}],[\"wire\",[-112,-104,0,8,0]],[\"wire\",[-104,-88,0,-8,0],{\"signal\":\"0'1\"}],[\"/gates/mux2\",[-256,144,0]],[\"wire\",[-256,160,0,-8,0],{\"signal\":\"0'3\"}],[\"wire\",[-256,144,0,-8,0],{\"signal\":\"1'3\"}],[\"/gates/and2\",[-264,-80,0]],[\"/gates/mux2\",[-232,144,6]],[\"/gates/nor2\",[-312,-88,0]],[\"wire\",[-312,-88,0,-8,0],{\"signal\":\"d[7]\"}],[\"wire\",[-312,-72,0,-8,0],{\"signal\":\"d[6]\"}],[\"wire\",[-240,152,0,8,0]],[\"wire\",[-232,144,0,0,8],{\"width\":\"3\"}],[\"wire\",[-216,136,0,8,0],{\"signal\":\"bch[2:0]\"}],[\"wire\",[-232,128,0,-24,0],{\"signal\":\"d[7:5]\"}],[\"/gates/inverter\",[-288,0,0]],[\"wire\",[-264,-64,0,0,8],{\"signal\":\"d[5]\"}],[\"wire\",[-248,32,0,-8,0],{\"signal\":\"op[0]\"}],[\"wire\",[-216,-72,0,8,0],{\"signal\":\"branch\"}],[\"wire\",[-224,112,0,-32,0],{\"signal\":\"branch\"}],[\"/gates/mux2\",[-256,0,0]],[\"wire\",[-256,16,0,-32,0]],[\"wire\",[-288,16,0,0,-16]],[\"wire\",[-240,8,0,8,0],{\"signal\":\"bne_beq\"}],[\"wire\",[-248,176,0,-16,0],{\"signal\":\"bne_beq\"}],[\"/gates/mux2\",[-96,-8,0]],[\"wire\",[-96,-8,0,-8,0],{\"signal\":\"0'1\"}],[\"/gates/mux2\",[-64,104,0]],[\"wire\",[-64,120,0,-8,0],{\"signal\":\"d[8],bch[2:0],d[3:0]\"}],[\"wire\",[-64,104,0,-8,0],{\"signal\":\"0b01001001'8\"}],[\"wire\",[-48,112,0,8,0],{\"signal\":\"d_irq[7:0]\"}],[\"jumper\",[160,-32,0]],[\"jumper\",[56,-8,0]],[\"jumper\",[160,-80,0]],[\"jumper\",[160,-64,0]],[\"jumper\",[160,-48,0]],[\"jumper\",[160,8,0]],[\"jumper\",[56,24,0]],[\"jumper\",[56,40,0]],[\"jumper\",[56,56,0]],[\"wire\",[-104,-80,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[-32,-104,0,8,0],{\"signal\":\"d[17:0]\"}],[\"text\",[-287,-106,0],{\"text\":\"Detect branch\"}],[\"text\",[-297,-20,0],{\"text\":\"distinquish beq/bne\"}],[\"text\",[-302,69,0],{\"text\":\"if branch,\"}],[\"text\",[-289,81,0],{\"text\":\" z determines outcome, \"}],[\"text\",[-302,94,0],{\"text\":\"else, pass through.\"}],[\"text\",[-139,83,0],{\"text\":\"If IRQ, \\noverwrite ROM output\"}],[\"text\",[-127,-28,0],{\"text\":\"If reset, force MWR\"}],[\"text\",[87,-103,0],{\"text\":\"ROM output\",\"font\":\"8pt sans-serif\"}],[\"text\",[36,-28,0],{\"text\":\"IRQ overridable\",\"font\":\"4pt sans-serif\"}]]},\"/beta/pc\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"test-readonly\":{\"label\":\"test-readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"icon\":[[\"terminal\",[-8,8,0],{\"name\":\"ID[15:0]\"}],[\"terminal\",[-8,24,0],{\"name\":\"JT[31:2]\"}],[\"terminal\",[88,24,4],{\"name\":\"PC[31:0]\"}],[\"text\",[40,-3,0],{\"text\":\"PC\",\"align\":\"center\",\"font\":\"bold 6pt sans-serif\"}],[\"text\",[1,8,0],{\"text\":\"ID[15:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[1,24,0],{\"text\":\"JT[31:2]\",\"font\":\"4pt sans-serif\"}],[\"text\",[1,56,0],{\"text\":\"RESET\",\"font\":\"4pt sans-serif\"}],[\"text\",[79,24,0],{\"text\":\"PC[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"terminal\",[-8,40,0],{\"name\":\"PCSEL[2:0]\"}],[\"text\",[1,40,1],{\"text\":\"PCSEL[2:0]\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"line\",[0,76,1,-4,-8]],[\"line\",[8,72,1,-4,8]],[\"terminal\",[88,40,4],{\"name\":\"PC_INC[31:0]\"}],[\"text\",[79,40,0],{\"text\":\"PC_INC[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"property\",[40,-10,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}],[\"terminal\",[-8,56,0],{\"name\":\"RESET\"}],[\"terminal\",[-8,72,0],{\"name\":\"CLK\"}],[\"terminal\",[88,56,4],{\"name\":\"PC_OFFSET[31:0]\"}],[\"text\",[79,56,0],{\"text\":\"PC_OFFSET[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[0,-8,0,0,88]],[\"line\",[0,80,0,80,0]],[\"line\",[80,80,0,0,-88]],[\"line\",[80,-8,0,-80,0]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs RESET PCSEL[2:0] ID[15:0] JT[31:0]\\n.group outputs PC[31:0] PC_INC[31:0] PC_OFFSET[31:0]\\n\\n.mode gate\\n\\n.cycle CLK=0 assert inputs tran 50n CLK=1 tran 49n sample outputs tran 1n\\n\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\n1 011 1111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //   1: reset, PC==0x80000000\\n1 100 0000000000000000 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   2: reset, PC==0x80000000\\n0 100 1111111111111110 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL //   3: xadr, PC==0x80000008, offset=-2\\n0 011 0111111111111111 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL HLLLLLLLLLLLLLHLLLLLLLLLLLLLLHLL //   4: illop, PC==0x80000004, offset=0x7fff\\n0 010 0000000000000000 11111111111111111111111111110000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   5: jmp, pc==0XFFFFFFF0\\n0 000 1111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   6: inc, pc==0xFFFFFFF4, offset=-1\\n0 000 1111111111111110 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   7: inc, pc==0xFFFFFFF8, offset=-1\\n0 000 1111111111111101 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   8: inc, pc==0xFFFFFFFC, offset=-1\\n0 000 1111111111111100 00000000000000000000000000000000 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHLHLL //   9: inc, pc==0x80000000, offset=-1\\n0 010 1000000000000000 01111111111111111111111111111111 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHHHHHHHHHHHHLLLLLLLLLLLLLLLLL //  10: jmp to user mode, PC==0x7FFFFFFC, offset=0x8000\\n0 010 1111111111110111 10000111011001010100001100100001 LLLLLHHHLHHLLHLHLHLLLLHHLLHLLLLL LLLLLHHHLHHLLHLHLHLLLLHHLLHLLHLL LLLLLHHHLHHLLHLHLHLLLLHHLLLLLLLL //  11: jmp to super mode?, PC==0x07654320, offset=-9\\n0 010 0000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL //  12: jmp, PC==0x0\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL //  13: inc\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL //  14: inc\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL //  15: inc\\n0 001 0000000000000010 00000000000000000000000011110000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL //  16: br, offset=3, PC==0x1C\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL //  17: inc\\n0 010 0000000000000000 00000000000000000000000000111100 LLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL //  18: jmp, PC==0x3C\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLHLLLHLL //  19: inc\\n0 010 0000000000000000 00000000000000000000000001111100 LLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL //  20: jmp, PC==0x7C\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLHLLLLHLL //  21: inc\\n0 010 0000000000000000 00000000000000001111111111111100 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL //  22: jmp, PC==0xFFFC\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLHLLLLLLLLLLLLLHLL //  23: inc\\n0 010 0000000000000000 00000000111111111111111111111100 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL //  24: jmp, PC==0xFFFFFC\\n0 000 0000000000000000 00000000000000000000000000000000 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLHLLLLLLLLLLLLLLLLLLLLLHLL //  25: inc\\n0 010 0000000000000000 01111111111111111111111111111100 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL //  26: jmp, PC==0x7FFFFFFC\\n0 000 1111111111111110 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL //  27: inc\\n\\n.plot CLK\\n.plot RESET\\n.plot B(PCSEL[2:0])\\n.plot X(ID[15:0])\\n.plot X(JT[31:0])\\n.plot X(PC[31:0])\\n.plot X(PC_INC[31:0])\\n.plot X(PC_OFFSET[31:0])\"]],\"schematic\":[[\"port\",[8,-128,0],{\"signal\":\"CLK\"}],[\"port\",[-40,-168,6],{\"signal\":\"RESET\"}],[\"port\",[-216,16,0],{\"signal\":\"ID[15:0]\"}],[\"port\",[-408,-200,0],{\"signal\":\"JT[31:0]\"}],[\"port\",[-160,-208,0],{\"signal\":\"PCSEL[2:0]\"}],[\"port\",[48,-144,4],{\"signal\":\"PC[31:0]\",\"direction\":\"out\"}],[\"port\",[-216,-112,4],{\"signal\":\"PC_INC[31:0]\",\"direction\":\"out\"}],[\"port\",[32,-72,4],{\"signal\":\"PC_OFFSET[31:0]\",\"direction\":\"out\"}],[\"/gates/dreg\",[8,-144,0]],[\"wire\",[-96,-176,6,0,8],{\"signal\":\"pcsel[2]\"}],[\"/gates/mux2\",[-104,-144,6]],[\"/gates/mux4\",[-144,-184,0]],[\"wire\",[-128,-160,0,24,0],{\"width\":\"32\"}],[\"wire\",[-136,-120,0,0,16],{\"signal\":\"pcsel[1:0]\"}],[\"/gates/mux2\",[-48,-136,6]],[\"wire\",[-48,-136,0,0,24],{\"signal\":\"0x80000000'32\"}],[\"/user/add32\",[-176,-256,0],{\"name\":\"incrementor\"}],[\"/user/add32\",[-168,-48,0]],[\"wire\",[-208,-240,0,-16,0],{\"signal\":\"4'32\"}],[\"wire\",[-208,-256,0,-16,0],{\"signal\":\"pc[31:0]\"}],[\"wire\",[-208,-272,0,0,-24],{\"signal\":\"0'1\"}],[\"wire\",[-200,-48,0,-16,0],{\"signal\":\"pc_inc[31:0]\"}],[\"text\",[-402,-32,0],{\"text\":\"sign extend and shift:\"}],[\"wire\",[-200,-64,0,-16,0],{\"signal\":\"0'1\"}],[\"wire\",[-144,-184,0,-16,0],{\"signal\":\"0x80000004'32\"}],[\"wire\",[-144,-152,0,-16,0],{\"signal\":\"pc_offset[31:0]\"}],[\"wire\",[-104,-144,0,0,16],{\"signal\":\"0x80000008'32\"}],[\"wire\",[-48,-152,0,-40,0],{\"width\":\"32\"}],[\"wire\",[8,-144,0,-40,0],{\"width\":\"32\"}],[\"wire\",[-200,-32,0,-16,0],{\"signal\":\"id[15]#14,id[15:0],0b00'2\"}],[\"jumper\",[-224,-112,0]],[\"wire\",[-88,-240,0,16,0],{\"signal\":\"inc[31:0]\"}],[\"wire\",[-80,-32,0,16,0],{\"signal\":\"boff[31:0]\"}],[\"jumper\",[24,-72,0]],[\"wire\",[24,-72,0,-16,0],{\"signal\":\"pc[31],boff[30:0]\"}],[\"wire\",[-224,-112,0,-8,0]],[\"wire\",[-232,-112,0,0,-24]],[\"wire\",[-144,-136,0,-88,0],{\"signal\":\"pc[31],inc[30:0]\"}],[\"/gates/and2\",[-440,-240,0]],[\"wire\",[-440,-240,0,-16,0],{\"signal\":\"pc[31]\"}],[\"wire\",[-440,-224,0,-16,0],{\"signal\":\"jt[31]\"}],[\"wire\",[-392,-232,0,16,0],{\"signal\":\"supnext\"}],[\"wire\",[-144,-168,0,-16,0],{\"signal\":\"supnext,jt[30:2],0b00'2\"}],[\"text\",[-109,-198,0],{\"text\":\"map 0b1xx to IRQ\"}],[\"text\",[-52,-63,0],{\"text\":\"guard sbit\"}],[\"text\",[-377,-222,0],{\"text\":\"calc next sbit\"}],[\"text\",[-373,-168,0],{\"text\":\"guard sbit, word align address:\"}],[\"text\",[-357,-135,0],{\"text\":\"guard sbit (supervisor bit):\"}]]},\"/beta/regfile\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"test-readonly\":{\"label\":\"test-readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-152,-152,4],{\"signal\":\"rbdata[31:0]\",\"direction\":\"out\"}],[\"port\",[-304,16,0],{\"signal\":\"rc[4:0]\"}],[\"port\",[-160,40,0],{\"signal\":\"werf\"}],[\"port\",[-128,48,0],{\"signal\":\"clk\"}],[\"port\",[-200,-16,0],{\"signal\":\"rb[4:0]\"}],[\"port\",[-160,-56,0],{\"signal\":\"ra[4:0]\"}],[\"port\",[-56,24,4],{\"signal\":\"wdata[31:0]\"}],[\"port\",[-256,0,0],{\"signal\":\"wasel\"}],[\"port\",[-192,0,0],{\"signal\":\"ra2sel\"}],[\"memory\",[-128,-56,0],{\"nports\":\"3\",\"naddr\":\"5\",\"ndata\":\"32\"}],[\"wire\",[-128,-48,0,-8,0],{\"signal\":\"1'1\"}],[\"wire\",[-128,-8,0,-8,0],{\"signal\":\"1'1\"}],[\"wire\",[-128,32,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[-128,40,0,-32,0]],[\"wire\",[-128,-32,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[-128,8,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[-128,-56,0,-32,0]],[\"/gates/mux2\",[-264,32,6]],[\"/gates/mux2\",[-200,-32,0]],[\"wire\",[-264,32,6,-8,0],{\"signal\":\"0b11110'5\"}],[\"wire\",[-200,-32,0,-104,0]],[\"wire\",[-264,16,0,-40,0]],[\"wire\",[-128,-40,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[-128,0,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[-304,16,0,0,-48]],[\"/gates/mux2\",[-168,-160,0]],[\"wire\",[-256,-104,0,-8,0],{\"signal\":\"rbi[1]\"}],[\"wire\",[-256,-120,0,-8,0],{\"signal\":\"rbi[2]\"}],[\"wire\",[-256,-136,0,-8,0],{\"signal\":\"rbi[3]\"}],[\"wire\",[-256,-88,0,-8,0],{\"signal\":\"rbi[0]\"}],[\"wire\",[-168,-144,0,-8,0],{\"signal\":\"0'32\"}],[\"wire\",[-168,-160,0,-8,0],{\"signal\":\"rbo[31:0]\"}],[\"wire\",[-56,-56,0,16,0],{\"signal\":\"rao[31:0]\"}],[\"port\",[-152,-232,4],{\"signal\":\"radata[31:0]\",\"direction\":\"out\"}],[\"/gates/mux2\",[-168,-240,0]],[\"wire\",[-256,-184,0,-8,0],{\"signal\":\"ra[1]\"}],[\"wire\",[-256,-200,0,-8,0],{\"signal\":\"ra[2]\"}],[\"wire\",[-256,-216,0,-8,0],{\"signal\":\"ra[3]\"}],[\"wire\",[-256,-168,0,-8,0],{\"signal\":\"ra[0]\"}],[\"wire\",[-168,-224,0,-8,0],{\"signal\":\"0'32\"}],[\"wire\",[-168,-240,0,-8,0],{\"signal\":\"rao[31:0]\"}],[\"wire\",[-56,-16,0,16,0],{\"signal\":\"rbo[31:0]\"}],[\"wire\",[-128,-16,0,-56,0],{\"signal\":\"rbi[4:0]\",\"width\":\"5\"}],[\"wire\",[-184,-24,0,0,8]],[\"wire\",[-248,24,0,120,0],{\"width\":\"5\"}],[\"/gates/nand2\",[-208,-128,0]],[\"wire\",[-160,-128,0,0,8]],[\"/gates/and4\",[-256,-136,0]],[\"wire\",[-208,-128,0,-8,0],{\"signal\":\"rbi[4]\"}],[\"/gates/nand2\",[-208,-208,0]],[\"wire\",[-208,-208,0,-8,0],{\"signal\":\"ra[4]\"}],[\"wire\",[-160,-208,0,0,8]],[\"/gates/and4\",[-256,-216,0]],[\"text\",[-430,-158,0],{\"text\":\"read R31 gives 0:\",\"font\":\"8pt\"}],[\"text\",[-357,45,0],{\"text\":\"R30: exception pointer\"}]],\"icon\":[[\"terminal\",[-64,-40,0],{\"name\":\"rc[4:0]\"}],[\"terminal\",[-64,-8,0],{\"name\":\"werf\"}],[\"terminal\",[-64,8,0],{\"name\":\"clk\"}],[\"terminal\",[80,-24,4],{\"name\":\"wdata[31:0]\"}],[\"terminal\",[-24,-80,1],{\"name\":\"ra[4:0]\"}],[\"terminal\",[40,-80,1],{\"name\":\"rb[4:0]\"}],[\"terminal\",[-24,32,3],{\"name\":\"radata[31:0]\"}],[\"terminal\",[40,32,3],{\"name\":\"rbdata[31:0]\"}],[\"text\",[-55,-40,0],{\"text\":\"RC[4:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-55,-8,0],{\"text\":\"WERF\",\"font\":\"4pt sans-serif\"}],[\"text\",[71,-24,0],{\"text\":\"WDATA[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[-56,6,0,4,2]],[\"line\",[-52,8,0,-4,2]],[\"text\",[-24,-71,0],{\"text\":\"RA[4:0]\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[40,-71,0],{\"text\":\"RB[4:0]\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[-24,23,0],{\"text\":\"RADATA[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[40,23,0],{\"text\":\"RBDATA[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[8,-24,0],{\"text\":\"REGFILE\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"line\",[-56,-72,0,128,0]],[\"line\",[-56,24,0,128,0]],[\"terminal\",[-64,-24,0],{\"name\":\"wasel\"}],[\"terminal\",[-64,-56,0],{\"name\":\"ra2sel\"}],[\"text\",[-55,-56,0],{\"text\":\"RA2SEL\",\"font\":\"4pt sans-serif\"}],[\"text\",[-55,-24,0],{\"text\":\"WASEL\",\"font\":\"4pt sans-serif\"}],[\"line\",[72,-72,0,0,96]],[\"line\",[-56,-72,0,0,96]],[\"property\",[8,-73,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs RA2SEL WASEL WERF RA[4:0] RB[4:0] RC[4:0] WDATA[31:0]\\n\\n.group outputs RADATA[31:0] RBDATA[31:0]\\n\\n.mode gate\\n\\n.cycle CLK=0 tran 1n CLK=1 tran 1n assert inputs tran 49n CLK=0 tran 48n sample outputs tran 1n\\n\\n00 0 11111 11111 00000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL  //   1: Ra[31]==0, Rb[31]==0\\n00 1 00000 00000 00000 00000000000000000000000000000000 -------------------------------- --------------------------------  //   2: Ra[0]==None, Rb[0]==None Reg[0]=0\\n00 1 00000 00000 00001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL  //   3: Ra[0]==0, Rb[0]==0 Reg[1]=1\\n00 1 00001 00000 00010 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL  //   4: Ra[1]==1, Rb[0]==0 Reg[2]=2\\n00 1 00010 00001 00011 00000000000000000000000000000011 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH  //   5: Ra[2]==2, Rb[1]==1 Reg[3]=3\\n00 1 00011 00010 00100 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL  //   6: Ra[3]==3, Rb[2]==2 Reg[4]=4\\n00 1 00100 00011 00101 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH  //   7: Ra[4]==4, Rb[3]==3 Reg[5]=5\\n00 1 00101 00100 00110 00000000000000000000000000000110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL  //   8: Ra[5]==5, Rb[4]==4 Reg[6]=6\\n00 1 00110 00101 00111 00000000000000000000000000000111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH  //   9: Ra[6]==6, Rb[5]==5 Reg[7]=7\\n00 1 00111 00110 01000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL  //  10: Ra[7]==7, Rb[6]==6 Reg[8]=8\\n00 1 01000 00111 01001 00000000000000000000000000001001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH  //  11: Ra[8]==8, Rb[7]==7 Reg[9]=9\\n00 1 01001 01000 01010 00000000000000000000000000001010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL  //  12: Ra[9]==9, Rb[8]==8 Reg[10]=10\\n00 1 01010 01001 01011 00000000000000000000000000001011 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH  //  13: Ra[10]==10, Rb[9]==9 Reg[11]=11\\n00 1 01011 01010 01100 00000000000000000000000000001100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL  //  14: Ra[11]==11, Rb[10]==10 Reg[12]=12\\n00 1 01100 01011 01101 00000000000000000000000000001101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH  //  15: Ra[12]==12, Rb[11]==11 Reg[13]=13\\n00 1 01101 01100 01110 00000000000000000000000000001110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL  //  16: Ra[13]==13, Rb[12]==12 Reg[14]=14\\n00 1 01110 01101 01111 00000000000000000000000000001111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH  //  17: Ra[14]==14, Rb[13]==13 Reg[15]=15\\n00 1 01111 01110 10000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL  //  18: Ra[15]==15, Rb[14]==14 Reg[16]=16\\n00 1 10000 01111 10001 00000000000000000000000000010001 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH  //  19: Ra[16]==16, Rb[15]==15 Reg[17]=17\\n00 1 10001 10000 10010 00000000000000000000000000010010 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL  //  20: Ra[17]==17, Rb[16]==16 Reg[18]=18\\n00 1 10010 10001 10011 00000000000000000000000000010011 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH  //  21: Ra[18]==18, Rb[17]==17 Reg[19]=19\\n00 1 10011 10010 10100 00000000000000000000000000010100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL  //  22: Ra[19]==19, Rb[18]==18 Reg[20]=20\\n00 1 10100 10011 10101 00000000000000000000000000010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH  //  23: Ra[20]==20, Rb[19]==19 Reg[21]=21\\n00 1 10101 10100 10110 00000000000000000000000000010110 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL  //  24: Ra[21]==21, Rb[20]==20 Reg[22]=22\\n00 1 10110 10101 10111 00000000000000000000000000010111 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH  //  25: Ra[22]==22, Rb[21]==21 Reg[23]=23\\n00 1 10111 10110 11000 00000000000000000000000000011000 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL  //  26: Ra[23]==23, Rb[22]==22 Reg[24]=24\\n00 1 11000 10111 11001 00000000000000000000000000011001 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH  //  27: Ra[24]==24, Rb[23]==23 Reg[25]=25\\n00 1 11001 11000 11010 00000000000000000000000000011010 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL  //  28: Ra[25]==25, Rb[24]==24 Reg[26]=26\\n00 1 11010 11001 11011 00000000000000000000000000011011 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH  //  29: Ra[26]==26, Rb[25]==25 Reg[27]=27\\n00 1 11011 11010 11100 00000000000000000000000000011100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL  //  30: Ra[27]==27, Rb[26]==26 Reg[28]=28\\n00 1 11100 11011 11101 00000000000000000000000000011101 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH  //  31: Ra[28]==28, Rb[27]==27 Reg[29]=29\\n00 1 11101 11100 11110 00000000000000000000000000011110 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL  //  32: Ra[29]==29, Rb[28]==28 Reg[30]=30\\n00 1 11110 11101 11111 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH  //  33: Ra[30]==30, Rb[29]==29 Reg[31]=31\\n00 0 11111 11110 11111 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL  //  34: Ra[31]==0, Rb[30]==30\\n00 0 00000 11111 11111 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL  //  35: Ra[0]==0, Rb[31]==0\\n10 0 00001 00010 00011 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH  //  36: Ra[1]==1, Rc[3]==3\\n10 0 00001 00010 11111 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL  //  37: Ra[1]==1, Rc[31]==0\\n10 0 00001 11111 00100 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL  //  38: Ra[1]==1, Rc[4]==4\\n01 1 00001 00010 11111 00000000000000000011000000111001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL  //  39: Ra[1]==1, Rb[2]==2 Reg[30]=12345\\n00 0 11110 00001 00010 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLHHLLLLLLHHHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH  //  40: Ra[30]==12345, Rb[1]==1\\n01 1 00001 00010 00011 00000000101111000110000101001110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL  //  41: Ra[1]==1, Rb[2]==2 Reg[30]=12345678\\n10 0 11110 00010 11110 00000000000000000000000000000000 LLLLLLLLHLHHHHLLLHHLLLLHLHLLHHHL LLLLLLLLHLHHHHLLLHHLLLLHLHLLHHHL  //  42: Ra[30]==12345678, Rc[30]==12345678\\n00 0 00001 00010 00011 00000000101111000110000101001110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL  //  43: Ra[1]==1, Rb[2]==2\\n00 0 00011 00011 00011 00000000101111000110000101001110 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH  //  44: Ra[3]==3, Rb[3]==3\\n\\n.plot CLK\\n.plot RA2SEL\\n.plot WERF\\n.plot X(RA[4:0])\\n.plot X(RB[4:0])\\n.plot X(RC[4:0])\\n.plot X(WDATA[31:0])\\n.plot X(RADATA[31:0])\\n.plot X(RBDATA[31:0])\\n\"]]},\"/beta/test\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"readonly\":{\"label\":\"readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"/beta/beta\",[-128,40,0],{\"name\":\"beta\"}],[\"memory\",[48,-24,0],{\"name\":\"Main\",\"nports\":\"3\",\"naddr\":\"10\",\"ndata\":\"32\",\"contents\":\"+ 0x73df000a 0x73ff0003 0x6ffe0000 0xc3e00000 0x73fffffe 0xd01e0004 0x73e00002 0x801ef800\\n+ 0x73fffffa 0xc0210001 0x6ffe0000 0x73ff0002 0xc01f0005 0x73fffff5 0xd01f0000 0x77e00002\\n+ 0xc01f0006 0x73fffff1 0xd81f0000 0x77e00002 0xc01f0007 0x73ffffed 0xd41f0001 0x77e00002\\n+ 0xc01f0008 0x73ffffe9 0xd01fffff 0x73e00002 0xc01f0009 0x73ffffe5 0xd81fffff 0x73e00002\\n+ 0xc01f000a 0x73ffffe1 0xd41fffff 0x73e00002 0xc01f000b 0x73ffffdd 0xc03f0001 0xf021001f\\n+ 0xc4410001 0xa4611000 0xd063ffff 0x77e30002 0xc01f000c 0x73ffffd5 0x98611000 0x77e30002\\n+ 0xc01f000d 0x73ffffd1 0x98620800 0x73e30002 0xc01f000e 0x73ffffcd 0x801ff800 0x73e00002\\n+ 0xc01f000f 0x73ffffc9 0xc01f0000 0x73e00002 0xc01f0010 0x73ffffc5 0x9020f800 0xd0010001\\n+ 0x77e00002 0xc01f0012 0x73ffffc0 0xf0410001 0xd0020002 0x77e00002 0xc01f0013 0x73ffffbb\\n+ 0x80611000 0xd0030003 0x77e00002 0xc01f0014 0x73ffffb6 0xc0810003 0xd0040004 0x77e00002\\n+ 0xc01f0015 0x73ffffb1 0xe8bfffff 0xe8a5fffa 0xd0050005 0x77e00002 0xc01f0016 0x73ffffab\\n+ 0xa4c41000 0xd0060006 0x77e00002 0xc01f0017 0x73ffffa6 0xc4ff0001 0xf4e7001d 0xd0070007\\n+ 0x77e00002 0xc01f0018 0x73ffffa0 0xb1011800 0xd0080008 0x77e00002 0xc01f0019 0x73ffff9b\\n+ 0x99284000 0xc529fff8 0xd0090009 0x77e00002 0xc01f001a 0x73ffff95 0xa9481000 0xd00a000a\\n+ 0x77e00002 0xc01f001b 0x73ffff90 0xe5630008 0xd00b000b 0x77e00002 0xc01f001c 0x73ffff8b\\n+ 0x859f0800 0xf58c001d 0x818c2800 0xd00c000c 0x77e00002 0xc01f0018 0x73ffff84 0xa5a82800\\n+ 0xd00d000d 0x77e00002 0xc01f001e 0x73ffff7f 0x95cc6800 0x81cd7000 0xd00e000e 0x77e00002\\n+ 0xc01f001f 0x73ffff79 0xf1e10004 0x85ef0800 0xd00f000f 0x77e00002 0xc01f0020 0x73ffff73\\n+ 0xb60f1000 0x82106800 0xd0100010 0x77e00002 0xc01f0021 0x73ffff6d 0xee30fffe 0xd0110011\\n+ 0x77e00002 0xc01f0022 0x73ffff68 0xa24f1000 0xe6520010 0xd0120012 0x77e00002 0xc01f0023\\n+ 0x73ffff62 0xba6c1000 0xae709800 0xee730000 0xd0130013 0x77e00002 0xc01f0024 0x73ffff5b\\n+ 0xc29f001f 0xe2940014 0xd0140014 0x77e00002 0xc01f0025 0x73ffff55 0xe6b40001 0xd0150015\\n+ 0x77e00002 0xc01f0026 0x73ffff50 0xc2d10005 0xd0160016 0x77e00002 0xc01f0027 0x73ffff4b\\n+ 0xaaf60800 0xd0170017 0x77e00002 0xc01f0028 0x73ffff46 0xe31700fc 0x83182000 0xd0180018\\n+ 0x77e00002 0xc01f0029 0x73ffff40 0x8337c000 0xc339ffea 0xd0190019 0x77e00002 0xc01f002a\\n+ 0x73ffff3a 0xb3431800 0xa742d000 0xd01a001a 0x77e00002 0xc01f002b 0x73ffff34 0x836e6800\\n+ 0xd01b001b 0x77e00002 0xc01f002c 0x73ffff2f 0xc797fffb 0xd01c001c 0x77e00002 0xc01f002d\\n+ 0x73ffff2a 0xc7bfffe3 0xd01d001d 0x77e00002 0xc01f002e 0x73ffff25 0xc3df001f 0xf7de0001\\n+ 0xf3de0001 0xd01e001e 0x77e00002 0xc01f002f 0x73ffff1e 0x7000ff1d 0xc3fe0011 0x73ff0002\\n+ 0xc01f0030 0x73ffff19 0xc23f03c4 0xf021001f 0xa6218800 0x6f910000 0x77ff0002 0xc01f0032\\n+ 0x73ffff12 0xf39c0001 0xf79c0001 0xd2fc03b8 0x77f70002 0xc01f0033 0x73ffff0c 0x7f1f00c0\\n+ 0x7f3f00c0 0x8358c800 0xd37affff 0x77fb0002 0xc01f0034 0x73ffff05 0x8358c000 0x875ac800\\n+ 0xd37affff 0x77fb0002 0xc01f0035 0x73fffeff 0x8359c800 0x875ac000 0x73fa0002 0xc01f0036\\n+ 0x73fffefa 0xc23f0001 0xc6510001 0x73f20002 0xc01f0037 0x73fffef5 0xc17f0f0f 0xc19f7f00\\n+ 0xa1ab6000 0xd1cd0f00 0x77ee0002 0xc01f0038 0x73fffeee 0xa5ab6000 0xd1cd7f0f 0x77ee0002\\n+ 0xc01f0039 0x73fffee9 0xa9ab6000 0xd1cd700f 0x77ee0002 0xc01f003a 0x73fffee4 0xadab6000\\n+ 0xd1cd8ff0 0x77ee0002 0xc01f003b 0x73fffedf 0xc37f0001 0xf39b0020 0xd3bc0001 0x77fd0002\\n+ 0xc01f003c 0x73fffed9 0xf39b001f 0xfb5c0011 0xd33ac000 0x77f90002 0xc01f003d 0x73fffed3\\n+ 0xf75c0011 0xd33a4000 0x77f90002 0xc01f003e 0x73fffece 0xc3df0000 0xc03f0000 0x00000014\\n+ 0xf3de0001 0xf7de0001 0xd01e04e0 0x77e00002 0xc01f003f 0x73fffec5 0x04000000 0x08000000\\n+ 0x0c000000 0x10000000 0x14000000 0x18000000 0x1c000000 0x20000000 0x24000000 0x28000000\\n+ 0x2c000000 0x30000000 0x34000000 0x38000000 0x3c000000 0x40000000 0x44000000 0x48000000\\n+ 0x4c000000 0x50000000 0x54000000 0x58000000 0x5c000000 0x68000000 0x78000000 0x9c000000\\n+ 0xbc000000 0xdc000000 0xfc000000 0xd001001e 0x77e00002 0xc01f0040 0x73fffea4 0xc09f06e8\\n+ 0x7d3f0057 0xe809ffff 0x65240000 0x641f06ec 0x65240008 0x641f06f4 0x60c40000 0x7cbf0051\\n+ 0x90064800 0x77e00002 0xc01f0041 0x73fffe97 0x60ff06ec 0x90072800 0x77e00002 0xc01f0042\\n+ 0x73fffe92 0x61040008 0x90084800 0x77e00002 0xc01f0043 0x73fffe8d 0x613f06f4 0x90092800\\n+ 0x77e00002 0xc01f0044 0x73fffe88 0x801fa000 0x80200000 0x80400000 0x80600000 0x80800000\\n+ 0x80a11000 0x80a32800 0x80a42800 0xd00500a0 0x77e00002 0xc01f0045 0x73fffe7c 0x741f0000\\n+ 0x80200000 0x80400000 0x80600000 0x80800000 0x80a11000 0x80a32800 0x80a42800 0xd0053100\\n+ 0x77e00002 0xc01f0046 0x73fffe70 0xc01f0654 0x6fe00000 0x73ff0001 0x73ff0003 0x77ff0002\\n+ 0xc01f0047 0x73fffe69 0xd01e0658 0x77e00002 0xc01f0048 0x73fffe65 0xc01f068c 0xc03f0001\\n+ 0xf021001f 0xa4010000 0x6c200000 0x701f0000 0xd0200690 0x77e10002 0xc01f0049 0x73fffe5b\\n+ 0x601f06e0 0x73e00007 0x601f06e4 0x73e00005 0xc01f0000 0x77e00003 0xc03f0001 0xc05f0020\\n+ 0x77e10002 0xc01f004a 0x73fffe50 0xf0210001 0xc4420001 0x77e2fffa 0xc3ff0000 0x73fffffe\\n+ 0xaaaaaaaa 0x55555555 0x00000000 0x00000000 0x00000000 0x00000000\\n\"}],[\"wire\",[120,-24,0,8,0],{\"signal\":\"id[31:0]\"}],[\"wire\",[120,16,0,8,0],{\"signal\":\"mrd[31:0]\"}],[\"wire\",[120,56,0,8,0],{\"signal\":\"mwd[31:0]\"}],[\"wire\",[48,-24,0,-8,0],{\"signal\":\"ia[11:2]\"}],[\"wire\",[48,-16,0,-8,0],{\"signal\":\"1'1\"}],[\"wire\",[48,-8,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,0,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,16,0,-8,0],{\"signal\":\"ma[11:2]\"}],[\"wire\",[48,32,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,40,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,56,0,-8,0],{\"signal\":\"ma[11:2]\"}],[\"wire\",[48,64,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,72,0,-8,0],{\"signal\":\"mwr\"}],[\"wire\",[48,80,0,-8,0],{\"signal\":\"clk\"}],[\"wire\",[-160,56,0,-8,0],{\"signal\":\"clk\"}],[\"wire\",[-160,40,0,-8,0],{\"signal\":\"reset\"}],[\"wire\",[-160,24,0,-8,0],{\"signal\":\"irq\"}],[\"wire\",[-160,8,0,-8,0],{\"signal\":\"mrd[31:0]\"}],[\"wire\",[-160,-8,0,-8,0],{\"signal\":\"id[31:0]\"}],[\"wire\",[-64,-8,0,8,0],{\"signal\":\"ia[31:0]\"}],[\"wire\",[-64,8,0,8,0],{\"signal\":\"ma[31:0]\"}],[\"wire\",[-64,24,0,8,0],{\"signal\":\"moe\"}],[\"wire\",[-64,40,0,8,0],{\"signal\":\"mwr\"}],[\"wire\",[-64,56,0,8,0],{\"signal\":\"mwd[31:0]\"}],[\"wire\",[48,24,0,-8,0],{\"signal\":\"moe\"}],[\"text\",[21,-81,0],{\"text\":\"The contents of main memory have\"}],[\"text\",[22,-70,0],{\"text\":\"been initialized with the binary for\"}],[\"text\",[22,-59,0],{\"text\":\"Beta test program.\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs RESET IRQ\\n.group outputs IA[31:0] ID[31:0] MA[31:0] MOE MWR MRD[31:0] MWD[31:0]\\n\\n.mode gate\\n\\n.cycle CLK=1 tran 5n assert inputs tran 45n CLK=0 tran 49n sample outputs tran 1n\\n\\n10 -------------------------------- -------------------------------- -------------------------------- -L -------------------------------- -------------------------------- //   1: reset\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHLLHHHHLHHHHHLLLLLLLLLLLLHLHL -------------------------------- -L -------------------------------- -------------------------------- //   2: [000] BEQ(R31,0x2c,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   3: [02c] BEQ(R31,0x38,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHLLL HHLHLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   4: [038] CMPEQC(R31,0x0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   5: [03c] BNE(R0,0x48,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHLLL HHLHHLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   6: [048] CMPLEC(R31,0x0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   7: [04c] BNE(R0,0x58,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHLLL HHLHLHLLLLLHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   8: [058] CMPLTC(R31,0x1,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   9: [05c] BNE(R0,0x68,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHLLL HHLHLLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  10: [068] CMPEQC(R31,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  11: [06c] BEQ(R0,0x78,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL HHLHHLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  12: [078] CMPLEC(R31,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  13: [07c] BEQ(R0,0x88,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHLLL HHLHLHLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  14: [088] CMPLTC(R31,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  15: [08c] BEQ(R0,0x98,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  16: [098] ADDC(R31,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  17: [09c] SHLC(R1,0x1f,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL HHLLLHLLLHLLLLLHLLLLLLLLLLLLLLLH LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  18: [0a0] SUBC(R1,0x1,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLHLL HLHLLHLLLHHLLLLHLLLHLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  19: [0a4] OR(R1,R2,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHLLL HHLHLLLLLHHLLLHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  20: [0a8] CMPEQC(R3,0xffff,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  21: [0ac] BNE(R3,0xb8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHLLL HLLHHLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  22: [0b8] CMPLE(R1,R2,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  23: [0bc] BNE(R3,0xc8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHLLL HLLHHLLLLHHLLLHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  24: [0c8] CMPLE(R2,R1,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHHLL LHHHLLHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  25: [0cc] BEQ(R3,0xd8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHLLL HLLLLLLLLLLHHHHHHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  26: [0d8] ADD(R31,R31,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  27: [0dc] BEQ(R0,0xe8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  28: [0e8] ADDC(R31,0x0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  29: [0ec] BEQ(R0,0xf8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHLLL HLLHLLLLLLHLLLLLHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  30: [0f8] CMPEQ(R0,R31,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  31: [0fc] CMPEQC(R1,0x1,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  32: [100] BNE(R0,0x10c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLHHLL HHHHLLLLLHLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  33: [10c] SHLC(R1,0x1,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLLLL HHLHLLLLLLLLLLHLLLLLLLLLLLLLLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  34: [110] CMPEQC(R2,0x2,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  35: [114] BNE(R0,0x120,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLLLL HLLLLLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  36: [120] ADD(R1,R2,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLHLL HHLHLLLLLLLLLLHHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  37: [124] CMPEQC(R3,0x3,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  38: [128] BNE(R0,0x134,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHLHLL HHLLLLLLHLLLLLLHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- //  39: [134] ADDC(R1,0x3,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHLLL HHLHLLLLLLLLLHLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  40: [138] CMPEQC(R4,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  41: [13c] BNE(R0,0x148,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHLLL HHHLHLLLHLHHHHHHHHHHHHHHHHHHHHHH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  42: [148] XORC(R31,0xffff,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHHLL HHHLHLLLHLHLLHLHHHHHHHHHHHHHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- //  43: [14c] XORC(R5,0xfffa,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLLLL HHLHLLLLLLLLLHLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  44: [150] CMPEQC(R5,0x5,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  45: [154] BNE(R0,0x160,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLLLL HLHLLHLLHHLLLHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- //  46: [160] OR(R4,R2,R6)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLHLL HHLHLLLLLLLLLHHLLLLLLLLLLLLLLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  47: [164] CMPEQC(R6,0x6,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  48: [168] BNE(R0,0x174,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHLHLL HHLLLHLLHHHHHHHHLLLLLLLLLLLLLLLH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  49: [174] SUBC(R31,0x1,R7)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHLLL HHHHLHLLHHHLLHHHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  50: [178] SHRC(R7,0x1d,R7)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHHLL HHLHLLLLLLLLLHHHLLLLLLLLLLLLLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  51: [17c] CMPEQC(R7,0x7,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  52: [180] BNE(R0,0x18c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLHHLL HLHHLLLHLLLLLLLHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- //  53: [18c] SHL(R1,R3,R8)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLLLL HHLHLLLLLLLLHLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  54: [190] CMPEQC(R8,0x8,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  55: [194] BNE(R0,0x1a0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLLLL HLLHHLLHLLHLHLLLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  56: [1a0] CMPLE(R8,R8,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLHLL HHLLLHLHLLHLHLLHHHHHHHHHHHHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- //  57: [1a4] SUBC(R9,0xfff8,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHLLL HHLHLLLLLLLLHLLHLLLLLLLLLLLLHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  58: [1a8] CMPEQC(R9,0x9,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  59: [1ac] BNE(R0,0x1b8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHLLL HLHLHLLHLHLLHLLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- //  60: [1b8] XOR(R8,R2,R10)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHHLL HHLHLLLLLLLLHLHLLLLLLLLLLLLLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  61: [1bc] CMPEQC(R10,0xa,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  62: [1c0] BNE(R0,0x1cc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLHHLL HHHLLHLHLHHLLLHHLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- //  63: [1cc] ORC(R3,0x8,R11)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLLLL HHLHLLLLLLLLHLHHLLLLLLLLLLLLHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  64: [1d0] CMPEQC(R11,0xb,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  65: [1d4] BNE(R0,0x1e0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLLLL HLLLLHLHHLLHHHHHLLLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  66: [1e0] SUB(R31,R1,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLHLL HHHHLHLHHLLLHHLLLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  67: [1e4] SHRC(R12,0x1d,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHLLL HLLLLLLHHLLLHHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- //  68: [1e8] ADD(R12,R5,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHHLL HHLHLLLLLLLLHHLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  69: [1ec] CMPEQC(R12,0xc,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  70: [1f0] BNE(R0,0x1fc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHHHLL HLHLLHLHHLHLHLLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- //  71: [1fc] OR(R8,R5,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL HHLHLLLLLLLLHHLHLLLLLLLLLLLLHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  72: [200] CMPEQC(R13,0xd,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  73: [204] BNE(R0,0x210,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLLLL HLLHLHLHHHLLHHLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  74: [210] CMPLT(R12,R13,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLHLL HLLLLLLHHHLLHHLHLHHHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- //  75: [214] ADD(R13,R14,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHLLL HHLHLLLLLLLLHHHLLLLLLLLLLLLLHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  76: [218] CMPEQC(R14,0xe,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  77: [21c] BNE(R0,0x228,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHLLL HHHHLLLHHHHLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  78: [228] SHLC(R1,0x4,R15)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHHLL HLLLLHLHHHHLHHHHLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- //  79: [22c] SUB(R15,R1,R15)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLLLL HHLHLLLLLLLLHHHHLLLLLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  80: [230] CMPEQC(R15,0xf,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  81: [234] BNE(R0,0x240,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLLLL HLHHLHHLLLLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  82: [240] SHR(R15,R2,R16)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLHLL HLLLLLHLLLLHLLLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  83: [244] ADD(R16,R13,R16)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHLLL HHLHLLLLLLLHLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  84: [248] CMPEQC(R16,0x10,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  85: [24c] BNE(R0,0x258,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHLLL HHHLHHHLLLHHLLLLHHHHHHHHHHHHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- //  86: [258] XNORC(R16,0xfffe,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHHLL HHLHLLLLLLLHLLLHLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  87: [25c] CMPEQC(R17,0x11,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  88: [260] BNE(R0,0x26c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLHHLL HLHLLLHLLHLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  89: [26c] AND(R15,R2,R18)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLLLL HHHLLHHLLHLHLLHLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- //  90: [270] ORC(R18,0x10,R18)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLHLL HHLHLLLLLLLHLLHLLLLLLLLLLLLHLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  91: [274] CMPEQC(R18,0x12,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  92: [278] BNE(R0,0x284,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLLHLL HLHHHLHLLHHLHHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  93: [284] SRA(R12,R2,R19)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHLLL HLHLHHHLLHHHLLLLHLLHHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHLHHLL -L -------------------------------- -------------------------------- //  94: [288] XNOR(R16,R19,R19)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHHLL HHHLHHHLLHHHLLHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- //  95: [28c] XNORC(R19,0x0,R19)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLLLL HHLHLLLLLLLHLLHHLLLLLLLLLLLHLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  96: [290] CMPEQC(R19,0x13,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  97: [294] BNE(R0,0x2a0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLLLL HHLLLLHLHLLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- //  98: [2a0] ADDC(R31,0x1f,R20)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLHLL HHHLLLHLHLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- //  99: [2a4] ANDC(R20,0x14,R20)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHLLL HHLHLLLLLLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 100: [2a8] CMPEQC(R20,0x14,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 101: [2ac] BNE(R0,0x2b8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHLLL HHHLLHHLHLHHLHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 102: [2b8] ORC(R20,0x1,R21)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHHLL HHLHLLLLLLLHLHLHLLLLLLLLLLLHLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 103: [2bc] CMPEQC(R21,0x15,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 104: [2c0] BNE(R0,0x2cc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLHHLL HHLLLLHLHHLHLLLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 105: [2cc] ADDC(R17,0x5,R22)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLLLL HHLHLLLLLLLHLHHLLLLLLLLLLLLHLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 106: [2d0] CMPEQC(R22,0x16,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 107: [2d4] BNE(R0,0x2e0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLLLL HLHLHLHLHHHHLHHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 108: [2e0] XOR(R22,R1,R23)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLHLL HHLHLLLLLLLHLHHHLLLLLLLLLLLHLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 109: [2e4] CMPEQC(R23,0x17,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 110: [2e8] BNE(R0,0x2f4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHLHLL HHHLLLHHLLLHLHHHLLLLLLLLHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 111: [2f4] ANDC(R23,0xfc,R24)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHLLL HLLLLLHHLLLHHLLLLLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 112: [2f8] ADD(R24,R4,R24)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHHLL HHLHLLLLLLLHHLLLLLLLLLLLLLLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 113: [2fc] CMPEQC(R24,0x18,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 114: [300] BNE(R0,0x30c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLHHLL HLLLLLHHLLHHLHHHHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 115: [30c] ADD(R23,R24,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLLLL HHLLLLHHLLHHHLLHHHHHHHHHHHHLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 116: [310] ADDC(R25,0xffea,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLHLL HHLHLLLLLLLHHLLHLLLLLLLLLLLHHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 117: [314] CMPEQC(R25,0x19,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 118: [318] BNE(R0,0x324,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLLHLL HLHHLLHHLHLLLLHHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 119: [324] SHL(R3,R3,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHLLL HLHLLHHHLHLLLLHLHHLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 120: [328] OR(R2,R26,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHHLL HHLHLLLLLLLHHLHLLLLLLLLLLLLHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 121: [32c] CMPEQC(R26,0x1a,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 122: [330] BNE(R0,0x33c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHHHLL HLLLLLHHLHHLHHHLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 123: [33c] ADD(R14,R13,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLLLL HHLHLLLLLLLHHLHHLLLLLLLLLLLHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 124: [340] CMPEQC(R27,0x1b,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 125: [344] BNE(R0,0x350,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLLLL HHLLLHHHHLLHLHHHHHHHHHHHHHHHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 126: [350] SUBC(R23,0xfffb,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLHLL HHLHLLLLLLLHHHLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 127: [354] CMPEQC(R28,0x1c,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 128: [358] BNE(R0,0x364,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLLHLL HHLLLHHHHLHHHHHHHHHHHHHHHHHLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 129: [364] SUBC(R31,0xffe3,R29)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHLLL HHLHLLLLLLLHHHLHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 130: [368] CMPEQC(R29,0x1d,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 131: [36c] BNE(R0,0x378,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHLLL HHLLLLHHHHLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 132: [378] ADDC(R31,0x1f,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 133: [37c] SHRC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 134: [380] SHLC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 135: [384] CMPEQC(R30,0x1e,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 136: [388] BNE(R0,0x394,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHLHLL LHHHLLLLLLLLLLLLHHHHHHHHLLLHHHLH -------------------------------- -L -------------------------------- -------------------------------- // 137: [394] BEQ(R0,0xc,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHLLL HHLLLLHHHHHHHHHLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 138: [398] ADDC(R30,0x11,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 139: [39c] BEQ(R31,0x3a8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHLLL HHLLLLHLLLHHHHHHLLLLLLHHHHLLLHLL LLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 140: [3a8] ADDC(R31,0x3c4,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 141: [3ac] SHLC(R1,0x1f,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLLLL HLHLLHHLLLHLLLLHHLLLHLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 142: [3b0] OR(R1,R17,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLHLL LHHLHHHHHLLHLLLHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 143: [3b4] JMP(R17,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL HHHHLLHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHHHLHHHLLLL -L -------------------------------- -------------------------------- // 144: [3c4] SHLC(R28,0x1,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHLLL HHHHLHHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHHHLHHHLLL -L -------------------------------- -------------------------------- // 145: [3c8] SHRC(R28,0x1,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHHLL HHLHLLHLHHHHHHLLLLLLLLHHHLHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 146: [3cc] CMPEQC(R28,0x3b8,R23)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHLLLL LHHHLHHHHHHHLHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 147: [3d0] BNE(R23,0x3dc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHHHLL LHHHHHHHLLLHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 148: [3dc] LDR(0x6e0,R24)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLLLL LHHHHHHHLLHHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 149: [3e0] LDR(0x6e4,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLHLL HLLLLLHHLHLHHLLLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 150: [3e4] ADD(R24,R25,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 151: [3e8] CMPEQC(R26,0xffff,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 152: [3ec] BNE(R27,0x3f8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHLLL HLLLLLHHLHLHHLLLHHLLLLLLLLLLLLLL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL -L -------------------------------- -------------------------------- // 153: [3f8] ADD(R24,R24,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHHLL HLLLLHHHLHLHHLHLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 154: [3fc] SUB(R26,R25,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 155: [400] CMPEQC(R26,0xffff,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 156: [404] BNE(R27,0x410,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLLLL HLLLLLHHLHLHHLLHHHLLHLLLLLLLLLLL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -L -------------------------------- -------------------------------- // 157: [410] ADD(R25,R25,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLHLL HLLLLHHHLHLHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 158: [414] SUB(R26,R24,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHHLLL LHHHLLHHHHHHHLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 159: [418] BEQ(R26,0x424,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLLHLL HHLLLLHLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 160: [424] ADDC(R31,0x1,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHLLL HHLLLHHLLHLHLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 161: [428] SUBC(R17,0x1,R18)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHHLL LHHHLLHHHHHHLLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 162: [42c] BEQ(R18,0x438,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHLLL HHLLLLLHLHHHHHHHLLLLHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 163: [438] ADDC(R31,0xf0f,R11)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHHLL HHLLLLLHHLLHHHHHLHHHHHHHLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 164: [43c] ADDC(R31,0x7f00,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLLLL HLHLLLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 165: [440] AND(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLHLL HHLHLLLHHHLLHHLHLLLLHHHHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 166: [444] CMPEQC(R13,0xf00,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLHLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 167: [448] BNE(R14,0x454,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHLHLL HLHLLHLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 168: [454] OR(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHLLL HHLHLLLHHHLLHHLHLHHHHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 169: [458] CMPEQC(R13,0x7f0f,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 170: [45c] BNE(R14,0x468,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHLLL HLHLHLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 171: [468] XOR(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHHLL HHLHLLLHHHLLHHLHLHHHLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 172: [46c] CMPEQC(R13,0x700f,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHLLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 173: [470] BNE(R14,0x47c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHHHLL HLHLHHLHHLHLHLHHLHHLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHLLLHHHHHHHHLLLL -L -------------------------------- -------------------------------- // 174: [47c] XNOR(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLLLL HHLHLLLHHHLLHHLHHLLLHHHHHHHHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 175: [480] CMPEQC(R13,0x8ff0,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 176: [484] BNE(R14,0x490,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLLLL HHLLLLHHLHHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 177: [490] ADDC(R31,0x1,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLHLL HHHHLLHHHLLHHLHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 178: [494] SHLC(R27,0x20,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHLLL HHLHLLHHHLHHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 179: [498] CMPEQC(R28,0x1,R29)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHHLL LHHHLHHHHHHHHHLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 180: [49c] BNE(R29,0x4a8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHLLL HHHHLLHHHLLHHLHHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 181: [4a8] SHLC(R27,0x1f,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHHLL HHHHHLHHLHLHHHLLLLLLLLLLLLLHLLLH HHHHHHHHHHHHHHHHHHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 182: [4ac] SRAC(R28,0x11,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLLLL HHLHLLHHLLHHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 183: [4b0] CMPEQC(R26,0xc000,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLHLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 184: [4b4] BNE(R25,0x4c0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLLLL HHHHLHHHLHLHHHLLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 185: [4c0] SHRC(R28,0x11,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLHLL HHLHLLHHLLHHHLHLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 186: [4c4] CMPEQC(R26,0x4000,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLHLLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 187: [4c8] BNE(R25,0x4d4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHLHLL HHLLLLHHHHLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 188: [4d4] ADDC(R31,0x0,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 189: [4d8] ADDC(R31,0x0,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -------------------------------- -L -------------------------------- -------------------------------- // 190: [4dc] illop op=0b000000\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 191: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 192: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 193: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 194: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 195: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLHHHLLLLLL -L -------------------------------- -------------------------------- // 196: [4e0] SHLC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL -L -------------------------------- -------------------------------- // 197: [4e4] SHRC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHLLL HHLHLLLLLLLHHHHLLLLLLHLLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 198: [4e8] CMPEQC(R30,0x4e0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 199: [4ec] BNE(R0,0x4f8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHLLL LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 200: [4f8] illop op=0b000001\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 201: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 202: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 203: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 204: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 205: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHHLL LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 206: [4fc] illop op=0b000010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 207: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 208: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 209: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 210: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 211: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLLLL LLLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 212: [500] illop op=0b000011\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 213: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 214: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 215: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 216: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 217: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLHLL LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 218: [504] illop op=0b000100\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 219: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 220: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 221: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 222: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 223: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHLLL LLLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 224: [508] illop op=0b000101\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 225: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 226: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 227: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 228: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 229: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHHLL LLLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 230: [50c] illop op=0b000110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 231: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 232: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 233: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 234: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 235: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLLLL LLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 236: [510] illop op=0b000111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 237: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 238: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 239: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 240: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 241: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLHLL LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 242: [514] illop op=0b001000\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 243: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 244: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 245: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 246: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 247: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHLLL LLHLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 248: [518] illop op=0b001001\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 249: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 250: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 251: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 252: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 253: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHHLL LLHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 254: [51c] illop op=0b001010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 255: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 256: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 257: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 258: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 259: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLLLL LLHLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 260: [520] illop op=0b001011\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 261: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 262: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 263: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 264: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 265: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLHLL LLHHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 266: [524] illop op=0b001100\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 267: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 268: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 269: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 270: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 271: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHLLL LLHHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 272: [528] illop op=0b001101\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 273: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 274: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 275: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 276: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 277: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHHLL LLHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 278: [52c] illop op=0b001110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 279: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 280: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 281: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 282: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 283: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLLLL LLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 284: [530] illop op=0b001111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 285: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 286: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 287: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 288: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 289: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLHLL LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 290: [534] illop op=0b010000\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 291: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 292: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 293: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 294: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 295: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHLLL LHLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 296: [538] illop op=0b010001\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 297: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 298: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 299: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 300: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 301: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHHLL LHLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 302: [53c] illop op=0b010010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 303: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 304: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 305: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 306: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 307: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLLLL LHLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 308: [540] illop op=0b010011\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 309: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 310: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 311: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 312: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 313: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLHLL LHLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 314: [544] illop op=0b010100\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 315: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 316: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 317: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 318: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 319: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHLLL LHLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 320: [548] illop op=0b010101\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 321: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 322: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 323: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 324: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 325: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHHLL LHLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 326: [54c] illop op=0b010110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 327: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 328: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 329: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 330: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 331: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLLLL LHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 332: [550] illop op=0b010111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 333: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 334: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 335: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 336: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 337: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLHLL LHHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 338: [554] illop op=0b011010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 339: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 340: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 341: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 342: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 343: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHLLL LHHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 344: [558] illop op=0b011110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 345: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 346: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 347: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 348: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 349: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHHLL HLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 350: [55c] illop op=0b100111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 351: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 352: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 353: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 354: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 355: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLLLL HLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 356: [560] illop op=0b101111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 357: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 358: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 359: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 360: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 361: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLHLL HHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 362: [564] illop op=0b110111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 363: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 364: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 365: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 366: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 367: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHLLL HHHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 368: [568] illop op=0b111111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 369: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 370: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 371: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 372: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 373: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 374: [56c] CMPEQC(R1,0x1e,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 375: [570] BNE(R0,0x57c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHHHLL HHLLLLLLHLLHHHHHLLLLLHHLHHHLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL -L -------------------------------- -------------------------------- // 376: [57c] ADDC(R31,0x6e8,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLLLL LHHHHHLHLLHHHHHHLLLLLLLLLHLHLHHH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 377: [580] LDR(0x6e0,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLHLL HHHLHLLLLLLLHLLHHHHHHHHHHHHHHHHH LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -L -------------------------------- -------------------------------- // 378: [584] XORC(R9,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 379: [588] ST(R9,0x0,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 380: [58c] ST(R0,0x6ec,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 381: [590] ST(R9,0x8,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 382: [594] ST(R0,0x6f4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHLLL LHHLLLLLHHLLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 383: [598] LD(R4,0x0,R6)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHHLL LHHHHHLLHLHHHHHHLLLLLLLLLHLHLLLH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 384: [59c] LDR(0x6e4,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLLLL HLLHLLLLLLLLLHHLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 385: [5a0] CMPEQ(R6,R9,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 386: [5a4] BNE(R0,0x5b0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLLLL LHHLLLLLHHHHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 387: [5b0] LD(R31,0x6ec,R7)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLHLL HLLHLLLLLLLLLHHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 388: [5b4] CMPEQ(R7,R5,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 389: [5b8] BNE(R0,0x5c4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLLHLL LHHLLLLHLLLLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 390: [5c4] LD(R4,0x8,R8)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHLLL HLLHLLLLLLLLHLLLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 391: [5c8] CMPEQ(R8,R9,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 392: [5cc] BNE(R0,0x5d8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHLLL LHHLLLLHLLHHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 393: [5d8] LD(R31,0x6f4,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHHLL HLLHLLLLLLLLHLLHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 394: [5dc] CMPEQ(R9,R5,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 395: [5e0] BNE(R0,0x5ec,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLHHLL HLLLLLLLLLLHHHHHHLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 396: [5ec] ADD(R31,R20,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 397: [5f0] ADD(R0,R0,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 398: [5f4] ADD(R0,R0,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 399: [5f8] ADD(R0,R0,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 400: [5fc] ADD(R0,R0,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLL -L -------------------------------- -------------------------------- // 401: [600] ADD(R1,R2,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL -L -------------------------------- -------------------------------- // 402: [604] ADD(R3,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL -L -------------------------------- -------------------------------- // 403: [608] ADD(R4,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHHLL HHLHLLLLLLLLLHLHLLLLLLLLHLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 404: [60c] CMPEQC(R5,0xa0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 405: [610] BNE(R0,0x61c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHHHLL LHHHLHLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 406: [61c] BNE(R31,0x620,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 407: [620] ADD(R0,R0,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 408: [624] ADD(R0,R0,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 409: [628] ADD(R0,R0,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 410: [62c] ADD(R0,R0,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLHHLLLHLLLLLLL -L -------------------------------- -------------------------------- // 411: [630] ADD(R1,R2,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHLLHLLHHLLLLLL -L -------------------------------- -------------------------------- // 412: [634] ADD(R3,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHHLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 413: [638] ADD(R4,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHHLL HHLHLLLLLLLLLHLHLLHHLLLHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 414: [63c] CMPEQC(R5,0x3100,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 415: [640] BNE(R0,0x64c,R31)\\n01 HLLLLLLLLLLLLLLLLLLLLHHLLHLLHHLL HHLLLLLLLLLHHHHHLLLLLHHLLHLHLHLL LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL -L -------------------------------- -------------------------------- // 416: [64c] ADDC(R31,0x654,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLHLLLL LHHLHHHHHHHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 417: [650] JMP(R0,R31)\\n01 LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLLH -------------------------------- -L -------------------------------- -------------------------------- // 418: interrupt\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 419: [008] JMP(R30,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHLHHLLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 420: [658] BEQ(R31,0x668,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHLLL HHLHLLLLLLLHHHHLLLLLLHHLLHLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 421: [668] CMPEQC(R30,0x658,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 422: [66c] BNE(R0,0x678,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHLLL HHLLLLLLLLLHHHHHLLLLLHHLHLLLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 423: [678] ADDC(R31,0x68c,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHHLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 424: [67c] ADDC(R31,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLLLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 425: [680] SHLC(R1,0x1f,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLHLL HLHLLHLLLLLLLLLHLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 426: [684] OR(R1,R0,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHLLL LHHLHHLLLLHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 427: [688] JMP(R0,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL LHHHLLLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 428: [68c] BEQ(R31,0x690,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLLLL HHLHLLLLLLHLLLLLLLLLLHHLHLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 429: [690] CMPEQC(R0,0x690,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLHLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 430: [694] BNE(R1,0x6a0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 431: [6a0] LD(R31,0x6e0,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHHH -------------------------------- -L -------------------------------- -------------------------------- // 432: [6a4] BEQ(R0,0x6c4,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 433: [6a8] LD(R31,0x6e4,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHLH -------------------------------- -L -------------------------------- -------------------------------- // 434: [6ac] BEQ(R0,0x6c4,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 435: [6b0] ADDC(R31,0x0,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 436: [6b4] BNE(R0,0x6c4,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 437: [6b8] ADDC(R31,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHHLL HHLLLLLLLHLHHHHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 438: [6bc] ADDC(R31,0x20,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 439: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 440: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 441: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 442: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 443: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 444: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 445: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 446: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 447: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 448: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 449: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 450: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 451: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 452: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 453: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 454: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 455: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 456: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 457: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 458: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 459: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL -L -------------------------------- -------------------------------- // 460: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 461: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 462: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 463: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL -L -------------------------------- -------------------------------- // 464: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 465: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 466: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 467: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 468: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 469: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 470: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 471: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL -L -------------------------------- -------------------------------- // 472: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 473: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 474: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 475: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL -L -------------------------------- -------------------------------- // 476: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 477: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 478: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 479: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL -L -------------------------------- -------------------------------- // 480: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 481: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 482: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 483: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 484: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 485: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 486: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 487: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 488: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 489: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 490: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 491: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 492: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 493: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 494: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 495: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 496: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 497: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 498: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 499: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 500: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 501: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 502: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 503: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 504: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 505: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 506: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 507: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 508: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 509: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 510: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 511: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 512: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 513: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 514: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 515: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 516: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 517: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 518: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 519: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 520: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 521: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 522: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 523: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 524: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 525: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 526: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 527: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 528: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 529: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 530: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 531: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 532: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 533: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 534: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 535: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 536: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 537: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 538: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 539: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 540: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 541: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 542: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 543: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 544: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 545: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 546: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 547: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 548: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 549: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 550: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 551: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 552: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 553: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 554: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 555: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 556: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 557: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 558: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 559: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 560: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 561: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 562: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 563: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 564: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 565: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 566: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHLLL HHLLLLHHHHHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 567: [6d8] ADDC(R31,0x0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHHLL LHHHLLHHHHHHHHHHHHHHHHHHHHHHHHHL -------------------------------- -L -------------------------------- -------------------------------- // 568: [6dc] BEQ(R31,0x6d8,R31)\\n\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\n\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\n\\n.plot clk\\n.plot reset\\n.plot irq\\n.plot X(ia[31:0])\\n.plot X(id[31:0])\\n.plot op(id[31:26])\\n.plot reg(id[20:16])\\n.plot reg(id[15:11])\\n.plot reg(id[25:21])\\n.plot X(ma[31:0])\\n.plot moe\\n.plot X(mrd[31:0])\\n.plot mwr\\n.plot X(mwd[31:0])\\n\"]]},\"/user/checktests\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"/beta/beta\",[-128,40,0],{\"name\":\"beta\"}],[\"memory\",[48,-24,0],{\"name\":\"Main\",\"nports\":\"3\",\"naddr\":\"10\",\"ndata\":\"32\",\"contents\":\"+ 0x73df000a 0x73ff0003 0x6ffe0000 0xc3e00000 0x73fffffe 0xd01e0004 0x73e00002 0x801ef800\\n+ 0x73fffffa 0xc0210001 0x6ffe0000 0x73ff0002 0xc01f0005 0x73fffff5 0xd01f0000 0x77e00002\\n+ 0xc01f0006 0x73fffff1 0xd81f0000 0x77e00002 0xc01f0007 0x73ffffed 0xd41f0001 0x77e00002\\n+ 0xc01f0008 0x73ffffe9 0xd01fffff 0x73e00002 0xc01f0009 0x73ffffe5 0xd81fffff 0x73e00002\\n+ 0xc01f000a 0x73ffffe1 0xd41fffff 0x73e00002 0xc01f000b 0x73ffffdd 0xc03f0001 0xf021001f\\n+ 0xc4410001 0xa4611000 0xd063ffff 0x77e30002 0xc01f000c 0x73ffffd5 0x98611000 0x77e30002\\n+ 0xc01f000d 0x73ffffd1 0x98620800 0x73e30002 0xc01f000e 0x73ffffcd 0x801ff800 0x73e00002\\n+ 0xc01f000f 0x73ffffc9 0xc01f0000 0x73e00002 0xc01f0010 0x73ffffc5 0x9020f800 0xd0010001\\n+ 0x77e00002 0xc01f0012 0x73ffffc0 0xf0410001 0xd0020002 0x77e00002 0xc01f0013 0x73ffffbb\\n+ 0x80611000 0xd0030003 0x77e00002 0xc01f0014 0x73ffffb6 0xc0810003 0xd0040004 0x77e00002\\n+ 0xc01f0015 0x73ffffb1 0xe8bfffff 0xe8a5fffa 0xd0050005 0x77e00002 0xc01f0016 0x73ffffab\\n+ 0xa4c41000 0xd0060006 0x77e00002 0xc01f0017 0x73ffffa6 0xc4ff0001 0xf4e7001d 0xd0070007\\n+ 0x77e00002 0xc01f0018 0x73ffffa0 0xb1011800 0xd0080008 0x77e00002 0xc01f0019 0x73ffff9b\\n+ 0x99284000 0xc529fff8 0xd0090009 0x77e00002 0xc01f001a 0x73ffff95 0xa9481000 0xd00a000a\\n+ 0x77e00002 0xc01f001b 0x73ffff90 0xe5630008 0xd00b000b 0x77e00002 0xc01f001c 0x73ffff8b\\n+ 0x859f0800 0xf58c001d 0x818c2800 0xd00c000c 0x77e00002 0xc01f0018 0x73ffff84 0xa5a82800\\n+ 0xd00d000d 0x77e00002 0xc01f001e 0x73ffff7f 0x95cc6800 0x81cd7000 0xd00e000e 0x77e00002\\n+ 0xc01f001f 0x73ffff79 0xf1e10004 0x85ef0800 0xd00f000f 0x77e00002 0xc01f0020 0x73ffff73\\n+ 0xb60f1000 0x82106800 0xd0100010 0x77e00002 0xc01f0021 0x73ffff6d 0xee30fffe 0xd0110011\\n+ 0x77e00002 0xc01f0022 0x73ffff68 0xa24f1000 0xe6520010 0xd0120012 0x77e00002 0xc01f0023\\n+ 0x73ffff62 0xba6c1000 0xae709800 0xee730000 0xd0130013 0x77e00002 0xc01f0024 0x73ffff5b\\n+ 0xc29f001f 0xe2940014 0xd0140014 0x77e00002 0xc01f0025 0x73ffff55 0xe6b40001 0xd0150015\\n+ 0x77e00002 0xc01f0026 0x73ffff50 0xc2d10005 0xd0160016 0x77e00002 0xc01f0027 0x73ffff4b\\n+ 0xaaf60800 0xd0170017 0x77e00002 0xc01f0028 0x73ffff46 0xe31700fc 0x83182000 0xd0180018\\n+ 0x77e00002 0xc01f0029 0x73ffff40 0x8337c000 0xc339ffea 0xd0190019 0x77e00002 0xc01f002a\\n+ 0x73ffff3a 0xb3431800 0xa742d000 0xd01a001a 0x77e00002 0xc01f002b 0x73ffff34 0x836e6800\\n+ 0xd01b001b 0x77e00002 0xc01f002c 0x73ffff2f 0xc797fffb 0xd01c001c 0x77e00002 0xc01f002d\\n+ 0x73ffff2a 0xc7bfffe3 0xd01d001d 0x77e00002 0xc01f002e 0x73ffff25 0xc3df001f 0xf7de0001\\n+ 0xf3de0001 0xd01e001e 0x77e00002 0xc01f002f 0x73ffff1e 0x7000ff1d 0xc3fe0011 0x73ff0002\\n+ 0xc01f0030 0x73ffff19 0xc23f03c4 0xf021001f 0xa6218800 0x6f910000 0x77ff0002 0xc01f0032\\n+ 0x73ffff12 0xf39c0001 0xf79c0001 0xd2fc03b8 0x77f70002 0xc01f0033 0x73ffff0c 0x7f1f00c0\\n+ 0x7f3f00c0 0x8358c800 0xd37affff 0x77fb0002 0xc01f0034 0x73ffff05 0x8358c000 0x875ac800\\n+ 0xd37affff 0x77fb0002 0xc01f0035 0x73fffeff 0x8359c800 0x875ac000 0x73fa0002 0xc01f0036\\n+ 0x73fffefa 0xc23f0001 0xc6510001 0x73f20002 0xc01f0037 0x73fffef5 0xc17f0f0f 0xc19f7f00\\n+ 0xa1ab6000 0xd1cd0f00 0x77ee0002 0xc01f0038 0x73fffeee 0xa5ab6000 0xd1cd7f0f 0x77ee0002\\n+ 0xc01f0039 0x73fffee9 0xa9ab6000 0xd1cd700f 0x77ee0002 0xc01f003a 0x73fffee4 0xadab6000\\n+ 0xd1cd8ff0 0x77ee0002 0xc01f003b 0x73fffedf 0xc37f0001 0xf39b0020 0xd3bc0001 0x77fd0002\\n+ 0xc01f003c 0x73fffed9 0xf39b001f 0xfb5c0011 0xd33ac000 0x77f90002 0xc01f003d 0x73fffed3\\n+ 0xf75c0011 0xd33a4000 0x77f90002 0xc01f003e 0x73fffece 0xc3df0000 0xc03f0000 0x00000014\\n+ 0xf3de0001 0xf7de0001 0xd01e04e0 0x77e00002 0xc01f003f 0x73fffec5 0x04000000 0x08000000\\n+ 0x0c000000 0x10000000 0x14000000 0x18000000 0x1c000000 0x20000000 0x24000000 0x28000000\\n+ 0x2c000000 0x30000000 0x34000000 0x38000000 0x3c000000 0x40000000 0x44000000 0x48000000\\n+ 0x4c000000 0x50000000 0x54000000 0x58000000 0x5c000000 0x68000000 0x78000000 0x9c000000\\n+ 0xbc000000 0xdc000000 0xfc000000 0xd001001e 0x77e00002 0xc01f0040 0x73fffea4 0xc09f06e8\\n+ 0x7d3f0057 0xe809ffff 0x65240000 0x641f06ec 0x65240008 0x641f06f4 0x60c40000 0x7cbf0051\\n+ 0x90064800 0x77e00002 0xc01f0041 0x73fffe97 0x60ff06ec 0x90072800 0x77e00002 0xc01f0042\\n+ 0x73fffe92 0x61040008 0x90084800 0x77e00002 0xc01f0043 0x73fffe8d 0x613f06f4 0x90092800\\n+ 0x77e00002 0xc01f0044 0x73fffe88 0x801fa000 0x80200000 0x80400000 0x80600000 0x80800000\\n+ 0x80a11000 0x80a32800 0x80a42800 0xd00500a0 0x77e00002 0xc01f0045 0x73fffe7c 0x741f0000\\n+ 0x80200000 0x80400000 0x80600000 0x80800000 0x80a11000 0x80a32800 0x80a42800 0xd0053100\\n+ 0x77e00002 0xc01f0046 0x73fffe70 0xc01f0654 0x6fe00000 0x73ff0001 0x73ff0003 0x77ff0002\\n+ 0xc01f0047 0x73fffe69 0xd01e0658 0x77e00002 0xc01f0048 0x73fffe65 0xc01f068c 0xc03f0001\\n+ 0xf021001f 0xa4010000 0x6c200000 0x701f0000 0xd0200690 0x77e10002 0xc01f0049 0x73fffe5b\\n+ 0x601f06e0 0x73e00007 0x601f06e4 0x73e00005 0xc01f0000 0x77e00003 0xc03f0001 0xc05f0020\\n+ 0x77e10002 0xc01f004a 0x73fffe50 0xf0210001 0xc4420001 0x77e2fffa 0xc3ff0000 0x73fffffe\\n+ 0xaaaaaaaa 0x55555555 0x00000000 0x00000000 0x00000000 0x00000000\\n\"}],[\"wire\",[120,-24,0,8,0],{\"signal\":\"id[31:0]\"}],[\"wire\",[120,16,0,8,0],{\"signal\":\"mrd[31:0]\"}],[\"wire\",[120,56,0,8,0],{\"signal\":\"mwd[31:0]\"}],[\"wire\",[48,-24,0,-8,0],{\"signal\":\"ia[11:2]\"}],[\"wire\",[48,-16,0,-8,0],{\"signal\":\"1'1\"}],[\"wire\",[48,-8,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,0,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,16,0,-8,0],{\"signal\":\"ma[11:2]\"}],[\"wire\",[48,32,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,40,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,56,0,-8,0],{\"signal\":\"ma[11:2]\"}],[\"wire\",[48,64,0,-8,0],{\"signal\":\"0'1\"}],[\"wire\",[48,72,0,-8,0],{\"signal\":\"mwr\"}],[\"wire\",[48,80,0,-8,0],{\"signal\":\"clk\"}],[\"wire\",[-160,56,0,-8,0],{\"signal\":\"clk\"}],[\"wire\",[-160,40,0,-8,0],{\"signal\":\"reset\"}],[\"wire\",[-160,24,0,-8,0],{\"signal\":\"irq\"}],[\"wire\",[-160,8,0,-8,0],{\"signal\":\"mrd[31:0]\"}],[\"wire\",[-160,-8,0,-8,0],{\"signal\":\"id[31:0]\"}],[\"wire\",[-64,-8,0,8,0],{\"signal\":\"ia[31:0]\"}],[\"wire\",[-64,8,0,8,0],{\"signal\":\"ma[31:0]\"}],[\"wire\",[-64,24,0,8,0],{\"signal\":\"moe\"}],[\"wire\",[-64,40,0,8,0],{\"signal\":\"mwr\"}],[\"wire\",[-64,56,0,8,0],{\"signal\":\"mwd[31:0]\"}],[\"wire\",[48,24,0,-8,0],{\"signal\":\"moe\"}],[\"text\",[21,-81,0],{\"text\":\"The contents of main memory have\"}],[\"text\",[22,-70,0],{\"text\":\"been initialized with the binary for\"}],[\"text\",[22,-59,0],{\"text\":\"Beta test program.\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs RESET IRQ\\n.group outputs IA[31:0] ID[31:0] MA[31:0] MOE MWR MRD[31:0] MWD[31:0]\\n\\n.mode gate\\n\\n.cycle CLK=1 tran 5n assert inputs tran 45n CLK=0 tran 49n sample outputs tran 1n\\n\\n10 -------------------------------- -------------------------------- -------------------------------- -L -------------------------------- -------------------------------- //   1: reset\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHLLHHHHLHHHHHLLLLLLLLLLLLHLHL -------------------------------- -L -------------------------------- -------------------------------- //   2: [000] BEQ(R31,0x2c,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   3: [02c] BEQ(R31,0x38,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHLLL HHLHLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   4: [038] CMPEQC(R31,0x0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   5: [03c] BNE(R0,0x48,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHLLL HHLHHLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   6: [048] CMPLEC(R31,0x0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   7: [04c] BNE(R0,0x58,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHLLL HHLHLHLLLLLHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   8: [058] CMPLTC(R31,0x1,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   9: [05c] BNE(R0,0x68,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHLLL HHLHLLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  10: [068] CMPEQC(R31,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  11: [06c] BEQ(R0,0x78,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL HHLHHLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  12: [078] CMPLEC(R31,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  13: [07c] BEQ(R0,0x88,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHLLL HHLHLHLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  14: [088] CMPLTC(R31,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  15: [08c] BEQ(R0,0x98,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  16: [098] ADDC(R31,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  17: [09c] SHLC(R1,0x1f,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL HHLLLHLLLHLLLLLHLLLLLLLLLLLLLLLH LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  18: [0a0] SUBC(R1,0x1,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLHLL HLHLLHLLLHHLLLLHLLLHLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  19: [0a4] OR(R1,R2,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHLLL HHLHLLLLLHHLLLHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  20: [0a8] CMPEQC(R3,0xffff,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  21: [0ac] BNE(R3,0xb8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHLLL HLLHHLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  22: [0b8] CMPLE(R1,R2,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  23: [0bc] BNE(R3,0xc8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHLLL HLLHHLLLLHHLLLHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  24: [0c8] CMPLE(R2,R1,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHHLL LHHHLLHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  25: [0cc] BEQ(R3,0xd8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHLLL HLLLLLLLLLLHHHHHHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  26: [0d8] ADD(R31,R31,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  27: [0dc] BEQ(R0,0xe8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  28: [0e8] ADDC(R31,0x0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  29: [0ec] BEQ(R0,0xf8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHLLL HLLHLLLLLLHLLLLLHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  30: [0f8] CMPEQ(R0,R31,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  31: [0fc] CMPEQC(R1,0x1,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  32: [100] BNE(R0,0x10c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLHHLL HHHHLLLLLHLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  33: [10c] SHLC(R1,0x1,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLLLL HHLHLLLLLLLLLLHLLLLLLLLLLLLLLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  34: [110] CMPEQC(R2,0x2,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  35: [114] BNE(R0,0x120,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLLLL HLLLLLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  36: [120] ADD(R1,R2,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLHLL HHLHLLLLLLLLLLHHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  37: [124] CMPEQC(R3,0x3,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  38: [128] BNE(R0,0x134,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHLHLL HHLLLLLLHLLLLLLHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- //  39: [134] ADDC(R1,0x3,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHLLL HHLHLLLLLLLLLHLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  40: [138] CMPEQC(R4,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  41: [13c] BNE(R0,0x148,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHLLL HHHLHLLLHLHHHHHHHHHHHHHHHHHHHHHH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  42: [148] XORC(R31,0xffff,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHHLL HHHLHLLLHLHLLHLHHHHHHHHHHHHHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- //  43: [14c] XORC(R5,0xfffa,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLLLL HHLHLLLLLLLLLHLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  44: [150] CMPEQC(R5,0x5,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  45: [154] BNE(R0,0x160,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLLLL HLHLLHLLHHLLLHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- //  46: [160] OR(R4,R2,R6)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLHLL HHLHLLLLLLLLLHHLLLLLLLLLLLLLLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  47: [164] CMPEQC(R6,0x6,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  48: [168] BNE(R0,0x174,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHLHLL HHLLLHLLHHHHHHHHLLLLLLLLLLLLLLLH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  49: [174] SUBC(R31,0x1,R7)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHLLL HHHHLHLLHHHLLHHHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  50: [178] SHRC(R7,0x1d,R7)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHHLL HHLHLLLLLLLLLHHHLLLLLLLLLLLLLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  51: [17c] CMPEQC(R7,0x7,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  52: [180] BNE(R0,0x18c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLHHLL HLHHLLLHLLLLLLLHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- //  53: [18c] SHL(R1,R3,R8)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLLLL HHLHLLLLLLLLHLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  54: [190] CMPEQC(R8,0x8,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  55: [194] BNE(R0,0x1a0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLLLL HLLHHLLHLLHLHLLLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  56: [1a0] CMPLE(R8,R8,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLHLL HHLLLHLHLLHLHLLHHHHHHHHHHHHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- //  57: [1a4] SUBC(R9,0xfff8,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHLLL HHLHLLLLLLLLHLLHLLLLLLLLLLLLHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  58: [1a8] CMPEQC(R9,0x9,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  59: [1ac] BNE(R0,0x1b8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHLLL HLHLHLLHLHLLHLLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- //  60: [1b8] XOR(R8,R2,R10)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHHLL HHLHLLLLLLLLHLHLLLLLLLLLLLLLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  61: [1bc] CMPEQC(R10,0xa,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  62: [1c0] BNE(R0,0x1cc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLHHLL HHHLLHLHLHHLLLHHLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- //  63: [1cc] ORC(R3,0x8,R11)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLLLL HHLHLLLLLLLLHLHHLLLLLLLLLLLLHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  64: [1d0] CMPEQC(R11,0xb,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  65: [1d4] BNE(R0,0x1e0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLLLL HLLLLHLHHLLHHHHHLLLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  66: [1e0] SUB(R31,R1,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLHLL HHHHLHLHHLLLHHLLLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  67: [1e4] SHRC(R12,0x1d,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHLLL HLLLLLLHHLLLHHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- //  68: [1e8] ADD(R12,R5,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHHLL HHLHLLLLLLLLHHLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  69: [1ec] CMPEQC(R12,0xc,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  70: [1f0] BNE(R0,0x1fc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHHHLL HLHLLHLHHLHLHLLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- //  71: [1fc] OR(R8,R5,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL HHLHLLLLLLLLHHLHLLLLLLLLLLLLHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  72: [200] CMPEQC(R13,0xd,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  73: [204] BNE(R0,0x210,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLLLL HLLHLHLHHHLLHHLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  74: [210] CMPLT(R12,R13,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLHLL HLLLLLLHHHLLHHLHLHHHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- //  75: [214] ADD(R13,R14,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHLLL HHLHLLLLLLLLHHHLLLLLLLLLLLLLHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  76: [218] CMPEQC(R14,0xe,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  77: [21c] BNE(R0,0x228,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHLLL HHHHLLLHHHHLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  78: [228] SHLC(R1,0x4,R15)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHHLL HLLLLHLHHHHLHHHHLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- //  79: [22c] SUB(R15,R1,R15)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLLLL HHLHLLLLLLLLHHHHLLLLLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  80: [230] CMPEQC(R15,0xf,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  81: [234] BNE(R0,0x240,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLLLL HLHHLHHLLLLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  82: [240] SHR(R15,R2,R16)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLHLL HLLLLLHLLLLHLLLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  83: [244] ADD(R16,R13,R16)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHLLL HHLHLLLLLLLHLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  84: [248] CMPEQC(R16,0x10,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  85: [24c] BNE(R0,0x258,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHLLL HHHLHHHLLLHHLLLLHHHHHHHHHHHHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- //  86: [258] XNORC(R16,0xfffe,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHHLL HHLHLLLLLLLHLLLHLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  87: [25c] CMPEQC(R17,0x11,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  88: [260] BNE(R0,0x26c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLHHLL HLHLLLHLLHLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  89: [26c] AND(R15,R2,R18)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLLLL HHHLLHHLLHLHLLHLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- //  90: [270] ORC(R18,0x10,R18)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLHLL HHLHLLLLLLLHLLHLLLLLLLLLLLLHLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  91: [274] CMPEQC(R18,0x12,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  92: [278] BNE(R0,0x284,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLLHLL HLHHHLHLLHHLHHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  93: [284] SRA(R12,R2,R19)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHLLL HLHLHHHLLHHHLLLLHLLHHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHLHHLL -L -------------------------------- -------------------------------- //  94: [288] XNOR(R16,R19,R19)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHHLL HHHLHHHLLHHHLLHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- //  95: [28c] XNORC(R19,0x0,R19)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLLLL HHLHLLLLLLLHLLHHLLLLLLLLLLLHLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  96: [290] CMPEQC(R19,0x13,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  97: [294] BNE(R0,0x2a0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLLLL HHLLLLHLHLLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- //  98: [2a0] ADDC(R31,0x1f,R20)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLHLL HHHLLLHLHLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- //  99: [2a4] ANDC(R20,0x14,R20)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHLLL HHLHLLLLLLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 100: [2a8] CMPEQC(R20,0x14,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 101: [2ac] BNE(R0,0x2b8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHLLL HHHLLHHLHLHHLHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 102: [2b8] ORC(R20,0x1,R21)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHHLL HHLHLLLLLLLHLHLHLLLLLLLLLLLHLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 103: [2bc] CMPEQC(R21,0x15,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 104: [2c0] BNE(R0,0x2cc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLHHLL HHLLLLHLHHLHLLLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 105: [2cc] ADDC(R17,0x5,R22)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLLLL HHLHLLLLLLLHLHHLLLLLLLLLLLLHLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 106: [2d0] CMPEQC(R22,0x16,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 107: [2d4] BNE(R0,0x2e0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLLLL HLHLHLHLHHHHLHHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 108: [2e0] XOR(R22,R1,R23)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLHLL HHLHLLLLLLLHLHHHLLLLLLLLLLLHLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 109: [2e4] CMPEQC(R23,0x17,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 110: [2e8] BNE(R0,0x2f4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHLHLL HHHLLLHHLLLHLHHHLLLLLLLLHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 111: [2f4] ANDC(R23,0xfc,R24)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHLLL HLLLLLHHLLLHHLLLLLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 112: [2f8] ADD(R24,R4,R24)\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHHLL HHLHLLLLLLLHHLLLLLLLLLLLLLLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 113: [2fc] CMPEQC(R24,0x18,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 114: [300] BNE(R0,0x30c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLHHLL HLLLLLHHLLHHLHHHHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 115: [30c] ADD(R23,R24,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLLLL HHLLLLHHLLHHHLLHHHHHHHHHHHHLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 116: [310] ADDC(R25,0xffea,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLHLL HHLHLLLLLLLHHLLHLLLLLLLLLLLHHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 117: [314] CMPEQC(R25,0x19,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 118: [318] BNE(R0,0x324,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLLHLL HLHHLLHHLHLLLLHHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 119: [324] SHL(R3,R3,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHLLL HLHLLHHHLHLLLLHLHHLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 120: [328] OR(R2,R26,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHHLL HHLHLLLLLLLHHLHLLLLLLLLLLLLHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 121: [32c] CMPEQC(R26,0x1a,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 122: [330] BNE(R0,0x33c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHHHLL HLLLLLHHLHHLHHHLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 123: [33c] ADD(R14,R13,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLLLL HHLHLLLLLLLHHLHHLLLLLLLLLLLHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 124: [340] CMPEQC(R27,0x1b,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 125: [344] BNE(R0,0x350,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLLLL HHLLLHHHHLLHLHHHHHHHHHHHHHHHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 126: [350] SUBC(R23,0xfffb,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLHLL HHLHLLLLLLLHHHLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 127: [354] CMPEQC(R28,0x1c,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 128: [358] BNE(R0,0x364,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLLHLL HHLLLHHHHLHHHHHHHHHHHHHHHHHLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 129: [364] SUBC(R31,0xffe3,R29)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHLLL HHLHLLLLLLLHHHLHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 130: [368] CMPEQC(R29,0x1d,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 131: [36c] BNE(R0,0x378,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHLLL HHLLLLHHHHLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 132: [378] ADDC(R31,0x1f,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 133: [37c] SHRC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 134: [380] SHLC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 135: [384] CMPEQC(R30,0x1e,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 136: [388] BNE(R0,0x394,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHLHLL LHHHLLLLLLLLLLLLHHHHHHHHLLLHHHLH -------------------------------- -L -------------------------------- -------------------------------- // 137: [394] BEQ(R0,0xc,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHLLL HHLLLLHHHHHHHHHLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 138: [398] ADDC(R30,0x11,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 139: [39c] BEQ(R31,0x3a8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHLLL HHLLLLHLLLHHHHHHLLLLLLHHHHLLLHLL LLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 140: [3a8] ADDC(R31,0x3c4,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 141: [3ac] SHLC(R1,0x1f,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLLLL HLHLLHHLLLHLLLLHHLLLHLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 142: [3b0] OR(R1,R17,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLHLL LHHLHHHHHLLHLLLHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 143: [3b4] JMP(R17,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL HHHHLLHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHHHLHHHLLLL -L -------------------------------- -------------------------------- // 144: [3c4] SHLC(R28,0x1,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHLLL HHHHLHHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHHHLHHHLLL -L -------------------------------- -------------------------------- // 145: [3c8] SHRC(R28,0x1,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHHLL HHLHLLHLHHHHHHLLLLLLLLHHHLHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 146: [3cc] CMPEQC(R28,0x3b8,R23)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHLLLL LHHHLHHHHHHHLHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 147: [3d0] BNE(R23,0x3dc,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHHHLL LHHHHHHHLLLHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 148: [3dc] LDR(0x6e0,R24)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLLLL LHHHHHHHLLHHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 149: [3e0] LDR(0x6e4,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLHLL HLLLLLHHLHLHHLLLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 150: [3e4] ADD(R24,R25,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 151: [3e8] CMPEQC(R26,0xffff,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 152: [3ec] BNE(R27,0x3f8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHLLL HLLLLLHHLHLHHLLLHHLLLLLLLLLLLLLL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL -L -------------------------------- -------------------------------- // 153: [3f8] ADD(R24,R24,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHHLL HLLLLHHHLHLHHLHLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 154: [3fc] SUB(R26,R25,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 155: [400] CMPEQC(R26,0xffff,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 156: [404] BNE(R27,0x410,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLLLL HLLLLLHHLHLHHLLHHHLLHLLLLLLLLLLL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -L -------------------------------- -------------------------------- // 157: [410] ADD(R25,R25,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLHLL HLLLLHHHLHLHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 158: [414] SUB(R26,R24,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHHLLL LHHHLLHHHHHHHLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 159: [418] BEQ(R26,0x424,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLLHLL HHLLLLHLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 160: [424] ADDC(R31,0x1,R17)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHLLL HHLLLHHLLHLHLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 161: [428] SUBC(R17,0x1,R18)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHHLL LHHHLLHHHHHHLLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 162: [42c] BEQ(R18,0x438,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHLLL HHLLLLLHLHHHHHHHLLLLHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 163: [438] ADDC(R31,0xf0f,R11)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHHLL HHLLLLLHHLLHHHHHLHHHHHHHLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 164: [43c] ADDC(R31,0x7f00,R12)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLLLL HLHLLLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 165: [440] AND(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLHLL HHLHLLLHHHLLHHLHLLLLHHHHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 166: [444] CMPEQC(R13,0xf00,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLHLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 167: [448] BNE(R14,0x454,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHLHLL HLHLLHLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 168: [454] OR(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHLLL HHLHLLLHHHLLHHLHLHHHHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 169: [458] CMPEQC(R13,0x7f0f,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 170: [45c] BNE(R14,0x468,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHLLL HLHLHLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 171: [468] XOR(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHHLL HHLHLLLHHHLLHHLHLHHHLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 172: [46c] CMPEQC(R13,0x700f,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHLLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 173: [470] BNE(R14,0x47c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHHHLL HLHLHHLHHLHLHLHHLHHLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHLLLHHHHHHHHLLLL -L -------------------------------- -------------------------------- // 174: [47c] XNOR(R11,R12,R13)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLLLL HHLHLLLHHHLLHHLHHLLLHHHHHHHHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 175: [480] CMPEQC(R13,0x8ff0,R14)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 176: [484] BNE(R14,0x490,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLLLL HHLLLLHHLHHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 177: [490] ADDC(R31,0x1,R27)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLHLL HHHHLLHHHLLHHLHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 178: [494] SHLC(R27,0x20,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHLLL HHLHLLHHHLHHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 179: [498] CMPEQC(R28,0x1,R29)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHHLL LHHHLHHHHHHHHHLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 180: [49c] BNE(R29,0x4a8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHLLL HHHHLLHHHLLHHLHHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 181: [4a8] SHLC(R27,0x1f,R28)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHHLL HHHHHLHHLHLHHHLLLLLLLLLLLLLHLLLH HHHHHHHHHHHHHHHHHHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 182: [4ac] SRAC(R28,0x11,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLLLL HHLHLLHHLLHHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 183: [4b0] CMPEQC(R26,0xc000,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLHLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 184: [4b4] BNE(R25,0x4c0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLLLL HHHHLHHHLHLHHHLLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 185: [4c0] SHRC(R28,0x11,R26)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLHLL HHLHLLHHLLHHHLHLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 186: [4c4] CMPEQC(R26,0x4000,R25)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLHLLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 187: [4c8] BNE(R25,0x4d4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHLHLL HHLLLLHHHHLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 188: [4d4] ADDC(R31,0x0,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 189: [4d8] ADDC(R31,0x0,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -------------------------------- -L -------------------------------- -------------------------------- // 190: [4dc] illop op=0b000000\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 191: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 192: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 193: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 194: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 195: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLHHHLLLLLL -L -------------------------------- -------------------------------- // 196: [4e0] SHLC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL -L -------------------------------- -------------------------------- // 197: [4e4] SHRC(R30,0x1,R30)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHLLL HHLHLLLLLLLHHHHLLLLLLHLLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 198: [4e8] CMPEQC(R30,0x4e0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 199: [4ec] BNE(R0,0x4f8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHLLL LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 200: [4f8] illop op=0b000001\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 201: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 202: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 203: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 204: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 205: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHHLL LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 206: [4fc] illop op=0b000010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 207: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 208: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 209: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 210: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 211: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLLLL LLLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 212: [500] illop op=0b000011\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 213: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 214: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 215: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 216: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 217: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLHLL LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 218: [504] illop op=0b000100\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 219: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 220: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 221: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 222: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 223: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHLLL LLLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 224: [508] illop op=0b000101\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 225: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 226: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 227: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 228: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 229: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHHLL LLLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 230: [50c] illop op=0b000110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 231: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 232: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 233: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 234: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 235: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLLLL LLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 236: [510] illop op=0b000111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 237: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 238: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 239: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 240: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 241: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLHLL LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 242: [514] illop op=0b001000\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 243: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 244: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 245: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 246: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 247: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHLLL LLHLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 248: [518] illop op=0b001001\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 249: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 250: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 251: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 252: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 253: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHHLL LLHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 254: [51c] illop op=0b001010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 255: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 256: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 257: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 258: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 259: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLLLL LLHLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 260: [520] illop op=0b001011\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 261: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 262: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 263: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 264: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 265: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLHLL LLHHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 266: [524] illop op=0b001100\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 267: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 268: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 269: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 270: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 271: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHLLL LLHHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 272: [528] illop op=0b001101\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 273: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 274: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 275: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 276: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 277: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHHLL LLHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 278: [52c] illop op=0b001110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 279: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 280: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 281: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 282: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 283: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLLLL LLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 284: [530] illop op=0b001111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 285: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 286: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 287: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 288: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 289: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLHLL LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 290: [534] illop op=0b010000\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 291: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 292: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 293: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 294: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 295: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHLLL LHLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 296: [538] illop op=0b010001\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 297: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 298: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 299: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 300: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 301: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHHLL LHLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 302: [53c] illop op=0b010010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 303: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 304: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 305: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 306: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 307: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLLLL LHLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 308: [540] illop op=0b010011\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 309: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 310: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 311: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 312: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 313: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLHLL LHLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 314: [544] illop op=0b010100\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 315: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 316: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 317: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 318: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 319: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHLLL LHLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 320: [548] illop op=0b010101\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 321: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 322: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 323: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 324: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 325: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHHLL LHLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 326: [54c] illop op=0b010110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 327: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 328: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 329: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 330: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 331: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLLLL LHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 332: [550] illop op=0b010111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 333: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 334: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 335: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 336: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 337: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLHLL LHHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 338: [554] illop op=0b011010\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 339: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 340: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 341: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 342: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 343: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHLLL LHHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 344: [558] illop op=0b011110\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 345: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 346: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 347: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 348: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 349: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHHLL HLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 350: [55c] illop op=0b100111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 351: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 352: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 353: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 354: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 355: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLLLL HLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 356: [560] illop op=0b101111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 357: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 358: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 359: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 360: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 361: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLHLL HHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 362: [564] illop op=0b110111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 363: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 364: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 365: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 366: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 367: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHLLL HHHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 368: [568] illop op=0b111111\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 369: [004] BEQ(R31,0x14,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 370: [014] CMPEQC(R30,0x4,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 371: [018] BEQ(R0,0x24,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 372: [024] ADDC(R1,0x1,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 373: [028] JMP(R30,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 374: [56c] CMPEQC(R1,0x1e,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 375: [570] BNE(R0,0x57c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHHHLL HHLLLLLLHLLHHHHHLLLLLHHLHHHLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL -L -------------------------------- -------------------------------- // 376: [57c] ADDC(R31,0x6e8,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLLLL LHHHHHLHLLHHHHHHLLLLLLLLLHLHLHHH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 377: [580] LDR(0x6e0,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLHLL HHHLHLLLLLLLHLLHHHHHHHHHHHHHHHHH LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -L -------------------------------- -------------------------------- // 378: [584] XORC(R9,0xffff,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 379: [588] ST(R9,0x0,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 380: [58c] ST(R0,0x6ec,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 381: [590] ST(R9,0x8,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 382: [594] ST(R0,0x6f4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHLLL LHHLLLLLHHLLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 383: [598] LD(R4,0x0,R6)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHHLL LHHHHHLLHLHHHHHHLLLLLLLLLHLHLLLH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 384: [59c] LDR(0x6e4,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLLLL HLLHLLLLLLLLLHHLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 385: [5a0] CMPEQ(R6,R9,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 386: [5a4] BNE(R0,0x5b0,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLLLL LHHLLLLLHHHHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 387: [5b0] LD(R31,0x6ec,R7)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLHLL HLLHLLLLLLLLLHHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 388: [5b4] CMPEQ(R7,R5,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 389: [5b8] BNE(R0,0x5c4,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLLHLL LHHLLLLHLLLLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 390: [5c4] LD(R4,0x8,R8)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHLLL HLLHLLLLLLLLHLLLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 391: [5c8] CMPEQ(R8,R9,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 392: [5cc] BNE(R0,0x5d8,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHLLL LHHLLLLHLLHHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 393: [5d8] LD(R31,0x6f4,R9)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHHLL HLLHLLLLLLLLHLLHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 394: [5dc] CMPEQ(R9,R5,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 395: [5e0] BNE(R0,0x5ec,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLHHLL HLLLLLLLLLLHHHHHHLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 396: [5ec] ADD(R31,R20,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 397: [5f0] ADD(R0,R0,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 398: [5f4] ADD(R0,R0,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 399: [5f8] ADD(R0,R0,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 400: [5fc] ADD(R0,R0,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLL -L -------------------------------- -------------------------------- // 401: [600] ADD(R1,R2,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL -L -------------------------------- -------------------------------- // 402: [604] ADD(R3,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL -L -------------------------------- -------------------------------- // 403: [608] ADD(R4,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHHLL HHLHLLLLLLLLLHLHLLLLLLLLHLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 404: [60c] CMPEQC(R5,0xa0,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 405: [610] BNE(R0,0x61c,R31)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHHHLL LHHHLHLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 406: [61c] BNE(R31,0x620,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 407: [620] ADD(R0,R0,R1)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 408: [624] ADD(R0,R0,R2)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 409: [628] ADD(R0,R0,R3)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 410: [62c] ADD(R0,R0,R4)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLHHLLLHLLLLLLL -L -------------------------------- -------------------------------- // 411: [630] ADD(R1,R2,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHLLHLLHHLLLLLL -L -------------------------------- -------------------------------- // 412: [634] ADD(R3,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHHLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 413: [638] ADD(R4,R5,R5)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHHLL HHLHLLLLLLLLLHLHLLHHLLLHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 414: [63c] CMPEQC(R5,0x3100,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 415: [640] BNE(R0,0x64c,R31)\\n01 HLLLLLLLLLLLLLLLLLLLLHHLLHLLHHLL HHLLLLLLLLLHHHHHLLLLLHHLLHLHLHLL LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL -L -------------------------------- -------------------------------- // 416: [64c] ADDC(R31,0x654,R0)\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLHLLLL LHHLHHHHHHHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 417: [650] JMP(R0,R31)\\n01 LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLLH -------------------------------- -L -------------------------------- -------------------------------- // 418: interrupt\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 419: [008] JMP(R30,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHLHHLLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 420: [658] BEQ(R31,0x668,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHLLL HHLHLLLLLLLHHHHLLLLLLHHLLHLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 421: [668] CMPEQC(R30,0x658,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 422: [66c] BNE(R0,0x678,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHLLL HHLLLLLLLLLHHHHHLLLLLHHLHLLLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 423: [678] ADDC(R31,0x68c,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHHLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 424: [67c] ADDC(R31,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLLLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 425: [680] SHLC(R1,0x1f,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLHLL HLHLLHLLLLLLLLLHLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 426: [684] OR(R1,R0,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHLLL LHHLHHLLLLHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 427: [688] JMP(R0,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL LHHHLLLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 428: [68c] BEQ(R31,0x690,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLLLL HHLHLLLLLLHLLLLLLLLLLHHLHLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 429: [690] CMPEQC(R0,0x690,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLHLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 430: [694] BNE(R1,0x6a0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 431: [6a0] LD(R31,0x6e0,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHHH -------------------------------- -L -------------------------------- -------------------------------- // 432: [6a4] BEQ(R0,0x6c4,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 433: [6a8] LD(R31,0x6e4,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHLH -------------------------------- -L -------------------------------- -------------------------------- // 434: [6ac] BEQ(R0,0x6c4,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 435: [6b0] ADDC(R31,0x0,R0)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 436: [6b4] BNE(R0,0x6c4,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 437: [6b8] ADDC(R31,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHHLL HHLLLLLLLHLHHHHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 438: [6bc] ADDC(R31,0x20,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 439: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 440: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 441: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 442: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 443: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 444: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 445: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 446: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 447: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 448: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 449: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 450: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 451: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 452: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 453: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 454: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 455: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 456: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 457: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 458: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 459: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL -L -------------------------------- -------------------------------- // 460: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 461: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 462: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 463: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL -L -------------------------------- -------------------------------- // 464: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 465: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 466: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 467: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 468: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 469: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 470: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 471: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL -L -------------------------------- -------------------------------- // 472: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 473: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 474: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 475: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL -L -------------------------------- -------------------------------- // 476: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 477: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 478: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 479: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL -L -------------------------------- -------------------------------- // 480: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 481: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 482: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 483: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 484: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 485: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 486: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 487: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 488: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 489: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 490: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 491: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 492: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 493: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 494: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 495: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 496: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 497: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 498: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 499: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 500: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 501: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 502: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 503: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 504: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 505: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 506: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 507: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 508: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 509: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 510: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 511: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 512: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 513: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 514: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 515: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 516: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 517: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 518: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 519: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 520: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 521: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 522: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 523: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 524: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 525: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 526: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 527: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 528: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 529: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 530: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 531: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 532: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 533: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 534: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 535: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 536: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 537: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 538: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 539: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 540: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 541: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 542: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 543: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 544: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 545: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 546: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 547: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 548: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 549: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 550: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 551: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 552: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 553: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 554: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 555: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 556: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 557: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 558: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 559: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 560: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 561: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 562: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 563: [6c0] BNE(R1,0x6cc,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 564: [6cc] SHLC(R1,0x1,R1)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 565: [6d0] SUBC(R2,0x1,R2)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 566: [6d4] BNE(R2,0x6c0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHLLL HHLLLLHHHHHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 567: [6d8] ADDC(R31,0x0,R31)\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHHLL LHHHLLHHHHHHHHHHHHHHHHHHHHHHHHHL -------------------------------- -L -------------------------------- -------------------------------- // 568: [6dc] BEQ(R31,0x6d8,R31)\\n\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\n\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\n\\n.plot clk\\n.plot reset\\n.plot irq\\n.plot X(ia[31:0])\\n.plot X(id[31:0])\\n.plot op(id[31:26])\\n.plot reg(id[20:16])\\n.plot reg(id[15:11])\\n.plot reg(id[25:21])\\n.plot X(ma[31:0])\\n.plot moe\\n.plot X(mrd[31:0])\\n.plot mwr\\n.plot X(mwd[31:0])\\n\"]]},\"/user/fa_copy\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"},\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-112,-40,0],{\"signal\":\"A\"}],[\"port\",[-112,-24,0],{\"signal\":\"B\"}],[\"port\",[-112,-8,0],{\"signal\":\"Cin\"}],[\"port\",[24,-112,4],{\"signal\":\"Cout\",\"direction\":\"out\"}],[\"port\",[24,-24,4],{\"signal\":\"S\",\"direction\":\"out\"}],[\"/adder/xor2\",[-72,-40,0]],[\"/adder/xor2\",[-24,-32,0]],[\"wire\",[-40,-16,0,0,8]],[\"/adder/nand2\",[-72,-120,0]],[\"/adder/nand2\",[-72,-88,0]],[\"/adder/nand2\",[-72,-152,0]],[\"wire\",[-24,-144,0,0,16]],[\"wire\",[-88,-40,0,0,-80]],[\"wire\",[-88,-120,0,16,0]],[\"wire\",[-72,-120,0,0,-16]],[\"wire\",[-112,-40,0,24,0]],[\"wire\",[-72,-104,0,-24,0]],[\"wire\",[-96,-104,0,0,80]],[\"wire\",[-112,-24,0,16,0]],[\"wire\",[-72,-88,0,0,-16]],[\"wire\",[-72,-72,0,-32,0]],[\"wire\",[-104,-72,0,0,64]],[\"wire\",[-40,-8,0,-64,0]],[\"wire\",[-112,-8,0,8,0]],[\"wire\",[-104,-72,0,0,-80]],[\"wire\",[-72,-152,0,-32,0]],[\"/adder/nand3\",[-24,-128,0]],[\"wire\",[-24,-80,0,0,-16]],[\"wire\",[-40,-16,0,16,0]],[\"wire\",[-96,-24,0,24,0]],[\"wire\",[-88,-40,0,16,0]]],\"icon\":[[\"terminal\",[-24,-8,0],{\"name\":\"A\"}],[\"terminal\",[-24,8,0],{\"name\":\"B\"}],[\"terminal\",[0,32,3],{\"name\":\"Cin\"}],[\"terminal\",[24,0,4],{\"name\":\"S\"}],[\"terminal\",[0,-32,7],{\"name\":\"Cout\"}],[\"line\",[16,-24,0,-32,0]],[\"line\",[-16,24,0,32,0]],[\"text\",[-15,-8,0],{\"text\":\"A\",\"font\":\"4pt sans-serif\"}],[\"text\",[-15,8,0],{\"text\":\"B\",\"font\":\"4pt sans-serif\"}],[\"text\",[15,0,0],{\"text\":\"S\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[0,-23,0],{\"text\":\"Cout\",\"font\":\"4pt sans-serif\",\"align\":\"top-center\"}],[\"text\",[0,23,0],{\"text\":\"Cin\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[0,0,0],{\"text\":\"FA\",\"align\":\"center\",\"font\":\"bold 6pt sans-serif\"}],[\"line\",[-16,-24,0,0,48]],[\"line\",[16,-24,0,0,48]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A B Cin\\n.group outputs Cout S\\n\\n.cycle assert inputs tran 9n sample outputs tran 1n\\n000 LL\\n001 LH\\n010 LH\\n011 HL\\n100 LH\\n101 HL\\n110 HL\\n111 HH\\n\\n.plot A\\n.plot B\\n.plot Cin\\n.plot Cout\\n.plot S\\n\"]]},\"/user/alu_v2\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"/alu/bool\",[-32,-40,0],{\"name\":\"bool\"}],[\"/alu/cmp\",[-32,88,0],{\"name\":\"cmp\"}],[\"wire\",[-64,96,0,-8,0],{\"signal\":\"FN[2:1]\"}],[\"wire\",[-64,-16,0,-8,0],{\"signal\":\"FN[3:0]\"}],[\"port\",[-128,-88,0],{\"signal\":\"A[31:0]\"}],[\"port\",[-128,-24,0],{\"signal\":\"B[31:0]\"}],[\"port\",[-128,48,0],{\"signal\":\"FN[5:0]\"}],[\"port\",[104,72,4],{\"signal\":\"Y[31:0]\",\"direction\":\"out\"}],[\"wire\",[-64,-72,0,-8,0],{\"signal\":\"FN[1:0]\"}],[\"/alu/arith\",[-32,24,0],{\"name\":\"arith\"}],[\"wire\",[-64,40,0,-8,0],{\"signal\":\"FN[0]\"}],[\"wire\",[-120,24,0,56,0]],[\"wire\",[-64,-80,0,-8,0],{\"signal\":\"B[4:0]\"}],[\"wire\",[-64,-88,0,-56,0]],[\"/gates/mux4\",[88,48,0]],[\"wire\",[-120,-32,0,56,0]],[\"wire\",[96,112,0,0,8],{\"signal\":\"FN[5:4]\"}],[\"/alu/shift\",[-32,-88,0],{\"name\":\"shift\"}],[\"wire\",[-48,64,0,0,8],{\"signal\":\"z\"}],[\"wire\",[-32,64,0,0,8],{\"signal\":\"v\"}],[\"wire\",[-16,64,0,0,8],{\"signal\":\"n\"}],[\"wire\",[-64,-24,0,-64,0]],[\"wire\",[-64,32,0,-64,0]],[\"wire\",[-128,-88,0,8,0]],[\"wire\",[0,-88,0,48,0]],[\"wire\",[0,24,0,8,0]],[\"wire\",[8,24,0,0,56]],[\"wire\",[0,-32,0,32,0]],[\"wire\",[-120,-32,0,0,56]],[\"wire\",[-120,-88,0,0,56]],[\"wire\",[-128,-24,0,0,56]],[\"wire\",[48,-88,0,0,136]],[\"wire\",[32,-32,0,0,96]],[\"wire\",[48,48,0,40,0],{\"signal\":\"shift[31:0]\"}],[\"wire\",[32,64,0,56,0],{\"signal\":\"bool[31:0]\"}],[\"wire\",[8,80,0,80,0],{\"signal\":\"arith[31:0]\"}],[\"wire\",[0,96,0,88,0],{\"signal\":\"cmp[31:0]\"}]],\"icon\":[[\"text\",[-8,-8,0],{\"text\":\"ALU\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-32,-16,0],{\"name\":\"B[31:0]\"}],[\"terminal\",[-32,16,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[-8,40,3],{\"name\":\"FN[5:0]\"}],[\"terminal\",[16,0,4],{\"name\":\"Y[31:0]\"}],[\"text\",[-23,16,0],{\"text\":\"A[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,-16,0],{\"text\":\"B[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[7,0,0],{\"text\":\"Y[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"text\",[-8,25,0],{\"text\":\"FN[5:0]\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"line\",[-24,-3,0,4,3]],[\"line\",[-20,0,0,-4,3]],[\"line\",[-24,32,0,32,-12]],[\"line\",[8,-21,0,-32,-11]],[\"line\",[-24,-32,0,0,29]],[\"line\",[-24,3,0,0,29]],[\"line\",[8,-21,0,0,41]],[\"property\",[-8,-27,0],{\"format\":\"{name}\",\"align\":\"bottom-left\"}],[\"line\",[-8,32,0,0,-6]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs FN[5:0] A[31:0] B[31:0]\\n.group outputs Y[31:0] Z V N\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n100000 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //   1: fn=F0000, a=0xff00ff00, b=0xffff0000, y=0x00000000\\n100001 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH LLH //   2: fn=F0001, a=0xff00ff00, b=0xffff0000, y=0x000000ff\\n100010 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHLLLLLLLL LLH //   3: fn=F0010, a=0xff00ff00, b=0xffff0000, y=0x0000ff00\\n100011 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //   4: fn=F0011, a=0xff00ff00, b=0xffff0000, y=0x0000ffff\\n100100 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLLLLLLLLL LLH //   5: fn=F0100, a=0xff00ff00, b=0xffff0000, y=0x00ff0000\\n100101 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLHHHHHHHH LLH //   6: fn=F0101, a=0xff00ff00, b=0xffff0000, y=0x00ff00ff\\n100110 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHLLLLLLLL LLH //   7: fn=  XOR, a=0xff00ff00, b=0xffff0000, y=0x00ffff00\\n100111 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //   8: fn=F0111, a=0xff00ff00, b=0xffff0000, y=0x00ffffff\\n101000 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLLLLLLLLL LLH //   9: fn=  AND, a=0xff00ff00, b=0xffff0000, y=0xff000000\\n101001 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLHHHHHHHH LLH //  10: fn= XNOR, a=0xff00ff00, b=0xffff0000, y=0xff0000ff\\n101010 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHLLLLLLLL LLH //  11: fn=    A, a=0xff00ff00, b=0xffff0000, y=0xff00ff00\\n101011 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHHHHHHHHH LLH //  12: fn=F1011, a=0xff00ff00, b=0xffff0000, y=0xff00ffff\\n101100 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLH //  13: fn=F1100, a=0xff00ff00, b=0xffff0000, y=0xffff0000\\n101101 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLHHHHHHHH LLH //  14: fn=F1101, a=0xff00ff00, b=0xffff0000, y=0xffff00ff\\n101110 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLH //  15: fn=   OR, a=0xff00ff00, b=0xffff0000, y=0xffffff00\\n101111 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  16: fn=F1111, a=0xff00ff00, b=0xffff0000, y=0xffffffff\\n110000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  17: fn=  SHL, a=0x00000000, b=0x00000000, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  18: fn=  SHR, a=0x00000000, b=0x00000000, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  19: fn=  SRA, a=0x00000000, b=0x00000000, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  20: fn=  SHL, a=0x00000000, b=0x00000001, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  21: fn=  SHR, a=0x00000000, b=0x00000001, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  22: fn=  SRA, a=0x00000000, b=0x00000001, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  23: fn=  SHL, a=0x00000000, b=0x00000002, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  24: fn=  SHR, a=0x00000000, b=0x00000002, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  25: fn=  SRA, a=0x00000000, b=0x00000002, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  26: fn=  SHL, a=0x00000000, b=0x00000004, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  27: fn=  SHR, a=0x00000000, b=0x00000004, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  28: fn=  SRA, a=0x00000000, b=0x00000004, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  29: fn=  SHL, a=0x00000000, b=0x00000008, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  30: fn=  SHR, a=0x00000000, b=0x00000008, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  31: fn=  SRA, a=0x00000000, b=0x00000008, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  32: fn=  SHL, a=0x00000000, b=0x00000010, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  33: fn=  SHR, a=0x00000000, b=0x00000010, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  34: fn=  SRA, a=0x00000000, b=0x00000010, y=0x00000000\\n110000 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  35: fn=  SHL, a=0x00000000, b=0x0000001f, y=0x00000000\\n110001 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  36: fn=  SHR, a=0x00000000, b=0x0000001f, y=0x00000000\\n110011 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  37: fn=  SRA, a=0x00000000, b=0x0000001f, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  38: fn=  SHL, a=0x00000001, b=0x00000000, y=0x00000001\\n110001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  39: fn=  SHR, a=0x00000001, b=0x00000000, y=0x00000001\\n110011 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  40: fn=  SRA, a=0x00000001, b=0x00000000, y=0x00000001\\n110000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  41: fn=  SHL, a=0x00000001, b=0x00000001, y=0x00000002\\n110001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  42: fn=  SHR, a=0x00000001, b=0x00000001, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  43: fn=  SRA, a=0x00000001, b=0x00000001, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL //  44: fn=  SHL, a=0x00000001, b=0x00000002, y=0x00000004\\n110001 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  45: fn=  SHR, a=0x00000001, b=0x00000002, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  46: fn=  SRA, a=0x00000001, b=0x00000002, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL //  47: fn=  SHL, a=0x00000001, b=0x00000004, y=0x00000010\\n110001 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  48: fn=  SHR, a=0x00000001, b=0x00000004, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  49: fn=  SRA, a=0x00000001, b=0x00000004, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL //  50: fn=  SHL, a=0x00000001, b=0x00000008, y=0x00000100\\n110001 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  51: fn=  SHR, a=0x00000001, b=0x00000008, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  52: fn=  SRA, a=0x00000001, b=0x00000008, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL //  53: fn=  SHL, a=0x00000001, b=0x00000010, y=0x00010000\\n110001 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  54: fn=  SHR, a=0x00000001, b=0x00000010, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  55: fn=  SRA, a=0x00000001, b=0x00000010, y=0x00000000\\n110000 00000000000000000000000000000001 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  56: fn=  SHL, a=0x00000001, b=0x0000001f, y=0x80000000\\n110001 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  57: fn=  SHR, a=0x00000001, b=0x0000001f, y=0x00000000\\n110011 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  58: fn=  SRA, a=0x00000001, b=0x0000001f, y=0x00000000\\n110000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  59: fn=  SHL, a=0xffffffff, b=0x00000000, y=0xffffffff\\n110001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  60: fn=  SHR, a=0xffffffff, b=0x00000000, y=0xffffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  61: fn=  SRA, a=0xffffffff, b=0x00000000, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL HLL //  62: fn=  SHL, a=0xffffffff, b=0x00000001, y=0xfffffffe\\n110001 11111111111111111111111111111111 00000000000000000000000000000001 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  63: fn=  SHR, a=0xffffffff, b=0x00000001, y=0x7fffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  64: fn=  SRA, a=0xffffffff, b=0x00000001, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLL //  65: fn=  SHL, a=0xffffffff, b=0x00000002, y=0xfffffffc\\n110001 11111111111111111111111111111111 00000000000000000000000000000010 LLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  66: fn=  SHR, a=0xffffffff, b=0x00000002, y=0x3fffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  67: fn=  SRA, a=0xffffffff, b=0x00000002, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL LLL //  68: fn=  SHL, a=0xffffffff, b=0x00000004, y=0xfffffff0\\n110001 11111111111111111111111111111111 00000000000000000000000000000100 LLLLHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  69: fn=  SHR, a=0xffffffff, b=0x00000004, y=0x0fffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  70: fn=  SRA, a=0xffffffff, b=0x00000004, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLL //  71: fn=  SHL, a=0xffffffff, b=0x00000008, y=0xffffff00\\n110001 11111111111111111111111111111111 00000000000000000000000000001000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //  72: fn=  SHR, a=0xffffffff, b=0x00000008, y=0x00ffffff\\n110011 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  73: fn=  SRA, a=0xffffffff, b=0x00000008, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLL //  74: fn=  SHL, a=0xffffffff, b=0x00000010, y=0xffff0000\\n110001 11111111111111111111111111111111 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //  75: fn=  SHR, a=0xffffffff, b=0x00000010, y=0x0000ffff\\n110011 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  76: fn=  SRA, a=0xffffffff, b=0x00000010, y=0xffffffff\\n110000 11111111111111111111111111111111 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  77: fn=  SHL, a=0xffffffff, b=0x0000001f, y=0x80000000\\n110001 11111111111111111111111111111111 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH //  78: fn=  SHR, a=0xffffffff, b=0x0000001f, y=0x00000001\\n110011 11111111111111111111111111111111 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  79: fn=  SRA, a=0xffffffff, b=0x0000001f, y=0xffffffff\\n110000 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  80: fn=  SHL, a=0x12345678, b=0x00000000, y=0x12345678\\n110001 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  81: fn=  SHR, a=0x12345678, b=0x00000000, y=0x12345678\\n110011 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  82: fn=  SRA, a=0x12345678, b=0x00000000, y=0x12345678\\n110000 00010010001101000101011001111000 00000000000000000000000000000001 LLHLLHLLLHHLHLLLHLHLHHLLHHHHLLLL LLL //  83: fn=  SHL, a=0x12345678, b=0x00000001, y=0x2468acf0\\n110001 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  84: fn=  SHR, a=0x12345678, b=0x00000001, y=0x091a2b3c\\n110011 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  85: fn=  SRA, a=0x12345678, b=0x00000001, y=0x091a2b3c\\n110000 00010010001101000101011001111000 00000000000000000000000000000010 LHLLHLLLHHLHLLLHLHLHHLLHHHHLLLLL LLL //  86: fn=  SHL, a=0x12345678, b=0x00000002, y=0x48d159e0\\n110001 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  87: fn=  SHR, a=0x12345678, b=0x00000002, y=0x048d159e\\n110011 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  88: fn=  SRA, a=0x12345678, b=0x00000002, y=0x048d159e\\n110000 00010010001101000101011001111000 00000000000000000000000000000100 LLHLLLHHLHLLLHLHLHHLLHHHHLLLLLLL LLL //  89: fn=  SHL, a=0x12345678, b=0x00000004, y=0x23456780\\n110001 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  90: fn=  SHR, a=0x12345678, b=0x00000004, y=0x01234567\\n110011 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  91: fn=  SRA, a=0x12345678, b=0x00000004, y=0x01234567\\n110000 00010010001101000101011001111000 00000000000000000000000000001000 LLHHLHLLLHLHLHHLLHHHHLLLLLLLLLLL LLL //  92: fn=  SHL, a=0x12345678, b=0x00000008, y=0x34567800\\n110001 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  93: fn=  SHR, a=0x12345678, b=0x00000008, y=0x00123456\\n110011 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  94: fn=  SRA, a=0x12345678, b=0x00000008, y=0x00123456\\n110000 00010010001101000101011001111000 00000000000000000000000000010000 LHLHLHHLLHHHHLLLLLLLLLLLLLLLLLLL LLL //  95: fn=  SHL, a=0x12345678, b=0x00000010, y=0x56780000\\n110001 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  96: fn=  SHR, a=0x12345678, b=0x00000010, y=0x00001234\\n110011 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  97: fn=  SRA, a=0x12345678, b=0x00000010, y=0x00001234\\n110000 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  98: fn=  SHL, a=0x12345678, b=0x0000001f, y=0x00000000\\n110001 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  99: fn=  SHR, a=0x12345678, b=0x0000001f, y=0x00000000\\n110011 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 100: fn=  SRA, a=0x12345678, b=0x0000001f, y=0x00000000\\n110000 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 101: fn=  SHL, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\n110001 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 102: fn=  SHR, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\n110011 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 103: fn=  SRA, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\n110000 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHLHHLHHHLLHLHLHLHHHLLHHLLLL LLH // 104: fn=  SHL, a=0xfedcab98, b=0x00000001, y=0xfdb95730\\n110001 11111110110111001010101110011000 00000000000000000000000000000001 LHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 105: fn=  SHR, a=0xfedcab98, b=0x00000001, y=0x7f6e55cc\\n110011 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 106: fn=  SRA, a=0xfedcab98, b=0x00000001, y=0xff6e55cc\\n110000 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHLHHLHHHLLHLHLHLHHHLLHHLLLLL LLH // 107: fn=  SHL, a=0xfedcab98, b=0x00000002, y=0xfb72ae60\\n110001 11111110110111001010101110011000 00000000000000000000000000000010 LLHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 108: fn=  SHR, a=0xfedcab98, b=0x00000002, y=0x3fb72ae6\\n110011 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 109: fn=  SRA, a=0xfedcab98, b=0x00000002, y=0xffb72ae6\\n110000 11111110110111001010101110011000 00000000000000000000000000000100 HHHLHHLHHHLLHLHLHLHHHLLHHLLLLLLL LLH // 110: fn=  SHL, a=0xfedcab98, b=0x00000004, y=0xedcab980\\n110001 11111110110111001010101110011000 00000000000000000000000000000100 LLLLHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 111: fn=  SHR, a=0xfedcab98, b=0x00000004, y=0x0fedcab9\\n110011 11111110110111001010101110011000 00000000000000000000000000000100 HHHHHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 112: fn=  SRA, a=0xfedcab98, b=0x00000004, y=0xffedcab9\\n110000 11111110110111001010101110011000 00000000000000000000000000001000 HHLHHHLLHLHLHLHHHLLHHLLLLLLLLLLL LLH // 113: fn=  SHL, a=0xfedcab98, b=0x00000008, y=0xdcab9800\\n110001 11111110110111001010101110011000 00000000000000000000000000001000 LLLLLLLLHHHHHHHLHHLHHHLLHLHLHLHH LLH // 114: fn=  SHR, a=0xfedcab98, b=0x00000008, y=0x00fedcab\\n110011 11111110110111001010101110011000 00000000000000000000000000001000 HHHHHHHHHHHHHHHLHHLHHHLLHLHLHLHH LLH // 115: fn=  SRA, a=0xfedcab98, b=0x00000008, y=0xfffedcab\\n110000 11111110110111001010101110011000 00000000000000000000000000010000 HLHLHLHHHLLHHLLLLLLLLLLLLLLLLLLL LLH // 116: fn=  SHL, a=0xfedcab98, b=0x00000010, y=0xab980000\\n110001 11111110110111001010101110011000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHLHHLHHHLL LLH // 117: fn=  SHR, a=0xfedcab98, b=0x00000010, y=0x0000fedc\\n110011 11111110110111001010101110011000 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHLHHLHHHLL LLH // 118: fn=  SRA, a=0xfedcab98, b=0x00000010, y=0xfffffedc\\n110000 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 119: fn=  SHL, a=0xfedcab98, b=0x0000001f, y=0x00000000\\n110001 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 120: fn=  SHR, a=0xfedcab98, b=0x0000001f, y=0x00000001\\n110011 11111110110111001010101110011000 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 121: fn=  SRA, a=0xfedcab98, b=0x0000001f, y=0xffffffff\\n010000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 122: fn=  ADD, a=0x00000000, b=0x00000000, y=0x00000000\\n010000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 123: fn=  ADD, a=0x00000000, b=0x00000001, y=0x00000001\\n010000 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 124: fn=  ADD, a=0x00000000, b=0x-0000001, y=0xffffffff\\n010000 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 125: fn=  ADD, a=0x00000000, b=0xaaaaaaaa, y=0xaaaaaaaa\\n010000 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 126: fn=  ADD, a=0x00000000, b=0x55555555, y=0x55555555\\n010000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 127: fn=  ADD, a=0x00000001, b=0x00000000, y=0x00000001\\n010000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 128: fn=  ADD, a=0x00000001, b=0x00000001, y=0x00000002\\n010000 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 129: fn=  ADD, a=0x00000001, b=0x-0000001, y=0x00000000\\n010000 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 130: fn=  ADD, a=0x00000001, b=0xaaaaaaaa, y=0xaaaaaaab\\n010000 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 131: fn=  ADD, a=0x00000001, b=0x55555555, y=0x55555556\\n010000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 132: fn=  ADD, a=0x-0000001, b=0x00000000, y=0xffffffff\\n010000 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 133: fn=  ADD, a=0x-0000001, b=0x00000001, y=0x00000000\\n010000 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 134: fn=  ADD, a=0x-0000001, b=0x-0000001, y=0xfffffffe\\n010000 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 135: fn=  ADD, a=0x-0000001, b=0xaaaaaaaa, y=0xaaaaaaa9\\n010000 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 136: fn=  ADD, a=0x-0000001, b=0x55555555, y=0x55555554\\n010000 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 137: fn=  ADD, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\n010000 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 138: fn=  ADD, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaab\\n010000 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 139: fn=  ADD, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaa9\\n010000 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 140: fn=  ADD, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x55555554\\n010000 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 141: fn=  ADD, a=0xaaaaaaaa, b=0x55555555, y=0xffffffff\\n010000 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 142: fn=  ADD, a=0x55555555, b=0x00000000, y=0x55555555\\n010000 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 143: fn=  ADD, a=0x55555555, b=0x00000001, y=0x55555556\\n010000 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 144: fn=  ADD, a=0x55555555, b=0x-0000001, y=0x55555554\\n010000 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 145: fn=  ADD, a=0x55555555, b=0xaaaaaaaa, y=0xffffffff\\n010000 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 146: fn=  ADD, a=0x55555555, b=0x55555555, y=0xaaaaaaaa\\n010001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 147: fn=  SUB, a=0x00000000, b=0x00000000, y=0x00000000\\n010001 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 148: fn=  SUB, a=0x00000000, b=0x00000001, y=0xffffffff\\n010001 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 149: fn=  SUB, a=0x00000000, b=0x-0000001, y=0x00000001\\n010001 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 150: fn=  SUB, a=0x00000000, b=0xaaaaaaaa, y=0x55555556\\n010001 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 151: fn=  SUB, a=0x00000000, b=0x55555555, y=0xaaaaaaab\\n010001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 152: fn=  SUB, a=0x00000001, b=0x00000000, y=0x00000001\\n010001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 153: fn=  SUB, a=0x00000001, b=0x00000001, y=0x00000000\\n010001 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 154: fn=  SUB, a=0x00000001, b=0x-0000001, y=0x00000002\\n010001 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 155: fn=  SUB, a=0x00000001, b=0xaaaaaaaa, y=0x55555557\\n010001 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 156: fn=  SUB, a=0x00000001, b=0x55555555, y=0xaaaaaaac\\n010001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 157: fn=  SUB, a=0x-0000001, b=0x00000000, y=0xffffffff\\n010001 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 158: fn=  SUB, a=0x-0000001, b=0x00000001, y=0xfffffffe\\n010001 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 159: fn=  SUB, a=0x-0000001, b=0x-0000001, y=0x00000000\\n010001 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 160: fn=  SUB, a=0x-0000001, b=0xaaaaaaaa, y=0x55555555\\n010001 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 161: fn=  SUB, a=0x-0000001, b=0x55555555, y=0xaaaaaaaa\\n010001 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 162: fn=  SUB, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\n010001 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 163: fn=  SUB, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaa9\\n010001 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 164: fn=  SUB, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaab\\n010001 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 165: fn=  SUB, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x00000000\\n010001 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 166: fn=  SUB, a=0xaaaaaaaa, b=0x55555555, y=0x55555555\\n010001 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 167: fn=  SUB, a=0x55555555, b=0x00000000, y=0x55555555\\n010001 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 168: fn=  SUB, a=0x55555555, b=0x00000001, y=0x55555554\\n010001 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 169: fn=  SUB, a=0x55555555, b=0x-0000001, y=0x55555556\\n010001 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 170: fn=  SUB, a=0x55555555, b=0xaaaaaaaa, y=0xaaaaaaab\\n010001 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 171: fn=  SUB, a=0x55555555, b=0x55555555, y=0x00000000\\n000011 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 172: fn=CMPEQ, a=0x00000005, b=0xdeadbeef, y=0x00000000\\n000101 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 173: fn=CMPLT, a=0x00000005, b=0xdeadbeef, y=0x00000000\\n000111 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 174: fn=CMPLE, a=0x00000005, b=0xdeadbeef, y=0x00000000\\n000011 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 175: fn=CMPEQ, a=0x12345678, b=0x12345678, y=0x00000001\\n000101 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 176: fn=CMPLT, a=0x12345678, b=0x12345678, y=0x00000000\\n000111 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 177: fn=CMPLE, a=0x12345678, b=0x12345678, y=0x00000001\\n000011 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHL // 178: fn=CMPEQ, a=0x80000000, b=0x00000001, y=0x00000000\\n000101 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 179: fn=CMPLT, a=0x80000000, b=0x00000001, y=0x00000001\\n000111 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 180: fn=CMPLE, a=0x80000000, b=0x00000001, y=0x00000001\\n000011 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 181: fn=CMPEQ, a=0xdeadbeef, b=0x00000005, y=0x00000000\\n000101 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 182: fn=CMPLT, a=0xdeadbeef, b=0x00000005, y=0x00000001\\n000111 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 183: fn=CMPLE, a=0xdeadbeef, b=0x00000005, y=0x00000001\\n000011 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 184: fn=CMPEQ, a=0x7fffffff, b=0xffffffff, y=0x00000000\\n000101 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 185: fn=CMPLT, a=0x7fffffff, b=0xffffffff, y=0x00000000\\n000111 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 186: fn=CMPLE, a=0x7fffffff, b=0xffffffff, y=0x00000000\\n\\n// map FN[5:0] to text for operation\\n.plotdef op ? ? ? CMPEQ ? CMPLT ? CMPLE ? ? ? ? ? ? ? ? ADD SUB ? ? ? ? ? ? ? ? ? ? ? ? ? ? F0000 F0001 F0010 F0011 F0100 F0101 XOR F0111 AND XNOR A F1011 F1100 F1101 OR F1111 SHL SHR ? SRA ? ? ? ? ? ? ? ? ? ? ? ?\\n\\n.plot op(FN[5:0])\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(Y[31:0])\\n.plot Z\\n.plot V\\n.plot N\"]]},\"/user/arith_v2\":{\"properties\":{\"name\":{\"label\":\"Name\",\"type\":\"string\",\"value\":\"\",\"edit\":\"yes\",\"choices\":[\"\"]},\"icon-readonly\":\"true\",\"test-readonly\":{\"label\":\"Test readonly\",\"type\":\"string\",\"value\":\"true\",\"edit\":\"yes\",\"choices\":[\"\"]}},\"schematic\":[[\"port\",[-32,-88,0],{\"signal\":\"A[31:0]\"}],[\"port\",[-88,-32,0],{\"signal\":\"B[31:0]\"}],[\"port\",[-88,-48,0],{\"signal\":\"AFN\"}],[\"port\",[88,-72,4],{\"signal\":\"S[31:0]\",\"direction\":\"out\"}],[\"port\",[80,-224,4],{\"signal\":\"V\",\"direction\":\"out\"}],[\"port\",[88,8,4],{\"signal\":\"N\",\"direction\":\"out\"}],[\"port\",[88,-32,4],{\"signal\":\"Z\",\"direction\":\"out\"}],[\"wire\",[80,8,0,-8,0],{\"signal\":\"S[31]\"}],[\"jumper\",[80,8,0]],[\"/user/nor32\",[40,-32,0],{\"name\":\"nor32\"}],[\"/gates/xor2\",[-80,-48,0]],[\"wire\",[88,-48,0,-80,0]],[\"wire\",[-32,-40,0,0,-32],{\"signal\":\"xb[31:0]\",\"width\":\"32\"}],[\"wire\",[-32,-104,0,-56,0]],[\"wire\",[-88,-104,0,0,56]],[\"wire\",[-88,-48,0,8,0]],[\"wire\",[-80,-32,0,-8,0],{\"width\":\"32\"}],[\"wire\",[88,-72,0,0,24]],[\"wire\",[8,-48,0,0,16]],[\"/gates/and3\",[-16,-248,0]],[\"/gates/inverter\",[-48,-216,0]],[\"wire\",[-48,-216,0,-8,0],{\"signal\":\"s[31]\"}],[\"/gates/or2\",[32,-232,0]],[\"/gates/and3\",[-16,-168,0]],[\"wire\",[-48,-216,0,0,48]],[\"wire\",[-48,-168,0,32,0]],[\"/gates/inverter\",[-48,-152,0]],[\"/gates/inverter\",[-48,-136,0]],[\"wire\",[-48,-152,0,-32,0],{\"signal\":\"xb[31]\"}],[\"wire\",[-48,-136,0,-48,0],{\"signal\":\"a[31]\"}],[\"wire\",[-96,-136,0,0,-112]],[\"wire\",[-16,-248,0,-80,0]],[\"wire\",[-80,-152,0,0,-80]],[\"wire\",[-16,-232,0,-64,0]],[\"wire\",[32,-216,0,0,64]],[\"/user/add32_v3\",[0,-88,0]]],\"icon\":[[\"text\",[0,-11,0],{\"text\":\"ARITH\",\"font\":\"bold 6pt sans-serif\",\"align\":\"center\"}],[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[-32,8,0],{\"name\":\"B[31:0]\"}],[\"terminal\",[-32,16,0],{\"name\":\"AFN\"}],[\"terminal\",[32,0,4],{\"name\":\"S[31:0]\"}],[\"text\",[-23,8,0],{\"text\":\"B[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,0,0],{\"text\":\"A[31:0]\",\"font\":\"4pt sans-serif\"}],[\"text\",[-23,16,0],{\"text\":\"AFN\",\"font\":\"4pt sans-serif\"}],[\"text\",[23,0,0],{\"text\":\"S[31:0]\",\"font\":\"4pt sans-serif\",\"align\":\"center-right\"}],[\"line\",[-24,-16,0,48,0]],[\"line\",[24,32,0,-48,0]],[\"property\",[0,-17,0],{\"format\":\"{name}\",\"align\":\"bottom-center\"}],[\"terminal\",[-16,40,5],{\"name\":\"Z\"}],[\"terminal\",[0,40,5],{\"name\":\"V\"}],[\"terminal\",[16,40,5],{\"name\":\"N\"}],[\"text\",[-16,31,0],{\"text\":\"Z\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[0,31,0],{\"text\":\"V\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"text\",[16,31,0],{\"text\":\"N\",\"font\":\"4pt sans-serif\",\"align\":\"bottom-center\"}],[\"line\",[-24,-16,0,0,48]],[\"line\",[24,-16,0,0,48]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs AFN A[31:0] B[31:0]\\n.group outputs S[31:0] Z V N\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n0 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  1: afn=0, a=0X00000000, b=0X00000000, s=0X00000000\\n0 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  2: afn=0, a=0X00000000, b=0X00000001, s=0X00000001\\n0 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  3: afn=0, a=0X00000000, b=0XFFFFFFFF, s=0XFFFFFFFF\\n0 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH //  4: afn=0, a=0X00000000, b=0XAAAAAAAA, s=0XAAAAAAAA\\n0 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL //  5: afn=0, a=0X00000000, b=0X55555555, s=0X55555555\\n0 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  6: afn=0, a=0X00000001, b=0X00000000, s=0X00000001\\n0 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  7: afn=0, a=0X00000001, b=0X00000001, s=0X00000002\\n0 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  8: afn=0, a=0X00000001, b=0XFFFFFFFF, s=0X00000000\\n0 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH //  9: afn=0, a=0X00000001, b=0XAAAAAAAA, s=0XAAAAAAAB\\n0 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 10: afn=0, a=0X00000001, b=0X55555555, s=0X55555556\\n0 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 11: afn=0, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\n0 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 12: afn=0, a=0XFFFFFFFF, b=0X00000001, s=0X00000000\\n0 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 13: afn=0, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0XFFFFFFFE\\n0 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 14: afn=0, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0XAAAAAAA9\\n0 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 15: afn=0, a=0XFFFFFFFF, b=0X55555555, s=0X55555554\\n0 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 16: afn=0, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\n0 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 17: afn=0, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAAB\\n0 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 18: afn=0, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAA9\\n0 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 19: afn=0, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X55555554\\n0 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 20: afn=0, a=0XAAAAAAAA, b=0X55555555, s=0XFFFFFFFF\\n0 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 21: afn=0, a=0X55555555, b=0X00000000, s=0X55555555\\n0 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 22: afn=0, a=0X55555555, b=0X00000001, s=0X55555556\\n0 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 23: afn=0, a=0X55555555, b=0XFFFFFFFF, s=0X55555554\\n0 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 24: afn=0, a=0X55555555, b=0XAAAAAAAA, s=0XFFFFFFFF\\n0 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 25: afn=0, a=0X55555555, b=0X55555555, s=0XAAAAAAAA\\n1 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 26: fn=1, a=0X00000000, b=0X00000000, s=0X00000000\\n1 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 27: fn=1, a=0X00000000, b=0X00000001, s=0XFFFFFFFF\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 28: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\n1 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 29: fn=1, a=0X00000000, b=0XAAAAAAAA, s=0X55555556\\n1 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 30: fn=1, a=0X00000000, b=0X55555555, s=0XAAAAAAAB\\n1 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 31: fn=1, a=0X00000001, b=0X00000000, s=0X00000001\\n1 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 32: fn=1, a=0X00000001, b=0X00000001, s=0X00000000\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 33: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\n1 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 34: fn=1, a=0X00000001, b=0XAAAAAAAA, s=0X55555557\\n1 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 35: fn=1, a=0X00000001, b=0X55555555, s=0XAAAAAAAC\\n1 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 36: fn=1, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\n1 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 37: fn=1, a=0XFFFFFFFF, b=0X00000001, s=0XFFFFFFFE\\n1 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 38: fn=1, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0X00000000\\n1 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 39: fn=1, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0X55555555\\n1 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 40: fn=1, a=0XFFFFFFFF, b=0X55555555, s=0XAAAAAAAA\\n1 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 41: fn=1, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\n1 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 42: fn=1, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAA9\\n1 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 43: fn=1, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAAB\\n1 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 44: fn=1, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X00000000\\n1 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 45: fn=1, a=0XAAAAAAAA, b=0X55555555, s=0X55555555\\n1 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 46: fn=1, a=0X55555555, b=0X00000000, s=0X55555555\\n1 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 47: fn=1, a=0X55555555, b=0X00000001, s=0X55555554\\n1 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 48: fn=1, a=0X55555555, b=0XFFFFFFFF, s=0X55555556\\n1 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 49: fn=1, a=0X55555555, b=0XAAAAAAAA, s=0XAAAAAAAB\\n1 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 50: fn=1, a=0X55555555, b=0X55555555, s=0X00000000\\n1 01111111111111111111111111111111 11111111111111111111111111111111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 51: fn=1, a=0X7FFFFFFF, b=0XFFFFFFFF, s=0X80000000\\n1 00111111111111111111111111111111 11111111111111111111111111111111 LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 52: fn=1, a=0X3FFFFFFF, b=0XFFFFFFFF, s=0X40000000\\n1 00011111111111111111111111111111 11111111111111111111111111111111 LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 53: fn=1, a=0X1FFFFFFF, b=0XFFFFFFFF, s=0X20000000\\n1 00001111111111111111111111111111 11111111111111111111111111111111 LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 54: fn=1, a=0X0FFFFFFF, b=0XFFFFFFFF, s=0X10000000\\n1 00000111111111111111111111111111 11111111111111111111111111111111 LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 55: fn=1, a=0X07FFFFFF, b=0XFFFFFFFF, s=0X08000000\\n1 00000011111111111111111111111111 11111111111111111111111111111111 LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 56: fn=1, a=0X03FFFFFF, b=0XFFFFFFFF, s=0X04000000\\n1 00000001111111111111111111111111 11111111111111111111111111111111 LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 57: fn=1, a=0X01FFFFFF, b=0XFFFFFFFF, s=0X02000000\\n1 00000000111111111111111111111111 11111111111111111111111111111111 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLL // 58: fn=1, a=0X00FFFFFF, b=0XFFFFFFFF, s=0X01000000\\n1 00000000011111111111111111111111 11111111111111111111111111111111 LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLL // 59: fn=1, a=0X007FFFFF, b=0XFFFFFFFF, s=0X00800000\\n1 00000000001111111111111111111111 11111111111111111111111111111111 LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLL // 60: fn=1, a=0X003FFFFF, b=0XFFFFFFFF, s=0X00400000\\n1 00000000000111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLL // 61: fn=1, a=0X001FFFFF, b=0XFFFFFFFF, s=0X00200000\\n1 00000000000011111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL LLL // 62: fn=1, a=0X000FFFFF, b=0XFFFFFFFF, s=0X00100000\\n1 00000000000001111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL LLL // 63: fn=1, a=0X0007FFFF, b=0XFFFFFFFF, s=0X00080000\\n1 00000000000000111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL LLL // 64: fn=1, a=0X0003FFFF, b=0XFFFFFFFF, s=0X00040000\\n1 00000000000000011111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL LLL // 65: fn=1, a=0X0001FFFF, b=0XFFFFFFFF, s=0X00020000\\n1 00000000000000001111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL // 66: fn=1, a=0X0000FFFF, b=0XFFFFFFFF, s=0X00010000\\n1 00000000000000000111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL LLL // 67: fn=1, a=0X00007FFF, b=0XFFFFFFFF, s=0X00008000\\n1 00000000000000000011111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL LLL // 68: fn=1, a=0X00003FFF, b=0XFFFFFFFF, s=0X00004000\\n1 00000000000000000001111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL LLL // 69: fn=1, a=0X00001FFF, b=0XFFFFFFFF, s=0X00002000\\n1 00000000000000000000111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL LLL // 70: fn=1, a=0X00000FFF, b=0XFFFFFFFF, s=0X00001000\\n1 00000000000000000000011111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL LLL // 71: fn=1, a=0X000007FF, b=0XFFFFFFFF, s=0X00000800\\n1 00000000000000000000001111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL LLL // 72: fn=1, a=0X000003FF, b=0XFFFFFFFF, s=0X00000400\\n1 00000000000000000000000111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL LLL // 73: fn=1, a=0X700001FF, b=0XFFFFFFFF, s=0X00000200\\n1 00000000000000000000000011111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL // 74: fn=1, a=0X000000FF, b=0XFFFFFFFF, s=0X00000100\\n1 00000000000000000000000001111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLL // 75: fn=1, a=0X0000007F, b=0XFFFFFFFF, s=0X00000080\\n1 00000000000000000000000000111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLL // 76: fn=1, a=0X0000003F, b=0XFFFFFFFF, s=0X00000040\\n1 00000000000000000000000000011111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLL // 77: fn=1, a=0X0000001F, b=0XFFFFFFFF, s=0X00000020\\n1 00000000000000000000000000001111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL // 78: fn=1, a=0X0000000F, b=0XFFFFFFFF, s=0X00000010\\n1 00000000000000000000000000000111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLL // 79: fn=1, a=0X00000007, b=0XFFFFFFFF, s=0X00000008\\n1 00000000000000000000000000000011 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL // 80: fn=1, a=0X00000003, b=0XFFFFFFFF, s=0X00000004\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 81: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 82: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\n      \\n.plot X(AFN)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot Z\\n.plot V\\n.plot N\\n\"]]},\"/user/cla2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"/user/cla1\",[-8,-48,0]],[\"port\",[0,-56,1],{\"signal\":\"a[1:0]\"}],[\"port\",[-48,-56,1],{\"signal\":\"b[1:0]\"}],[\"wire\",[24,-32,0,16,0],{\"signal\":\"ch,cl\"}],[\"port\",[8,-8,3],{\"signal\":\"s[1:0]\",\"direction\":\"out\"}],[\"/user/cl\",[-32,112,0]],[\"wire\",[-16,80,0,0,-16],{\"signal\":\"ch\"}],[\"wire\",[-40,80,0,0,-16],{\"signal\":\"ph\"}],[\"wire\",[-56,80,0,0,-16],{\"signal\":\"gh\"}],[\"wire\",[0,104,0,16,0],{\"signal\":\"gl\"}],[\"wire\",[0,112,0,16,0],{\"signal\":\"pl\"}],[\"wire\",[0,128,0,16,0],{\"signal\":\"cl\"}],[\"port\",[-16,152,3],{\"signal\":\"cin\"}],[\"port\",[-40,152,3],{\"signal\":\"p\",\"direction\":\"out\"}],[\"port\",[-56,152,3],{\"signal\":\"g\",\"direction\":\"out\"}],[\"wire\",[-56,-8,0,0,16],{\"signal\":\"gh,gl\"}],[\"wire\",[-40,32,0,0,-40],{\"signal\":\"ph,pl\"}]],\"icon\":[[\"terminal\",[-24,8,1],{\"name\":\"b[1:0]\"}],[\"terminal\",[24,8,1],{\"name\":\"a[1:0]\"}],[\"terminal\",[48,32,4],{\"name\":\"cin\"}],[\"terminal\",[32,56,3],{\"name\":\"s[1:0]\"}],[\"terminal\",[-16,56,3],{\"name\":\"p\"}],[\"terminal\",[-32,56,3],{\"name\":\"g\"}],[\"text\",[-32,42,0],{\"text\":\"g\"}],[\"text\",[-15,42,0],{\"text\":\"p\"}],[\"text\",[31,43,0],{\"text\":\"s\"}],[\"text\",[25,31,0],{\"text\":\"cin\"}],[\"text\",[22,21,0],{\"text\":\"a\"}],[\"text\",[-25,23,0],{\"text\":\"b\"}],[\"text\",[-10,30,0],{\"text\":\"cla2\"}],[\"line\",[-40,48,0,80,0]],[\"line\",[40,48,0,0,-32]],[\"line\",[40,16,0,-80,0]],[\"line\",[-40,16,0,0,32]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[1:0] B[1:0] cin\\n.group outputs S[1:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n01 01 0 HL // 1 + 1 = 2\\n\\n.plot X(cin)\\n.plot X(A[1:0])\\n.plot X(B[1:0])\\n.plot X(S[1:0])\\n.plot X(gl)\\n.plot X(gh)\\n.plot X(pl)\\n.plot X(ph)\\n.plot X(ch)\\n.plot X(cl)\\n.plot X(g)\\n.plot X(p)\\n\\n/*\\n00 00 0 LL\\n00 01 0 LH\\n00 10 0 HL\\n01 00 0 LH\\n10 00 0 HL\\n\\n00 11 1 LL // 0 + 3 + 1 = 0\\n01 11 0 LL // 1 + 3 = 0\\n\\n01 10 0 HH // 1 + 2 = 3\\n00 10 1 HH // 0 + 2 + 1 = 3\\n10 11 0 LH // 2 + 3 = 1\\n11 11 0 HL // 3 + 3 = 2\\n11 11 1 HH // 3 + 3 + 1 = 3\\n*/\\n\\n\"]]},\"/user/cl\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"/gates/and2\",[-24,-24,0]],[\"/gates/and2\",[-24,8,0]],[\"/gates/or2\",[24,24,0]],[\"port\",[-24,-24,0],{\"signal\":\"ph\"}],[\"port\",[-24,-8,0],{\"signal\":\"pl\"}],[\"wire\",[24,-16,0,16,0]],[\"port\",[40,-16,4],{\"signal\":\"p\",\"direction\":\"out\"}],[\"port\",[-24,8,0],{\"signal\":\"ph\"}],[\"port\",[-24,24,0],{\"signal\":\"gl\"}],[\"wire\",[24,16,0,0,8]],[\"port\",[24,40,0],{\"signal\":\"gh\"}],[\"port\",[72,32,4],{\"signal\":\"g\",\"direction\":\"out\"}],[\"text\",[-16,-43,0],{\"text\":\"gp logic\"}],[\"text\",[-15,62,0],{\"text\":\"carry logic\"}],[\"/gates/and2\",[-24,88,0]],[\"/gates/or2\",[24,104,0]],[\"port\",[72,112,4],{\"signal\":\"ch\",\"direction\":\"out\"}],[\"port\",[72,144,4],{\"signal\":\"cl\",\"direction\":\"out\"}],[\"jumper\",[64,144,0]],[\"wire\",[64,144,0,-8,0],{\"signal\":\"cin\"}],[\"wire\",[24,104,0,0,-8]],[\"wire\",[24,120,0,-8,0],{\"signal\":\"gl\"}],[\"port\",[-24,88,0],{\"signal\":\"cin\"}],[\"wire\",[-24,104,0,-8,0],{\"signal\":\"pl\"}]],\"icon\":[[\"terminal\",[-24,-32,1],{\"name\":\"gh\"}],[\"terminal\",[-8,-32,1],{\"name\":\"ph\"}],[\"terminal\",[16,-32,1],{\"name\":\"ch\"}],[\"terminal\",[32,-8,4],{\"name\":\"gl\"}],[\"terminal\",[32,0,4],{\"name\":\"pl\"}],[\"terminal\",[32,16,4],{\"name\":\"cl\"}],[\"terminal\",[16,40,3],{\"name\":\"cin\"}],[\"terminal\",[-8,40,3],{\"name\":\"p\"}],[\"terminal\",[-24,40,3],{\"name\":\"g\"}],[\"line\",[-32,-24,0,56,0]],[\"line\",[24,-24,0,0,56]],[\"line\",[24,32,0,-56,0]],[\"line\",[-32,32,0,0,-56]],[\"text\",[-25,-20,0],{\"text\":\"gh\"}],[\"text\",[-8,-20,0],{\"text\":\"ph\"}],[\"text\",[-26,26,0],{\"text\":\"g\"}],[\"text\",[-10,26,0],{\"text\":\"p\"}],[\"text\",[5,26,0],{\"text\":\"cin\"}],[\"text\",[11,-21,0],{\"text\":\"ch\"}],[\"text\",[14,-8,0],{\"text\":\"gl\"}],[\"text\",[14,0,0],{\"text\":\"pl\"}],[\"text\",[14,17,0],{\"text\":\"cl\"}],[\"text\",[-18,-9,0],{\"text\":\"Hi\"}],[\"text\",[-19,19,0],{\"text\":\"HiLo\"}],[\"text\",[3,3,0],{\"text\":\"Lo\"}],[\"text\",[-20,4,0],{\"text\":\"CL\",\"font\":\"8pt sans-serif\"}],[\"property\",[-46,2,3],{\"format\":\"{name}\"}]],\"test\":[[\"test\",\"\"]]},\"/user/add32_v2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-424,208,0],{\"signal\":\"cin\"}],[\"port\",[-504,-48,1],{\"signal\":\"A[31:0]\"}],[\"port\",[-552,-48,1],{\"signal\":\"B[31:0]\"}],[\"port\",[-496,16,3],{\"signal\":\"s[31:0]\",\"direction\":\"out\"}],[\"port\",[-536,168,0],{\"signal\":\"cout\",\"direction\":\"out\"}],[\"/user/cla2\",[-528,-48,0]],[\"wire\",[-552,-40,0,0,-8]],[\"wire\",[-504,-40,0,0,-8]],[\"wire\",[-544,8,0,0,8],{\"signal\":\"p1[15:0]\"}],[\"wire\",[-496,8,0,0,8]],[\"wire\",[-560,32,0,0,-24],{\"signal\":\"g1[15:0]\"}],[\"/user/cl\",[-336,-24,0],{\"name\":\"stage1\"}],[\"wire\",[-392,-56,0,0,-16],{\"signal\":\"g1[15:1:2]\"}],[\"wire\",[-304,-32,0,16,0],{\"signal\":\"g1[14:0:2]\"}],[\"wire\",[-344,-56,0,0,-16],{\"signal\":\"p1[15:1:2]\"}],[\"wire\",[-304,-24,0,16,0],{\"signal\":\"p1[14:0:2]\"}],[\"wire\",[-384,16,0,0,16],{\"signal\":\"g2[7:0]\"}],[\"wire\",[-344,16,0,0,16],{\"signal\":\"p2[7:0]\"}],[\"wire\",[-360,16,0,-24,0]],[\"/user/cl\",[-160,-24,0],{\"name\":\"stage2\"}],[\"wire\",[-216,-56,0,0,-16],{\"signal\":\"g2[7:1:2]\"}],[\"wire\",[-128,-32,0,16,0],{\"signal\":\"g2[6:0:2]\"}],[\"wire\",[-168,-56,0,0,-16],{\"signal\":\"p2[7:1:2]\"}],[\"wire\",[-128,-24,0,16,0],{\"signal\":\"p2[6:0:2]\"}],[\"wire\",[-208,16,0,0,16],{\"signal\":\"g3[3:0]\"}],[\"wire\",[-168,16,0,0,16],{\"signal\":\"p3[3:0]\"}],[\"wire\",[-184,16,0,-24,0]],[\"wire\",[-360,-56,0,-32,0]],[\"/user/cl\",[-152,112,0],{\"name\":\"stage3\"}],[\"wire\",[-208,80,0,0,-16],{\"signal\":\"g3[3:1:2]\"}],[\"wire\",[-120,104,0,16,0],{\"signal\":\"g3[2:0:2]\"}],[\"wire\",[-120,112,0,16,0],{\"signal\":\"p3[2:0:2]\"}],[\"wire\",[-200,152,0,0,16],{\"signal\":\"g4[1:0]\"}],[\"wire\",[-160,152,0,0,16],{\"signal\":\"p4[1:0]\"}],[\"wire\",[-176,152,0,-24,0]],[\"wire\",[-184,-56,0,-32,0]],[\"wire\",[-160,80,0,0,-16],{\"signal\":\"p3[3:1:2]\"}],[\"/user/cl\",[-416,120,0],{\"name\":\"stage4\"}],[\"wire\",[-472,88,0,0,-16],{\"signal\":\"g4[1]\"}],[\"wire\",[-384,112,0,16,0],{\"signal\":\"g4[0]\"}],[\"wire\",[-440,88,0,-32,0]],[\"wire\",[-384,120,0,16,0],{\"signal\":\"p4[0]\"}],[\"wire\",[-424,160,0,0,16],{\"signal\":\"p5\"}],[\"wire\",[-424,88,0,0,-16],{\"signal\":\"p4[1]\"}],[\"wire\",[-176,80,0,-32,0]],[\"/gates/or2\",[-488,160,4]],[\"/gates/and2\",[-424,176,4]],[\"wire\",[-440,160,0,-48,0]],[\"wire\",[-488,176,0,16,0]],[\"wire\",[-472,184,0,0,-8]],[\"wire\",[-424,192,0,0,16]],[\"wire\",[-424,192,0,24,0]],[\"wire\",[-400,160,0,0,32]],[\"wire\",[-400,88,0,0,-16],{\"signal\":\"c1[1]\"}],[\"wire\",[-384,136,0,16,0],{\"signal\":\"c1[0]\"}],[\"wire\",[-128,152,0,0,16],{\"signal\":\"c1[1:0]\"}],[\"wire\",[-136,152,0,8,0]],[\"wire\",[-136,80,0,24,0],{\"signal\":\"c2[3:1:2]\"}],[\"wire\",[-120,128,0,16,0],{\"signal\":\"c2[2:0:2]\"}],[\"wire\",[-144,-56,0,32,0],{\"signal\":\"c3[7:1:2]\"}],[\"wire\",[-128,-8,0,16,0],{\"signal\":\"c3[6:0:2]\"}],[\"wire\",[-144,16,0,32,0],{\"signal\":\"c2[3:0]\"}],[\"wire\",[-320,-56,0,32,0],{\"signal\":\"c4[15:1:2]\"}],[\"wire\",[-304,-8,0,16,0],{\"signal\":\"c4[14:0:2]\"}],[\"wire\",[-320,16,0,32,0],{\"signal\":\"c3[7:0]\"}],[\"wire\",[-480,-16,0,24,0],{\"signal\":\"c4[15:0]\"}],[\"text\",[-470,-57,0],{\"text\":\"v2: cla adder\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[31:0] B[31:0] cin\\n.group outputs S[31:0] cout\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\n\\n.plot X(g1[15:0])\\n.plot X(p1[15:0])\\n.plot X(c4[15:0])\\n.plot X(s[31:0])\\n\\n\\n/*\\n.plot X(cin)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot X(cout)\\n*/\\n\\n/*00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\n\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n*/\\n\\n\\n  \\n//01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n//00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\n\"]],\"icon\":[[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[88,0,4],{\"name\":\"cout\"}],[\"text\",[-19,0,0],{\"text\":\"A[31:0]\"}],[\"text\",[75,0,4],{\"text\":\"cout\"}],[\"terminal\",[-32,16,0],{\"name\":\"B[31:0]\"}],[\"text\",[-19,16,0],{\"text\":\"B[31:0]\"}],[\"terminal\",[88,16,4],{\"name\":\"S[31:0]\"}],[\"text\",[75,16,4],{\"text\":\"S[31:0]\"}],[\"terminal\",[-32,-16,0],{\"name\":\"cin\"}],[\"text\",[-19,-16,0],{\"text\":\"cin\"}],[\"line\",[-24,-29,0,0,57]],[\"line\",[-24,28,0,104,0]],[\"line\",[80,28,0,0,-56]],[\"line\",[80,-28,0,-104,0]],[\"text\",[21,-20,0],{\"text\":\"add32_v2\\n\"}]]},\"/user/cla1\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"/gates/xor2\",[-64,-112,0]],[\"/gates/xor2\",[-16,-120,0]],[\"wire\",[-16,-128,0,-64,0]],[\"wire\",[-64,-112,0,-16,0]],[\"wire\",[-64,-96,0,-16,0]],[\"wire\",[-16,-104,0,0,16]],[\"wire\",[32,-112,0,16,0]],[\"wire\",[-16,-88,0,64,0]],[\"/gates/and2\",[-16,-56,0]],[\"wire\",[-16,-56,0,-8,0],{\"signal\":\"a\"}],[\"wire\",[-16,-40,0,-8,0],{\"signal\":\"b\"}],[\"wire\",[32,-48,0,16,0]],[\"port\",[-80,-112,0],{\"signal\":\"b\"}],[\"port\",[-80,-96,0],{\"signal\":\"a\"}],[\"port\",[-80,-128,0],{\"signal\":\"cin\"}],[\"wire\",[-16,-120,0,0,-8]],[\"port\",[48,-112,4],{\"signal\":\"s\",\"direction\":\"out\"}],[\"port\",[48,-88,4],{\"signal\":\"p\",\"direction\":\"out\"}],[\"port\",[48,-48,4],{\"signal\":\"g\",\"direction\":\"out\"}]],\"test\":[[\"test\",\"\"]],\"icon\":[[\"terminal\",[-40,-8,1],{\"name\":\"b\"}],[\"terminal\",[8,-8,1],{\"name\":\"a\"}],[\"terminal\",[32,16,4],{\"name\":\"cin\"}],[\"terminal\",[16,40,3],{\"name\":\"s\"}],[\"terminal\",[-32,40,3],{\"name\":\"p\"}],[\"terminal\",[-48,40,3],{\"name\":\"g\"}],[\"text\",[-48,26,0],{\"text\":\"g\"}],[\"text\",[-31,26,0],{\"text\":\"p\"}],[\"text\",[15,27,0],{\"text\":\"s\"}],[\"text\",[10,15,0],{\"text\":\"cin\"}],[\"text\",[6,5,0],{\"text\":\"a\"}],[\"text\",[-41,7,0],{\"text\":\"b\"}],[\"text\",[-26,14,0],{\"text\":\"cla1\"}],[\"line\",[-56,32,0,80,0]],[\"line\",[24,32,0,0,-32]],[\"line\",[24,0,0,-80,0]],[\"line\",[-56,0,0,0,32]]]},\"/user/a31_v2investigate\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-120,344,0],{\"signal\":\"cin\"}],[\"port\",[-40,-96,1],{\"signal\":\"A[31:0]\"}],[\"port\",[-88,-96,1],{\"signal\":\"B[31:0]\"}],[\"port\",[16,-112,3],{\"signal\":\"s[31:0]\",\"direction\":\"out\"}],[\"port\",[-232,304,0],{\"signal\":\"cout\",\"direction\":\"out\"}],[\"/user/cla2\",[-64,-80,0]],[\"wire\",[-88,-72,0,0,-8],{\"signal\":\"b[31:2]\"}],[\"wire\",[-40,-72,0,0,-8],{\"signal\":\"a[31:2]\"}],[\"wire\",[-80,-24,0,0,8],{\"signal\":\"p1[15:1]\"}],[\"wire\",[-32,-24,0,0,8],{\"signal\":\"s[31:2]\"}],[\"wire\",[-96,0,0,0,-24],{\"signal\":\"g1[15:1]\"}],[\"/user/cl\",[120,24,0],{\"name\":\"stage1\"}],[\"wire\",[64,-8,0,0,-16],{\"signal\":\"g1[15:1:2]\"}],[\"wire\",[152,16,0,16,0],{\"signal\":\"g1[14:0:2]\"}],[\"wire\",[112,-8,0,0,-16],{\"signal\":\"p1[15:1:2]\"}],[\"wire\",[152,24,0,16,0],{\"signal\":\"p1[14:0:2]\"}],[\"wire\",[72,64,0,0,16],{\"signal\":\"g2[7:0]\"}],[\"wire\",[112,64,0,0,16],{\"signal\":\"p2[7:0]\"}],[\"wire\",[96,64,0,-24,0]],[\"/user/cl\",[-104,96,0],{\"name\":\"stage2\"}],[\"wire\",[-160,64,0,0,-16],{\"signal\":\"g2[7:1:2]\"}],[\"wire\",[-72,88,0,16,0],{\"signal\":\"g2[6:0:2]\"}],[\"wire\",[-112,64,0,0,-16],{\"signal\":\"p2[7:1:2]\"}],[\"wire\",[-72,96,0,16,0],{\"signal\":\"p2[6:0:2]\"}],[\"wire\",[-152,136,0,0,16],{\"signal\":\"g3[3:0]\"}],[\"wire\",[-112,136,0,0,16],{\"signal\":\"p3[3:0]\"}],[\"wire\",[-128,136,0,-24,0]],[\"wire\",[96,-8,0,-32,0]],[\"/user/cl\",[56,176,0],{\"name\":\"stage3\"}],[\"wire\",[0,144,0,0,-16],{\"signal\":\"g3[3:1:2]\"}],[\"wire\",[88,168,0,16,0],{\"signal\":\"g3[2:0:2]\"}],[\"wire\",[88,176,0,16,0],{\"signal\":\"p3[2:0:2]\"}],[\"wire\",[8,216,0,0,16],{\"signal\":\"g4[1:0]\"}],[\"wire\",[48,216,0,0,16],{\"signal\":\"p4[1:0]\"}],[\"wire\",[32,216,0,-24,0]],[\"wire\",[-128,64,0,-32,0]],[\"wire\",[48,144,0,0,-16],{\"signal\":\"p3[3:1:2]\"}],[\"/user/cl\",[-112,256,0],{\"name\":\"stage4\"}],[\"wire\",[-168,224,0,0,-16],{\"signal\":\"g4[1]\"}],[\"wire\",[-80,248,0,16,0],{\"signal\":\"g4[0]\"}],[\"wire\",[-136,224,0,-32,0]],[\"wire\",[-80,256,0,16,0],{\"signal\":\"p4[0]\"}],[\"wire\",[-120,296,0,0,16],{\"signal\":\"p5\"}],[\"wire\",[-120,224,0,0,-16],{\"signal\":\"p4[1]\"}],[\"wire\",[32,144,0,-32,0]],[\"/gates/or2\",[-184,296,4]],[\"/gates/and2\",[-120,312,4]],[\"wire\",[-136,296,0,-48,0]],[\"wire\",[-184,312,0,16,0]],[\"wire\",[-168,320,0,0,-8]],[\"wire\",[-120,328,0,0,16]],[\"wire\",[-120,328,0,24,0]],[\"wire\",[-96,296,0,0,32]],[\"wire\",[-96,224,0,0,-16],{\"signal\":\"c1[1]\"}],[\"wire\",[-80,272,0,16,0],{\"signal\":\"c1[0]\"}],[\"wire\",[80,216,0,0,16],{\"signal\":\"c1[1:0]\"}],[\"wire\",[72,216,0,8,0]],[\"wire\",[72,144,0,24,0],{\"signal\":\"c2[3:1:2]\"}],[\"wire\",[88,192,0,16,0],{\"signal\":\"c2[2:0:2]\"}],[\"wire\",[-88,64,0,32,0],{\"signal\":\"c3[7:1:2]\"}],[\"wire\",[-72,112,0,16,0],{\"signal\":\"c3[6:0:2]\"}],[\"wire\",[-88,136,0,32,0],{\"signal\":\"c2[3:0]\"}],[\"wire\",[136,-8,0,32,0],{\"signal\":\"c4[15:1:2]\"}],[\"wire\",[152,40,0,16,0],{\"signal\":\"c4[14:0:2]\"}],[\"wire\",[136,64,0,32,0],{\"signal\":\"c3[7:0]\"}],[\"wire\",[24,-160,0,24,0],{\"signal\":\"c4[15:0]\"}],[\"text\",[-102,-145,0],{\"text\":\"v2: cla adder\"}],[\"wire\",[-16,-48,0,16,0],{\"signal\":\"0'15\"}],[\"port\",[-184,-40,3],{\"signal\":\"s[1:0]\",\"direction\":\"out\"}],[\"/user/cla2\",[-216,-104,0]],[\"wire\",[-240,-96,0,0,-8],{\"signal\":\"b[1:0]\"}],[\"wire\",[-192,-96,0,0,-8],{\"signal\":\"a[1:0]\"}],[\"wire\",[-232,-48,0,0,8],{\"signal\":\"p1[0]\"}],[\"wire\",[-184,-48,0,0,8]],[\"wire\",[-248,-24,0,0,-24],{\"signal\":\"g1[0]\"}],[\"wire\",[-168,-72,0,16,0],{\"signal\":\"0'1\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[31:0] B[31:0] cin\\n.group outputs S[31:0] cout\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\n\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\n  \\n//01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n//00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\n\\n.plot X(cin)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot X(cout)\"]],\"icon\":[[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[88,0,4],{\"name\":\"cout\"}],[\"text\",[-19,0,0],{\"text\":\"A[31:0]\"}],[\"text\",[75,0,4],{\"text\":\"cout\"}],[\"terminal\",[-32,16,0],{\"name\":\"B[31:0]\"}],[\"text\",[-19,16,0],{\"text\":\"B[31:0]\"}],[\"terminal\",[88,16,4],{\"name\":\"S[31:0]\"}],[\"text\",[75,16,4],{\"text\":\"S[31:0]\"}],[\"terminal\",[-32,-16,0],{\"name\":\"cin\"}],[\"text\",[-19,-16,0],{\"text\":\"cin\"}],[\"line\",[-24,-29,0,0,57]],[\"line\",[-24,28,0,104,0]],[\"line\",[80,28,0,0,-56]],[\"line\",[80,-28,0,-104,0]],[\"text\",[21,-20,0],{\"text\":\"add32_v2\\n\"}]]},\"/user/cla2test\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-504,-48,1],{\"signal\":\"A[1:0]\"}],[\"port\",[-552,-48,1],{\"signal\":\"B[1:0]\"}],[\"port\",[-496,16,3],{\"signal\":\"s[1:0]\",\"direction\":\"out\"}],[\"/user/cla2\",[-528,-48,0]],[\"wire\",[-552,-40,0,0,-8]],[\"wire\",[-504,-40,0,0,-8]],[\"wire\",[-544,8,0,0,8],{\"signal\":\"p1\"}],[\"wire\",[-496,8,0,0,8]],[\"wire\",[-560,32,0,0,-24],{\"signal\":\"g1\"}],[\"wire\",[-480,-16,0,24,0],{\"signal\":\"c4\"}],[\"port\",[-456,-40,0],{\"signal\":\"cin\"}],[\"jumper\",[-456,-24,1]],[\"wire\",[-456,-40,0,0,16]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[1:0] B[1:0] cin\\n.group outputs S[1:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n01  01 0 HL\\n01  01 1 HH\\n\\n.plot X(g1)\\n.plot X(p1)\\n.plot X(c4)\\n.plot X(s[1:0])\\n\\n\\n/*\\n.plot X(cin)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot X(cout)\\n*/\\n\\n/*00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\n\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n*/\\n\\n\\n  \\n//01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n//00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\n\"]]},\"/user/cla4test\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-528,-88,1],{\"signal\":\"A[3:0]\"}],[\"port\",[-576,-88,1],{\"signal\":\"B[3:0]\"}],[\"port\",[-520,-24,3],{\"signal\":\"s[3:0]\",\"direction\":\"out\"}],[\"/user/cla2\",[-552,-88,0]],[\"wire\",[-576,-80,0,0,-8]],[\"wire\",[-528,-80,0,0,-8]],[\"wire\",[-568,-32,0,0,8],{\"signal\":\"p1[1:0]\"}],[\"wire\",[-520,-32,0,0,8]],[\"wire\",[-584,-8,0,0,-24],{\"signal\":\"g1[1:0]\"}],[\"wire\",[-504,-56,0,24,0],{\"signal\":\"c4[1:0]\"}],[\"port\",[-544,128,3],{\"signal\":\"cin\"}],[\"/user/cl\",[-560,88,0]],[\"wire\",[-584,56,0,0,-8],{\"signal\":\"g1[1]\"}],[\"wire\",[-568,56,0,0,-24],{\"signal\":\"p1[1]\"}],[\"wire\",[-544,56,0,0,-8],{\"signal\":\"c4[1]\"}],[\"wire\",[-528,80,0,8,0],{\"signal\":\"g1[0]\"}],[\"wire\",[-528,88,0,8,0],{\"signal\":\"p1[0]\"}],[\"wire\",[-528,104,0,8,0],{\"signal\":\"c4[0]\"}],[\"wire\",[-584,128,0,0,16],{\"signal\":\"g2\"}],[\"wire\",[-568,128,0,0,8],{\"signal\":\"p2\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[3:0] B[3:0] cin\\n.group outputs S[3:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n0001  0001 0 LLHL\\n//0001  0001 1 LLHH\\n\\n.plot X(g1[1:0])\\n.plot X(p1[1:0])\\n.plot X(c4[1:0])\\n.plot X(s[3:0])\"]]},\"/user/cla4test_v2\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-528,-88,1],{\"signal\":\"A[1:0]\"}],[\"port\",[-576,-88,1],{\"signal\":\"B[1:0]\"}],[\"port\",[-520,-24,3],{\"signal\":\"s[1:0]\",\"direction\":\"out\"}],[\"/user/cla2\",[-552,-88,0]],[\"wire\",[-576,-80,0,0,-8]],[\"wire\",[-528,-80,0,0,-8]],[\"wire\",[-568,-32,0,0,8],{\"signal\":\"pl\"}],[\"wire\",[-520,-32,0,0,8]],[\"wire\",[-584,-8,0,0,-24],{\"signal\":\"gl\"}],[\"wire\",[-504,-56,0,24,0],{\"signal\":\"cl\"}],[\"port\",[-544,128,3],{\"signal\":\"cin\"}],[\"/user/cl\",[-560,88,0]],[\"wire\",[-584,56,0,0,-8],{\"signal\":\"gh\"}],[\"wire\",[-568,56,0,0,-24],{\"signal\":\"ph\"}],[\"wire\",[-544,56,0,0,-8],{\"signal\":\"ch\"}],[\"wire\",[-528,80,0,8,0],{\"signal\":\"gl\"}],[\"wire\",[-528,88,0,8,0],{\"signal\":\"pl\"}],[\"wire\",[-528,104,0,8,0],{\"signal\":\"cl\"}],[\"wire\",[-584,128,0,0,16],{\"signal\":\"g\"}],[\"wire\",[-568,128,0,0,8],{\"signal\":\"p\"}],[\"port\",[-688,-88,1],{\"signal\":\"A[3:2]\"}],[\"port\",[-736,-88,1],{\"signal\":\"B[3:2]\"}],[\"port\",[-680,-24,3],{\"signal\":\"s[3:2]\",\"direction\":\"out\"}],[\"/user/cla2\",[-712,-88,0]],[\"wire\",[-736,-80,0,0,-8]],[\"wire\",[-688,-80,0,0,-8]],[\"wire\",[-728,-32,0,0,8],{\"signal\":\"ph\"}],[\"wire\",[-680,-32,0,0,8]],[\"wire\",[-744,-8,0,0,-24],{\"signal\":\"gh\"}],[\"wire\",[-664,-56,0,24,0],{\"signal\":\"ch\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[3:0] B[3:0] cin\\n.group outputs S[3:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n0001 0001 0 LLHL\\n0001 0001 1 LLHH\\n1111 0001 0 LLLL\\n\\n.plot X(s[3:0])\"]]},\"/user/cla4\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-528,-88,1],{\"signal\":\"A[1:0]\"}],[\"port\",[-576,-88,1],{\"signal\":\"B[1:0]\"}],[\"port\",[-520,-24,3],{\"signal\":\"s[1:0]\",\"direction\":\"out\"}],[\"/user/cla2\",[-552,-88,0]],[\"wire\",[-576,-80,0,0,-8]],[\"wire\",[-528,-80,0,0,-8]],[\"wire\",[-568,-32,0,0,8],{\"signal\":\"pl\"}],[\"wire\",[-520,-32,0,0,8]],[\"wire\",[-584,-8,0,0,-24],{\"signal\":\"gl\"}],[\"wire\",[-504,-56,0,24,0],{\"signal\":\"cl\"}],[\"port\",[-544,128,3],{\"signal\":\"cin\"}],[\"/user/cl\",[-560,88,0]],[\"wire\",[-584,56,0,0,-8],{\"signal\":\"gh\"}],[\"wire\",[-568,56,0,0,-24],{\"signal\":\"ph\"}],[\"wire\",[-544,56,0,0,-8],{\"signal\":\"ch\"}],[\"wire\",[-528,80,0,8,0],{\"signal\":\"gl\"}],[\"wire\",[-528,88,0,8,0],{\"signal\":\"pl\"}],[\"wire\",[-528,104,0,8,0],{\"signal\":\"cl\"}],[\"port\",[-688,-88,1],{\"signal\":\"A[3:2]\"}],[\"port\",[-736,-88,1],{\"signal\":\"B[3:2]\"}],[\"port\",[-680,-24,3],{\"signal\":\"s[3:2]\",\"direction\":\"out\"}],[\"/user/cla2\",[-712,-88,0]],[\"wire\",[-736,-80,0,0,-8]],[\"wire\",[-688,-80,0,0,-8]],[\"wire\",[-728,-32,0,0,8],{\"signal\":\"ph\"}],[\"wire\",[-680,-32,0,0,8]],[\"wire\",[-744,-8,0,0,-24],{\"signal\":\"gh\"}],[\"wire\",[-664,-56,0,24,0],{\"signal\":\"ch\"}],[\"port\",[-584,128,3],{\"signal\":\"g\",\"direction\":\"out\"}],[\"port\",[-568,128,3],{\"signal\":\"p\",\"direction\":\"out\"}]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[3:0] B[3:0] cin\\n.group outputs S[3:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n0001 0001 0 LLHL\\n0001 0001 1 LLHH\\n1111 0001 0 LLLL\\n\\n.plot X(s[3:0])\"]],\"icon\":[[\"terminal\",[-8,24,1],{\"name\":\"b[3:0]\"}],[\"terminal\",[40,24,1],{\"name\":\"a[3:0]\"}],[\"terminal\",[64,48,4],{\"name\":\"cin\"}],[\"terminal\",[48,72,3],{\"name\":\"s[3:0]\"}],[\"terminal\",[0,72,3],{\"name\":\"p\"}],[\"terminal\",[-16,72,3],{\"name\":\"g\"}],[\"text\",[-16,58,0],{\"text\":\"g\"}],[\"text\",[1,58,0],{\"text\":\"p\"}],[\"text\",[47,59,0],{\"text\":\"s\"}],[\"text\",[41,47,0],{\"text\":\"cin\"}],[\"text\",[38,37,0],{\"text\":\"a\"}],[\"text\",[-9,39,0],{\"text\":\"b\"}],[\"text\",[6,46,0],{\"text\":\"cla4\"}],[\"line\",[-24,64,0,80,0]],[\"line\",[56,64,0,0,-32]],[\"line\",[56,32,0,-80,0]],[\"line\",[-24,32,0,0,32]]]},\"/user/cla8\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-528,-88,1],{\"signal\":\"A[3:0]\"}],[\"port\",[-576,-88,1],{\"signal\":\"B[3:0]\"}],[\"port\",[-520,-24,3],{\"signal\":\"s[3:0]\",\"direction\":\"out\"}],[\"wire\",[-576,-80,0,0,-8]],[\"wire\",[-528,-80,0,0,-8]],[\"wire\",[-568,-32,0,0,8],{\"signal\":\"pl\"}],[\"wire\",[-520,-32,0,0,8]],[\"wire\",[-584,-8,0,0,-24],{\"signal\":\"gl\"}],[\"wire\",[-504,-56,0,24,0],{\"signal\":\"cl\"}],[\"port\",[-544,128,3],{\"signal\":\"cin\"}],[\"/user/cl\",[-560,88,0]],[\"wire\",[-584,56,0,0,-8],{\"signal\":\"gh\"}],[\"wire\",[-568,56,0,0,-24],{\"signal\":\"ph\"}],[\"wire\",[-544,56,0,0,-8],{\"signal\":\"ch\"}],[\"wire\",[-528,80,0,8,0],{\"signal\":\"gl\"}],[\"wire\",[-528,88,0,8,0],{\"signal\":\"pl\"}],[\"wire\",[-528,104,0,8,0],{\"signal\":\"cl\"}],[\"port\",[-688,-88,1],{\"signal\":\"A[7:4]\"}],[\"port\",[-736,-88,1],{\"signal\":\"B[7:4]\"}],[\"port\",[-680,-24,3],{\"signal\":\"s[7:4]\",\"direction\":\"out\"}],[\"wire\",[-736,-80,0,0,-8]],[\"wire\",[-688,-80,0,0,-8]],[\"wire\",[-728,-32,0,0,8],{\"signal\":\"ph\"}],[\"wire\",[-680,-32,0,0,8]],[\"wire\",[-744,-8,0,0,-24],{\"signal\":\"gh\"}],[\"wire\",[-664,-56,0,24,0],{\"signal\":\"ch\"}],[\"port\",[-584,128,3],{\"signal\":\"g\",\"direction\":\"out\"}],[\"port\",[-568,128,3],{\"signal\":\"p\",\"direction\":\"out\"}],[\"/user/cla4\",[-568,-104,0]],[\"/user/cla4\",[-728,-104,0]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[7:0] B[7:0] cin\\n.group outputs S[7:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000001 00000001 0 LLLLLLHL\\n00000001 00000001 1 LLLLLLHH\\n11111111 00000001 0 LLLLLLLL\\n\\n.plot X(s[7:0])\"]],\"icon\":[[\"terminal\",[-8,24,1],{\"name\":\"b[7:0]\"}],[\"terminal\",[40,24,1],{\"name\":\"a[7:0]\"}],[\"terminal\",[64,48,4],{\"name\":\"cin\"}],[\"terminal\",[48,72,3],{\"name\":\"s[7:0]\"}],[\"terminal\",[0,72,3],{\"name\":\"p\"}],[\"terminal\",[-16,72,3],{\"name\":\"g\"}],[\"text\",[-16,58,0],{\"text\":\"g\"}],[\"text\",[1,58,0],{\"text\":\"p\"}],[\"text\",[47,59,0],{\"text\":\"s\"}],[\"text\",[41,47,0],{\"text\":\"cin\"}],[\"text\",[38,37,0],{\"text\":\"a\"}],[\"text\",[-9,39,0],{\"text\":\"b\"}],[\"text\",[6,46,0],{\"text\":\"cla8\"}],[\"line\",[-24,64,0,80,0]],[\"line\",[56,64,0,0,-32]],[\"line\",[56,32,0,-80,0]],[\"line\",[-24,32,0,0,32]]]},\"/user/cla16\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-528,-88,1],{\"signal\":\"A[7:0]\"}],[\"port\",[-576,-88,1],{\"signal\":\"B[7:0]\"}],[\"port\",[-520,-24,3],{\"signal\":\"s[7:0]\",\"direction\":\"out\"}],[\"wire\",[-576,-80,0,0,-8]],[\"wire\",[-528,-80,0,0,-8]],[\"wire\",[-568,-32,0,0,8],{\"signal\":\"pl\"}],[\"wire\",[-520,-32,0,0,8]],[\"wire\",[-584,-8,0,0,-24],{\"signal\":\"gl\"}],[\"wire\",[-504,-56,0,24,0],{\"signal\":\"cl\"}],[\"port\",[-544,128,3],{\"signal\":\"cin\"}],[\"/user/cl\",[-560,88,0]],[\"wire\",[-584,56,0,0,-8],{\"signal\":\"gh\"}],[\"wire\",[-568,56,0,0,-24],{\"signal\":\"ph\"}],[\"wire\",[-544,56,0,0,-8],{\"signal\":\"ch\"}],[\"wire\",[-528,80,0,8,0],{\"signal\":\"gl\"}],[\"wire\",[-528,88,0,8,0],{\"signal\":\"pl\"}],[\"wire\",[-528,104,0,8,0],{\"signal\":\"cl\"}],[\"port\",[-688,-88,1],{\"signal\":\"A[15:8]\"}],[\"port\",[-736,-88,1],{\"signal\":\"B[15:8]\"}],[\"port\",[-680,-24,3],{\"signal\":\"s[15:8]\",\"direction\":\"out\"}],[\"wire\",[-736,-80,0,0,-8]],[\"wire\",[-688,-80,0,0,-8]],[\"wire\",[-728,-32,0,0,8],{\"signal\":\"ph\"}],[\"wire\",[-680,-32,0,0,8]],[\"wire\",[-744,-8,0,0,-24],{\"signal\":\"gh\"}],[\"wire\",[-664,-56,0,24,0],{\"signal\":\"ch\"}],[\"port\",[-584,128,3],{\"signal\":\"g\",\"direction\":\"out\"}],[\"port\",[-568,128,3],{\"signal\":\"p\",\"direction\":\"out\"}],[\"/user/cla8\",[-568,-104,0]],[\"/user/cla8\",[-728,-104,0]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[15:0] B[15:0] cin\\n.group outputs S[15:0]\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000000 00000001 00000000 00000001 0 LLLLLLLL LLLLLLHL\\n00000000 00000001 00000000 00000001 1 LLLLLLLL LLLLLLHH\\n11111111 11111111 00000000 00000001 0 LLLLLLLL LLLLLLLL\\n\\n.plot X(s[15:0])\"]],\"icon\":[[\"terminal\",[-8,24,1],{\"name\":\"b[15:0]\"}],[\"terminal\",[40,24,1],{\"name\":\"a[15:0]\"}],[\"terminal\",[64,48,4],{\"name\":\"cin\"}],[\"terminal\",[48,72,3],{\"name\":\"s[15:0]\"}],[\"terminal\",[0,72,3],{\"name\":\"p\"}],[\"terminal\",[-16,72,3],{\"name\":\"g\"}],[\"text\",[-16,58,0],{\"text\":\"g\"}],[\"text\",[1,58,0],{\"text\":\"p\"}],[\"text\",[47,59,0],{\"text\":\"s\"}],[\"text\",[41,47,0],{\"text\":\"cin\"}],[\"text\",[38,37,0],{\"text\":\"a\"}],[\"text\",[-9,39,0],{\"text\":\"b\"}],[\"text\",[6,46,0],{\"text\":\"cla16\"}],[\"line\",[-24,64,0,80,0]],[\"line\",[56,64,0,0,-32]],[\"line\",[56,32,0,-80,0]],[\"line\",[-24,32,0,0,32]]]},\"/user/add32_v3\":{\"properties\":{\"name\":{\"edit\":\"yes\",\"type\":\"name\",\"value\":\"\",\"label\":\"Name\"}},\"schematic\":[[\"port\",[-648,208,0],{\"signal\":\"cin\"}],[\"port\",[-760,168,0],{\"signal\":\"cout\",\"direction\":\"out\"}],[\"wire\",[-648,160,0,0,16]],[\"/gates/or2\",[-712,160,4]],[\"/gates/and2\",[-648,176,4]],[\"wire\",[-664,160,0,-48,0]],[\"wire\",[-712,176,0,16,0]],[\"wire\",[-696,184,0,0,-8]],[\"wire\",[-648,192,0,0,16]],[\"wire\",[-648,192,0,24,0]],[\"wire\",[-624,160,0,0,32]],[\"port\",[-608,-56,1],{\"signal\":\"A[15:0]\"}],[\"port\",[-656,-56,1],{\"signal\":\"B[15:0]\"}],[\"port\",[-600,8,3],{\"signal\":\"s[15:0]\",\"direction\":\"out\"}],[\"wire\",[-656,-48,0,0,-8]],[\"wire\",[-608,-48,0,0,-8]],[\"wire\",[-648,0,0,0,8],{\"signal\":\"pl\"}],[\"wire\",[-600,0,0,0,8]],[\"wire\",[-664,24,0,0,-24],{\"signal\":\"gl\"}],[\"wire\",[-584,-24,0,24,0],{\"signal\":\"cl\"}],[\"/user/cl\",[-640,120,0]],[\"wire\",[-664,88,0,0,-8],{\"signal\":\"gh\"}],[\"wire\",[-648,88,0,0,-24],{\"signal\":\"ph\"}],[\"wire\",[-624,88,0,0,-8],{\"signal\":\"ch\"}],[\"wire\",[-608,112,0,8,0],{\"signal\":\"gl\"}],[\"wire\",[-608,120,0,8,0],{\"signal\":\"pl\"}],[\"wire\",[-608,136,0,8,0],{\"signal\":\"cl\"}],[\"port\",[-768,-56,1],{\"signal\":\"A[31:16]\"}],[\"port\",[-816,-56,1],{\"signal\":\"B[31:16]\"}],[\"port\",[-760,8,3],{\"signal\":\"s[31:16]\",\"direction\":\"out\"}],[\"wire\",[-816,-48,0,0,-8]],[\"wire\",[-768,-48,0,0,-8]],[\"wire\",[-808,0,0,0,8],{\"signal\":\"ph\"}],[\"wire\",[-760,0,0,0,8]],[\"wire\",[-824,24,0,0,-24],{\"signal\":\"gh\"}],[\"wire\",[-744,-24,0,24,0],{\"signal\":\"ch\"}],[\"/user/cla16\",[-648,-72,0]],[\"/user/cla16\",[-808,-72,0]]],\"test\":[[\"test\",\".power Vdd=1\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\n\\n.group inputs A[31:0] B[31:0] cin\\n.group outputs S[31:0] cout\\n\\n.mode gate\\n\\n.cycle assert inputs tran 99n sample outputs tran 1n\\n\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\n\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\n \\n01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\n00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\n\\n.plot X(cin)\\n.plot X(A[31:0])\\n.plot X(B[31:0])\\n.plot X(S[31:0])\\n.plot X(cout)\\n\\n\\n\"]],\"icon\":[[\"terminal\",[-32,0,0],{\"name\":\"A[31:0]\"}],[\"terminal\",[88,0,4],{\"name\":\"cout\"}],[\"text\",[-19,0,0],{\"text\":\"A[31:0]\"}],[\"text\",[75,0,4],{\"text\":\"cout\"}],[\"terminal\",[-32,16,0],{\"name\":\"B[31:0]\"}],[\"text\",[-19,16,0],{\"text\":\"B[31:0]\"}],[\"terminal\",[88,16,4],{\"name\":\"S[31:0]\"}],[\"text\",[75,16,4],{\"text\":\"S[31:0]\"}],[\"terminal\",[-32,-16,0],{\"name\":\"cin\"}],[\"text\",[-19,-16,0],{\"text\":\"cin\"}],[\"line\",[-24,-29,0,0,57]],[\"line\",[-24,28,0,104,0]],[\"line\",[80,28,0,0,-56]],[\"line\",[80,-28,0,-104,0]],[\"text\",[21,-20,0],{\"text\":\"add32_v3\\n\"}]]}}","/ComputationStructures/lectures/tradeoffs/tradeoffs.html":"{}","/ComputationStructures/notes/models/notes.html":"{}","/ComputationStructures/lectures/info/info.html":"{}","/ComputationStructures/videos/models/lecture.html":"{}","/ComputationStructures/videos/tradeoffs/lecture.html":"{}","/ComputationStructures/notes/timesharing/notes.html":"{}","/ComputationStructures/videos/combinational/lecture.html":"{}","/ComputationStructures/notes/combinational_logic/notes.html":"{}","/ComputationStructures/lectures/performance/performance.html":"{}","/ComputationStructures/lectures/cmos/cmos.html":"{}","/ComputationStructures/notes/arbitration/notes.html":"{}","/ComputationStructures/lectures/stacks/stacks.html":"{}","/ComputationStructures/lectures/wrapup/wrapup.html":"{}","/ComputationStructures/exercises/sandboxes/jade.html":"{\"jade\":{\"id\":\"jade\",\"value\":\"{\\\"tests\\\":{\\\"/user/testy\\\":\\\"Error detected: invalid test specification<li>Test line does not specify 4 signals: 1 1 1 1 LHLH<li>No tests specified!\\\"},\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/user/testy\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"memory\\\",[-24,-8,0],{\\\"naddr\\\":\\\"4\\\",\\\"ndata\\\":\\\"4\\\",\\\"name\\\":\\\"rom\\\",\\\"contents\\\":\\\"0b0100 //D -> E \\\\n0b1000 //  -> F\\\\n0b0000 //B -> D\\\\n0b1110 //  -> C\\\\n0b1000 //E -> F\\\\n0b1110 //  -> C\\\\n0b0111 //A -> A\\\\n0b0011 //  -> B\\\\n0b0110 //F -> A\\\\n0b1000 //  -> F\\\\n// unused locations\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0001 //C -> D\\\\n0b0101 //  -> E\\\"}],[\\\"wire\\\",[-24,0,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-24,8,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-24,16,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"port\\\",[-40,-8,0],{\\\"signal\\\":\\\"romin\\\"}],[\\\"port\\\",[56,-8,4],{\\\"signal\\\":\\\"romout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[48,-8,0,8,0],{\\\"width\\\":\\\"4\\\"}],[\\\"wire\\\",[-24,-8,0,-16,0],{\\\"width\\\":\\\"4\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs romint[3,0]\\\\n.group outputs romout[3,0]\\\\n.mode gate\\\\n\\\\n.cycle CLK=0 assert inputs tran 10n CLK=1 tran 20n CLK=0 tran 5n sample outputs tran 5n\\\\n\\\\n1 1 1 1 LHLH\\\\n\\\\n.plot CLK\\\\n.plot RESET\\\\n.plot IN\\\\n.plot U\\\\n.plot V\\\\n\\\"]]}},\\\"last_saved\\\":1636376010841}\",\"check\":\"right\"}}","/ComputationStructures/notes/compiled/notes.html":"{}","/ComputationStructures/exercises/sandboxes/tmsim.html":"{\"tmsim\":{\"id\":\"tmsim\"}}","/ComputationStructures/videos/sequential/lecture.html":"{}","/ComputationStructures/exercises/alu/lab.html":"{\"alu\":{\"id\":\"alu\",\"value\":\"{\\\"tests\\\":{\\\"/alu/bool\\\":\\\"passed c7df8e684087d93fba24badbd0072cc5 d41d8cd98f00b204e9800998ecf8427e 29592.80303030302\\\",\\\"/alu/FA\\\":\\\"passed 86a2cd0d0f10dacbe71e392f400cee8e d41d8cd98f00b204e9800998ecf8427e 12886597.93814433\\\",\\\"/user/add32\\\":\\\"passed 03f52f571d194b517801b868ce42d9da d41d8cd98f00b204e9800998ecf8427e 64432.98969072165\\\",\\\"/user/nor32\\\":\\\"passed 952c644be1591c29fdfc42c2d2d5d480 d41d8cd98f00b204e9800998ecf8427e 136165.57734204797\\\",\\\"/user/shiftll32\\\":\\\"passed f47e66c2e43bf583d499194e40d08c82 d41d8cd98f00b204e9800998ecf8427e 38340.618050762976\\\",\\\"/user/rev32\\\":\\\"passed 2a5e74f23a0f434ff29d0e40f0f0b8ac d41d8cd98f00b204e9800998ecf8427e Infinity\\\",\\\"/alu/shift\\\":\\\"passed 5d334e9aa8f331b3e2b87f0497c8219a d41d8cd98f00b204e9800998ecf8427e 1567.7052714089732\\\",\\\"/alu/alu\\\":\\\"passed 936fccfa4372c323a3f696b9fa670991 d41d8cd98f00b204e9800998ecf8427e 367.186455813516\\\",\\\"/alu/arith\\\":\\\"passed 4155928fdb4d7f81d0bd0e143204a6b3 d41d8cd98f00b204e9800998ecf8427e 2870.1157804705854\\\",\\\"/user/alu_v2\\\":\\\"passed 936fccfa4372c323a3f696b9fa670991 d41d8cd98f00b204e9800998ecf8427e 367.186455813516\\\",\\\"/user/cla2\\\":\\\"passed 5d68f630a76f1a579cea296c3b76be0a d41d8cd98f00b204e9800998ecf8427e 5025125.628140705\\\",\\\"/user/add32_v2\\\":\\\"Error detected: <li>Test 1: Expected s[16]=L at 99ns.<li>Test 1: Expected s[1]=H at 99ns.\\\",\\\"/user/cla2test\\\":\\\"passed e9ac817b5ca3ab6a51915f7277c7ecfd d41d8cd98f00b204e9800998ecf8427e 2512562.8140703524\\\",\\\"/user/cla4test\\\":\\\"Error detected: <li>Test 1: Expected s[1]=H at 99ns.<li>Test 1: Expected s[2]=L at 99ns.\\\",\\\"/user/cla4test_v2\\\":\\\"passed f3277910460bedee5775fd917d44714f d41d8cd98f00b204e9800998ecf8427e 719942.4046076313\\\",\\\"/user/cla4\\\":\\\"passed f3277910460bedee5775fd917d44714f d41d8cd98f00b204e9800998ecf8427e 719942.4046076313\\\",\\\"/user/cla8\\\":\\\"passed 8809bc53b3b87a75f3d05f683fd37048 d41d8cd98f00b204e9800998ecf8427e 336360.57854019507\\\",\\\"/user/cla16\\\":\\\"passed 46a5db8bc001cf64cfeb52c459004bad d41d8cd98f00b204e9800998ecf8427e 162839.92835043152\\\",\\\"/user/add32_v3\\\":\\\"passed 8872d16d40d19551624eb7d35ce5cd4d d41d8cd98f00b204e9800998ecf8427e 26549.847338377807\\\",\\\"/user/arith_v2\\\":\\\"passed 4155928fdb4d7f81d0bd0e143204a6b3 d41d8cd98f00b204e9800998ecf8427e 2288.015375463324\\\"},\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/alu/arith\\\":{\\\"schematic\\\":[[\\\"port\\\",[-32,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-88,-32,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-48,0],{\\\"signal\\\":\\\"AFN\\\"}],[\\\"port\\\",[88,-72,4],{\\\"signal\\\":\\\"S[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[80,-224,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,8,4],{\\\"signal\\\":\\\"N\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,-32,4],{\\\"signal\\\":\\\"Z\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[80,8,0,-8,0],{\\\"signal\\\":\\\"S[31]\\\"}],[\\\"jumper\\\",[80,8,0]],[\\\"/user/nor32\\\",[40,-32,0],{\\\"name\\\":\\\"nor32\\\"}],[\\\"/user/add32\\\",[0,-88,0]],[\\\"/gates/xor2\\\",[-80,-48,0]],[\\\"wire\\\",[88,-48,0,-80,0]],[\\\"wire\\\",[-32,-40,0,0,-32],{\\\"signal\\\":\\\"xb[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-32,-104,0,-56,0]],[\\\"wire\\\",[-88,-104,0,0,56]],[\\\"wire\\\",[-88,-48,0,8,0]],[\\\"wire\\\",[-80,-32,0,-8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[88,-72,0,0,24]],[\\\"wire\\\",[8,-48,0,0,16]],[\\\"/gates/and3\\\",[-16,-248,0]],[\\\"/gates/inverter\\\",[-48,-216,0]],[\\\"wire\\\",[-48,-216,0,-8,0],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"/gates/or2\\\",[32,-232,0]],[\\\"/gates/and3\\\",[-16,-168,0]],[\\\"wire\\\",[-48,-216,0,0,48]],[\\\"wire\\\",[-48,-168,0,32,0]],[\\\"/gates/inverter\\\",[-48,-152,0]],[\\\"/gates/inverter\\\",[-48,-136,0]],[\\\"wire\\\",[-48,-152,0,-32,0],{\\\"signal\\\":\\\"xb[31]\\\"}],[\\\"wire\\\",[-48,-136,0,-48,0],{\\\"signal\\\":\\\"a[31]\\\"}],[\\\"wire\\\",[-96,-136,0,0,-112]],[\\\"wire\\\",[-16,-248,0,-80,0]],[\\\"wire\\\",[-80,-152,0,0,-80]],[\\\"wire\\\",[-16,-232,0,-64,0]],[\\\"wire\\\",[32,-216,0,0,64]]]},\\\"/alu/bool\\\":{\\\"schematic\\\":[[\\\"port\\\",[0,-72,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-88,-56,0],{\\\"signal\\\":\\\"BFN[3:0]\\\"}],[\\\"port\\\",[-88,-72,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"/gates/mux4\\\",[-16,-96,0]],[\\\"wire\\\",[-8,-32,0,-16,0],{\\\"signal\\\":\\\"B[31:0], A[31:0]\\\"}],[\\\"wire\\\",[-16,-48,0,-8,0],{\\\"signal\\\":\\\"BFN[0]\\\"}],[\\\"wire\\\",[-16,-64,0,-8,0],{\\\"signal\\\":\\\"BFN[1]\\\"}],[\\\"wire\\\",[-16,-80,0,-8,0],{\\\"signal\\\":\\\"BFN[2]\\\"}],[\\\"wire\\\",[-16,-96,0,-8,0],{\\\"signal\\\":\\\"BFN[3]\\\"}]]},\\\"/alu/FA\\\":{\\\"schematic\\\":[[\\\"port\\\",[-112,-48,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-32,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-16,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-136,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-32,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/xor2\\\",[-72,-48,0]],[\\\"wire\\\",[-24,-16,0,0,-8]],[\\\"/gates/nand3\\\",[-24,-152,0]],[\\\"/gates/nand2\\\",[-72,-184,0]],[\\\"/gates/nand2\\\",[-72,-104,0]],[\\\"/gates/nand2\\\",[-72,-144,0]],[\\\"wire\\\",[-24,-176,0,0,24]],[\\\"wire\\\",[-24,-120,0,0,24]],[\\\"wire\\\",[-72,-144,0,-8,0]],[\\\"wire\\\",[-80,-144,0,0,96]],[\\\"wire\\\",[-112,-48,0,32,0]],[\\\"wire\\\",[-72,-48,0,-8,0]],[\\\"wire\\\",[-72,-128,0,-16,0]],[\\\"wire\\\",[-88,-128,0,0,96]],[\\\"wire\\\",[-112,-32,0,24,0]],[\\\"wire\\\",[-72,-32,0,-16,0]],[\\\"wire\\\",[-72,-128,0,0,24]],[\\\"wire\\\",[-72,-168,0,0,24]],[\\\"wire\\\",[-72,-88,0,-24,0]],[\\\"wire\\\",[-72,-184,0,-24,0]],[\\\"wire\\\",[-96,-184,0,0,96]],[\\\"wire\\\",[-96,-88,0,0,72]],[\\\"wire\\\",[-112,-16,0,16,0]],[\\\"wire\\\",[-24,-16,0,-72,0]],[\\\"/gates/xor2\\\",[-24,-40,0]]]},\\\"/alu/cmp\\\":{\\\"schematic\\\":[[\\\"port\\\",[-104,88,0],{\\\"signal\\\":\\\"V\\\"}],[\\\"port\\\",[-104,72,0],{\\\"signal\\\":\\\"N\\\"}],[\\\"port\\\",[16,-16,4],{\\\"signal\\\":\\\"Y[31:1]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[16,24,2],{\\\"signal\\\":\\\"Y[0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[8,-16,0]],[\\\"wire\\\",[8,-16,0,-8,0],{\\\"signal\\\":\\\"0'31\\\"}],[\\\"port\\\",[-104,8,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-72,-16,0],{\\\"signal\\\":\\\"CFN[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,24,6]],[\\\"/gates/xor2\\\",[-104,72,0]],[\\\"/gates/or2\\\",[-96,16,0]],[\\\"wire\\\",[-40,-8,0,0,-8],{\\\"signal\\\":\\\"cfn[1]\\\"}],[\\\"/gates/mux2\\\",[0,16,0]],[\\\"wire\\\",[8,48,6,0,-8],{\\\"signal\\\":\\\"cfn[0]\\\"}],[\\\"wire\\\",[-32,16,6,32,0]],[\\\"wire\\\",[-56,80,0,40,0]],[\\\"wire\\\",[0,32,0,-16,0]],[\\\"wire\\\",[-96,16,0,0,-8]],[\\\"wire\\\",[-48,8,0,-48,0]],[\\\"wire\\\",[-96,8,0,-8,0]],[\\\"wire\\\",[-96,32,0,0,16]],[\\\"wire\\\",[-96,48,0,40,0]],[\\\"wire\\\",[-56,80,0,0,-32]],[\\\"wire\\\",[-16,32,0,0,48]],[\\\"text\\\",[-100,-49,0],{\\\"text\\\":\\\"signals arrive in order: \\\\nn,z,v\\\"}]]},\\\"/alu/shift\\\":{\\\"schematic\\\":[[\\\"port\\\",[-120,-104,6],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-104,-48,0],{\\\"signal\\\":\\\"B[4:0]\\\"}],[\\\"port\\\",[8,-120,0],{\\\"signal\\\":\\\"SFN[1:0]\\\"}],[\\\"port\\\",[72,-48,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-104,-64,0,-16,0],{\\\"signal\\\":\\\"sfn[1]\\\"}],[\\\"/gates/mux2\\\",[-120,-88,6]],[\\\"wire\\\",[-112,-120,6,0,16],{\\\"signal\\\":\\\"sfn[0]\\\"}],[\\\"wire\\\",[-120,-88,0,-8,0],{\\\"signal\\\":\\\"A[0:31]\\\"}],[\\\"wire\\\",[-104,-80,0,0,-16],{\\\"width\\\":\\\"32\\\"}],[\\\"/gates/mux2\\\",[56,-56,6]],[\\\"wire\\\",[64,-88,6,0,16],{\\\"signal\\\":\\\"sfn[0]\\\"}],[\\\"wire\\\",[56,-56,0,-8,0],{\\\"signal\\\":\\\"so[0:31]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[72,-48,0,0,-16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[0,-72,0,56,0],{\\\"width\\\":\\\"32\\\",\\\"signal\\\":\\\"so[31:0]\\\"}],[\\\"/user/shiftl32\\\",[-64,-56,0]]]},\\\"/user/nor32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/nor2\\\",[-24,144,0]],[\\\"/gates/nor4\\\",[-24,-16,0]],[\\\"wire\\\",[-24,0,0,-16,0],{\\\"signal\\\":\\\"in[23:16]\\\"}],[\\\"wire\\\",[-24,16,0,-16,0],{\\\"signal\\\":\\\"in[15:8]\\\"}],[\\\"wire\\\",[-24,32,0,-16,0],{\\\"signal\\\":\\\"in[7:0]\\\"}],[\\\"wire\\\",[24,8,0,16,0],{\\\"signal\\\":\\\"layer1[7:0]\\\"}],[\\\"wire\\\",[-24,-16,0,-16,0],{\\\"signal\\\":\\\"in[31:24]\\\"}],[\\\"/gates/nand4\\\",[-24,64,0]],[\\\"wire\\\",[-24,64,0,-16,0],{\\\"signal\\\":\\\"layer1[7:6]\\\"}],[\\\"wire\\\",[-24,80,0,-16,0],{\\\"signal\\\":\\\"layer1[5:4]\\\"}],[\\\"wire\\\",[-24,96,0,-16,0],{\\\"signal\\\":\\\"layer1[3:2]\\\"}],[\\\"wire\\\",[-24,112,0,-16,0],{\\\"signal\\\":\\\"layer1[1:0]\\\"}],[\\\"wire\\\",[24,88,0,16,0],{\\\"signal\\\":\\\"layer2[1:0]\\\"}],[\\\"wire\\\",[-24,160,0,-16,0],{\\\"signal\\\":\\\"layer2[0]\\\"}],[\\\"wire\\\",[-24,144,0,-16,0],{\\\"signal\\\":\\\"layer2[1]\\\"}],[\\\"port\\\",[24,152,4],{\\\"signal\\\":\\\"out\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-32,-48,0],{\\\"signal\\\":\\\"in[31:0]\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs in[31:0]\\\\n.group outputs out\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n11111111000000001111111100000000 L \\\\n00000000000000000000000000000000 H \\\\n10000000000000000000000000000000 L\\\\n\\\\n10000000000000000000000000000000 L\\\\n01000000000000000000000000000000 L\\\\n00100000000000000000000000000000 L\\\\n00010000000000000000000000000000 L\\\\n00001000000000000000000000000000 L\\\\n00000100000000000000000000000000 L \\\\n00000010000000000000000000000000 L\\\\n00000001000000000000000000000000 L\\\\n00000000100000000000000000000000 L\\\\n00000000010000000000000000000000 L\\\\n00000000001000000000000000000000 L\\\\n00000000000100000000000000000000 L\\\\n00000000000010000000000000000000 L\\\\n00000000000001000000000000000000 L\\\\n00000000000000100000000000000000 L \\\\n00000000000000010000000000000000 L\\\\n00000000000000001000000000000000 L\\\\n00000000000000000100000000000000 L\\\\n00000000000000000010000000000000 L\\\\n00000000000000000001000000000000 L\\\\n00000000000000000000100000000000 L\\\\n00000000000000000000010000000000 L\\\\n00000000000000000000001000000000 L\\\\n00000000000000000000000100000000 L\\\\n00000000000000000000000010000000 L\\\\n00000000000000000000000001000000 L\\\\n00000000000000000000000000100000 L\\\\n00000000000000000000000000010000 L\\\\n00000000000000000000000000001000 L\\\\n00000000000000000000000000000100 L\\\\n00000000000000000000000000000010 L\\\\n00000000000000000000000000000001 L\\\\n\\\\n11111111111111111111111111111111 L\\\\n\\\\n.plot X(in[31:0])\\\\n.plot X(out)\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"in[31:0]\\\"}],[\\\"terminal\\\",[48,0,4],{\\\"name\\\":\\\"out\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"in[31:0]\\\"}],[\\\"text\\\",[35,0,4],{\\\"text\\\":\\\"out\\\"}],[\\\"line\\\",[-24,-8,0,64,0]],[\\\"line\\\",[40,-8,0,0,16]],[\\\"line\\\",[40,19,0,-64,0]],[\\\"line\\\",[-24,8,0,0,-16]],[\\\"property\\\",[-4,12,0],{\\\"format\\\":\\\"{name}\\\"}],[\\\"line\\\",[-24,8,0,0,11]],[\\\"line\\\",[40,19,0,0,-12]]]},\\\"/user/add32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-32,-48,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/alu/FA\\\",[128,48,7]],[\\\"wire\\\",[136,24,0,0,-16],{\\\"signal\\\":\\\"B[0]\\\"}],[\\\"wire\\\",[120,24,0,0,-16],{\\\"signal\\\":\\\"A[0]\\\"}],[\\\"wire\\\",[96,48,0,-16,0],{\\\"signal\\\":\\\"c[1]\\\"}],[\\\"wire\\\",[160,48,0,16,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[128,72,0,0,16],{\\\"signal\\\":\\\"s[0]\\\"}],[\\\"/alu/FA\\\",[-40,96,7]],[\\\"wire\\\",[-48,72,0,0,-16],{\\\"signal\\\":\\\"A[30:1]\\\"}],[\\\"wire\\\",[-72,96,0,-16,0],{\\\"signal\\\":\\\"c[31:2]\\\"}],[\\\"wire\\\",[-8,96,0,16,0],{\\\"signal\\\":\\\"c[30:1]\\\"}],[\\\"wire\\\",[-40,120,0,0,16],{\\\"signal\\\":\\\"s[30:1]\\\"}],[\\\"wire\\\",[-32,72,0,0,-8],{\\\"signal\\\":\\\"B[30:1]\\\"}],[\\\"/alu/FA\\\",[-160,40,7]],[\\\"wire\\\",[-168,16,0,0,-16],{\\\"signal\\\":\\\"A[31]\\\"}],[\\\"wire\\\",[-192,40,0,-16,0],{\\\"signal\\\":\\\"cout\\\"}],[\\\"wire\\\",[-128,40,0,16,0],{\\\"signal\\\":\\\"c[31]\\\"}],[\\\"wire\\\",[-160,64,0,0,16],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"wire\\\",[-152,16,0,0,-8],{\\\"signal\\\":\\\"B[31]\\\"}],[\\\"port\\\",[-32,-32,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-32,-16,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[64,-48,0],{\\\"signal\\\":\\\"s[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,-32,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32\\\\n\\\"}]]},\\\"/user/shiftl32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/mux2\\\",[-120,-48,0],{\\\"name\\\":\\\"mxsh16\\\"}],[\\\"port\\\",[24,-56,0],{\\\"signal\\\":\\\"a[31:0]\\\"}],[\\\"port\\\",[24,-32,0],{\\\"signal\\\":\\\"b[4:0]\\\"}],[\\\"port\\\",[24,88,4],{\\\"signal\\\":\\\"sl[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-120,-48,0,-8,0],{\\\"signal\\\":\\\"a[15:0],ext#16\\\"}],[\\\"wire\\\",[-120,-32,0,-8,0],{\\\"signal\\\":\\\"a[31:0]\\\"}],[\\\"wire\\\",[-112,-16,0,-16,0],{\\\"signal\\\":\\\"b[4]\\\"}],[\\\"wire\\\",[-104,-40,0,16,0],{\\\"signal\\\":\\\"q[31:0]\\\"}],[\\\"/gates/mux2\\\",[8,80,0],{\\\"name\\\":\\\"mxsh1\\\"}],[\\\"wire\\\",[8,80,0,-8,0],{\\\"signal\\\":\\\"t[30:0],ext\\\"}],[\\\"wire\\\",[8,96,0,-8,0],{\\\"signal\\\":\\\"t[31:0]\\\"}],[\\\"wire\\\",[16,112,0,-16,0],{\\\"signal\\\":\\\"b[0]\\\"}],[\\\"/gates/mux2\\\",[-120,16,0],{\\\"name\\\":\\\"mxsh8\\\"}],[\\\"wire\\\",[-120,16,0,-8,0],{\\\"signal\\\":\\\"q[23:0],ext#8\\\"}],[\\\"wire\\\",[-120,32,0,-8,0],{\\\"signal\\\":\\\"q[31:0]\\\"}],[\\\"wire\\\",[-112,48,0,-16,0],{\\\"signal\\\":\\\"b[3]\\\"}],[\\\"wire\\\",[-104,24,0,16,0],{\\\"signal\\\":\\\"r[31:0]\\\"}],[\\\"/gates/mux2\\\",[8,16,0],{\\\"name\\\":\\\"mxsh4\\\"}],[\\\"wire\\\",[8,16,0,-8,0],{\\\"signal\\\":\\\"r[27:0],ext#4\\\"}],[\\\"wire\\\",[8,32,0,-8,0],{\\\"signal\\\":\\\"r[31:0]\\\"}],[\\\"wire\\\",[16,48,0,-16,0],{\\\"signal\\\":\\\"b[2]\\\"}],[\\\"wire\\\",[24,24,0,16,0],{\\\"signal\\\":\\\"s[31:0]\\\"}],[\\\"/gates/mux2\\\",[-120,80,0],{\\\"name\\\":\\\"mxsh2\\\"}],[\\\"wire\\\",[-120,80,0,-8,0],{\\\"signal\\\":\\\"s[29:0],ext#2\\\"}],[\\\"wire\\\",[-120,96,0,-8,0],{\\\"signal\\\":\\\"s[31:0]\\\"}],[\\\"wire\\\",[-112,112,0,-16,0],{\\\"signal\\\":\\\"b[1]\\\"}],[\\\"wire\\\",[-104,88,0,16,0],{\\\"signal\\\":\\\"t[31:0]\\\"}],[\\\"port\\\",[-104,-104,0],{\\\"signal\\\":\\\"arith\\\"}],[\\\"/gates/mux2\\\",[-112,-136,0]],[\\\"wire\\\",[-112,-120,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-96,-128,0,16,0],{\\\"signal\\\":\\\"ext\\\"}],[\\\"wire\\\",[-112,-136,0,-16,0],{\\\"signal\\\":\\\"a[0]\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs a[31:0] b[4:0] arith\\\\n.group outputs sl[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000000000000000000000000001 00001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL\\\\n00000000000000000000000000000001 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\\\n11111111111111111111111111111111 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\\\n\\\\n00000000000000000000000000000001 00001 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHH\\\\n00000000000000000000000000000001 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\\\n11111111111111111111111111111111 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\\\n\\\\n.plot X(a[31:0])\\\\n.plot X(b[4:0])\\\\n.plot X(sl[31:0])\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-40,-24,0],{\\\"name\\\":\\\"a[31:0]\\\"}],[\\\"terminal\\\",[-40,8,0],{\\\"name\\\":\\\"b[4:0]\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"sl[31:0]\\\"}],[\\\"text\\\",[5,-2,0],{\\\"text\\\":\\\"SL32\\\"}],[\\\"property\\\",[25,17,0],{\\\"format\\\":\\\"{name}\\\"}],[\\\"text\\\",[-30,-23,0],{\\\"text\\\":\\\"a[31:0]\\\"}],[\\\"text\\\",[-24,8,0],{\\\"text\\\":\\\"b[4:0]\\\"}],[\\\"text\\\",[53,-14,4],{\\\"text\\\":\\\"sl[31:0]\\\"}],[\\\"line\\\",[-32,-32,0,88,0]],[\\\"line\\\",[56,-32,0,0,56]],[\\\"line\\\",[56,24,0,-88,0]],[\\\"line\\\",[-32,24,0,0,-56]],[\\\"terminal\\\",[-40,-8,0],{\\\"name\\\":\\\"arith\\\"}],[\\\"text\\\",[-26,-8,0],{\\\"text\\\":\\\"arith\\\"}]]},\\\"/adder/xor2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}}},\\\"/adder/nand2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}}},\\\"/adder/nand3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}}},\\\"/adder/fa\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"port\\\",[-112,-40,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-24,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-8,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-112,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-24,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/adder/xor2\\\",[-72,-40,0]],[\\\"/adder/xor2\\\",[-24,-32,0]],[\\\"wire\\\",[-40,-16,0,0,8]],[\\\"/adder/nand2\\\",[-72,-120,0]],[\\\"/adder/nand2\\\",[-72,-88,0]],[\\\"/adder/nand2\\\",[-72,-152,0]],[\\\"wire\\\",[-24,-144,0,0,16]],[\\\"wire\\\",[-88,-40,0,0,-80]],[\\\"wire\\\",[-88,-120,0,16,0]],[\\\"wire\\\",[-72,-120,0,0,-16]],[\\\"wire\\\",[-112,-40,0,24,0]],[\\\"wire\\\",[-72,-104,0,-24,0]],[\\\"wire\\\",[-96,-104,0,0,80]],[\\\"wire\\\",[-112,-24,0,16,0]],[\\\"wire\\\",[-72,-88,0,0,-16]],[\\\"wire\\\",[-72,-72,0,-32,0]],[\\\"wire\\\",[-104,-72,0,0,64]],[\\\"wire\\\",[-40,-8,0,-64,0]],[\\\"wire\\\",[-112,-8,0,8,0]],[\\\"wire\\\",[-104,-72,0,0,-80]],[\\\"wire\\\",[-72,-152,0,-32,0]],[\\\"/adder/nand3\\\",[-24,-128,0]],[\\\"wire\\\",[-24,-80,0,0,-16]],[\\\"wire\\\",[-40,-16,0,16,0]],[\\\"wire\\\",[-96,-24,0,24,0]],[\\\"wire\\\",[-88,-40,0,16,0]]],\\\"icon\\\":[[\\\"terminal\\\",[-24,-8,0],{\\\"name\\\":\\\"A\\\"}],[\\\"terminal\\\",[-24,8,0],{\\\"name\\\":\\\"B\\\"}],[\\\"terminal\\\",[0,32,3],{\\\"name\\\":\\\"Cin\\\"}],[\\\"terminal\\\",[24,0,4],{\\\"name\\\":\\\"S\\\"}],[\\\"terminal\\\",[0,-32,7],{\\\"name\\\":\\\"Cout\\\"}],[\\\"line\\\",[16,-24,0,-32,0]],[\\\"line\\\",[-16,24,0,32,0]],[\\\"text\\\",[-15,-8,0],{\\\"text\\\":\\\"A\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-15,8,0],{\\\"text\\\":\\\"B\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[15,0,0],{\\\"text\\\":\\\"S\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[0,-23,0],{\\\"text\\\":\\\"Cout\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"top-center\\\"}],[\\\"text\\\",[0,23,0],{\\\"text\\\":\\\"Cin\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[0,0,0],{\\\"text\\\":\\\"FA\\\",\\\"align\\\":\\\"center\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\"}],[\\\"line\\\",[-16,-24,0,0,48]],[\\\"line\\\",[16,-24,0,0,48]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A B Cin\\\\n.group outputs Cout S\\\\n\\\\n.cycle assert inputs tran 9n sample outputs tran 1n\\\\n000 LL\\\\n001 LH\\\\n010 LH\\\\n011 HL\\\\n100 LH\\\\n101 HL\\\\n110 HL\\\\n111 HH\\\\n\\\\n.plot A\\\\n.plot B\\\\n.plot Cin\\\\n.plot Cout\\\\n.plot S\\\\n\\\"]]},\\\"/user/alu_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"/alu/bool\\\",[-32,-40,0],{\\\"name\\\":\\\"bool\\\"}],[\\\"/alu/cmp\\\",[-32,88,0],{\\\"name\\\":\\\"cmp\\\"}],[\\\"wire\\\",[-64,96,0,-8,0],{\\\"signal\\\":\\\"FN[2:1]\\\"}],[\\\"wire\\\",[-64,-16,0,-8,0],{\\\"signal\\\":\\\"FN[3:0]\\\"}],[\\\"port\\\",[-128,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-128,-24,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-128,48,0],{\\\"signal\\\":\\\"FN[5:0]\\\"}],[\\\"port\\\",[104,72,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-64,-72,0,-8,0],{\\\"signal\\\":\\\"FN[1:0]\\\"}],[\\\"/alu/arith\\\",[-32,24,0],{\\\"name\\\":\\\"arith\\\"}],[\\\"wire\\\",[-64,40,0,-8,0],{\\\"signal\\\":\\\"FN[0]\\\"}],[\\\"wire\\\",[-120,24,0,56,0]],[\\\"wire\\\",[-64,-80,0,-8,0],{\\\"signal\\\":\\\"B[4:0]\\\"}],[\\\"wire\\\",[-64,-88,0,-56,0]],[\\\"/gates/mux4\\\",[88,48,0]],[\\\"wire\\\",[-120,-32,0,56,0]],[\\\"wire\\\",[96,112,0,0,8],{\\\"signal\\\":\\\"FN[5:4]\\\"}],[\\\"/alu/shift\\\",[-32,-88,0],{\\\"name\\\":\\\"shift\\\"}],[\\\"wire\\\",[-48,64,0,0,8],{\\\"signal\\\":\\\"z\\\"}],[\\\"wire\\\",[-32,64,0,0,8],{\\\"signal\\\":\\\"v\\\"}],[\\\"wire\\\",[-16,64,0,0,8],{\\\"signal\\\":\\\"n\\\"}],[\\\"wire\\\",[-64,-24,0,-64,0]],[\\\"wire\\\",[-64,32,0,-64,0]],[\\\"wire\\\",[-128,-88,0,8,0]],[\\\"wire\\\",[0,-88,0,48,0]],[\\\"wire\\\",[0,24,0,8,0]],[\\\"wire\\\",[8,24,0,0,56]],[\\\"wire\\\",[0,-32,0,32,0]],[\\\"wire\\\",[-120,-32,0,0,56]],[\\\"wire\\\",[-120,-88,0,0,56]],[\\\"wire\\\",[-128,-24,0,0,56]],[\\\"wire\\\",[48,-88,0,0,136]],[\\\"wire\\\",[32,-32,0,0,96]],[\\\"wire\\\",[48,48,0,40,0],{\\\"signal\\\":\\\"shift[31:0]\\\"}],[\\\"wire\\\",[32,64,0,56,0],{\\\"signal\\\":\\\"bool[31:0]\\\"}],[\\\"wire\\\",[8,80,0,80,0],{\\\"signal\\\":\\\"arith[31:0]\\\"}],[\\\"wire\\\",[0,96,0,88,0],{\\\"signal\\\":\\\"cmp[31:0]\\\"}]],\\\"icon\\\":[[\\\"text\\\",[-8,-8,0],{\\\"text\\\":\\\"ALU\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[-8,40,3],{\\\"name\\\":\\\"FN[5:0]\\\"}],[\\\"terminal\\\",[16,0,4],{\\\"name\\\":\\\"Y[31:0]\\\"}],[\\\"text\\\",[-23,16,0],{\\\"text\\\":\\\"A[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,-16,0],{\\\"text\\\":\\\"B[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[7,0,0],{\\\"text\\\":\\\"Y[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"text\\\",[-8,25,0],{\\\"text\\\":\\\"FN[5:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[-24,-3,0,4,3]],[\\\"line\\\",[-20,0,0,-4,3]],[\\\"line\\\",[-24,32,0,32,-12]],[\\\"line\\\",[8,-21,0,-32,-11]],[\\\"line\\\",[-24,-32,0,0,29]],[\\\"line\\\",[-24,3,0,0,29]],[\\\"line\\\",[8,-21,0,0,41]],[\\\"property\\\",[-8,-27,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-left\\\"}],[\\\"line\\\",[-8,32,0,0,-6]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs FN[5:0] A[31:0] B[31:0]\\\\n.group outputs Y[31:0] Z V N\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n100000 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //   1: fn=F0000, a=0xff00ff00, b=0xffff0000, y=0x00000000\\\\n100001 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHH LLH //   2: fn=F0001, a=0xff00ff00, b=0xffff0000, y=0x000000ff\\\\n100010 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHLLLLLLLL LLH //   3: fn=F0010, a=0xff00ff00, b=0xffff0000, y=0x0000ff00\\\\n100011 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //   4: fn=F0011, a=0xff00ff00, b=0xffff0000, y=0x0000ffff\\\\n100100 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLLLLLLLLL LLH //   5: fn=F0100, a=0xff00ff00, b=0xffff0000, y=0x00ff0000\\\\n100101 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHLLLLLLLLHHHHHHHH LLH //   6: fn=F0101, a=0xff00ff00, b=0xffff0000, y=0x00ff00ff\\\\n100110 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHLLLLLLLL LLH //   7: fn=  XOR, a=0xff00ff00, b=0xffff0000, y=0x00ffff00\\\\n100111 11111111000000001111111100000000 11111111111111110000000000000000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //   8: fn=F0111, a=0xff00ff00, b=0xffff0000, y=0x00ffffff\\\\n101000 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLLLLLLLLL LLH //   9: fn=  AND, a=0xff00ff00, b=0xffff0000, y=0xff000000\\\\n101001 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLLLLLLLLLHHHHHHHH LLH //  10: fn= XNOR, a=0xff00ff00, b=0xffff0000, y=0xff0000ff\\\\n101010 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHLLLLLLLL LLH //  11: fn=    A, a=0xff00ff00, b=0xffff0000, y=0xff00ff00\\\\n101011 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHLLLLLLLLHHHHHHHHHHHHHHHH LLH //  12: fn=F1011, a=0xff00ff00, b=0xffff0000, y=0xff00ffff\\\\n101100 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLH //  13: fn=F1100, a=0xff00ff00, b=0xffff0000, y=0xffff0000\\\\n101101 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHLLLLLLLLHHHHHHHH LLH //  14: fn=F1101, a=0xff00ff00, b=0xffff0000, y=0xffff00ff\\\\n101110 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLH //  15: fn=   OR, a=0xff00ff00, b=0xffff0000, y=0xffffff00\\\\n101111 11111111000000001111111100000000 11111111111111110000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  16: fn=F1111, a=0xff00ff00, b=0xffff0000, y=0xffffffff\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  17: fn=  SHL, a=0x00000000, b=0x00000000, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  18: fn=  SHR, a=0x00000000, b=0x00000000, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  19: fn=  SRA, a=0x00000000, b=0x00000000, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  20: fn=  SHL, a=0x00000000, b=0x00000001, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  21: fn=  SHR, a=0x00000000, b=0x00000001, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  22: fn=  SRA, a=0x00000000, b=0x00000001, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  23: fn=  SHL, a=0x00000000, b=0x00000002, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  24: fn=  SHR, a=0x00000000, b=0x00000002, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  25: fn=  SRA, a=0x00000000, b=0x00000002, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  26: fn=  SHL, a=0x00000000, b=0x00000004, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  27: fn=  SHR, a=0x00000000, b=0x00000004, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  28: fn=  SRA, a=0x00000000, b=0x00000004, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  29: fn=  SHL, a=0x00000000, b=0x00000008, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  30: fn=  SHR, a=0x00000000, b=0x00000008, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  31: fn=  SRA, a=0x00000000, b=0x00000008, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  32: fn=  SHL, a=0x00000000, b=0x00000010, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  33: fn=  SHR, a=0x00000000, b=0x00000010, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  34: fn=  SRA, a=0x00000000, b=0x00000010, y=0x00000000\\\\n110000 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  35: fn=  SHL, a=0x00000000, b=0x0000001f, y=0x00000000\\\\n110001 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  36: fn=  SHR, a=0x00000000, b=0x0000001f, y=0x00000000\\\\n110011 00000000000000000000000000000000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  37: fn=  SRA, a=0x00000000, b=0x0000001f, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  38: fn=  SHL, a=0x00000001, b=0x00000000, y=0x00000001\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  39: fn=  SHR, a=0x00000001, b=0x00000000, y=0x00000001\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  40: fn=  SRA, a=0x00000001, b=0x00000000, y=0x00000001\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  41: fn=  SHL, a=0x00000001, b=0x00000001, y=0x00000002\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  42: fn=  SHR, a=0x00000001, b=0x00000001, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  43: fn=  SRA, a=0x00000001, b=0x00000001, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL //  44: fn=  SHL, a=0x00000001, b=0x00000002, y=0x00000004\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  45: fn=  SHR, a=0x00000001, b=0x00000002, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  46: fn=  SRA, a=0x00000001, b=0x00000002, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL //  47: fn=  SHL, a=0x00000001, b=0x00000004, y=0x00000010\\\\n110001 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  48: fn=  SHR, a=0x00000001, b=0x00000004, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000000100 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  49: fn=  SRA, a=0x00000001, b=0x00000004, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL //  50: fn=  SHL, a=0x00000001, b=0x00000008, y=0x00000100\\\\n110001 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  51: fn=  SHR, a=0x00000001, b=0x00000008, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000001000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  52: fn=  SRA, a=0x00000001, b=0x00000008, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL //  53: fn=  SHL, a=0x00000001, b=0x00000010, y=0x00010000\\\\n110001 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  54: fn=  SHR, a=0x00000001, b=0x00000010, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  55: fn=  SRA, a=0x00000001, b=0x00000010, y=0x00000000\\\\n110000 00000000000000000000000000000001 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  56: fn=  SHL, a=0x00000001, b=0x0000001f, y=0x80000000\\\\n110001 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  57: fn=  SHR, a=0x00000001, b=0x0000001f, y=0x00000000\\\\n110011 00000000000000000000000000000001 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH //  58: fn=  SRA, a=0x00000001, b=0x0000001f, y=0x00000000\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  59: fn=  SHL, a=0xffffffff, b=0x00000000, y=0xffffffff\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  60: fn=  SHR, a=0xffffffff, b=0x00000000, y=0xffffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  61: fn=  SRA, a=0xffffffff, b=0x00000000, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL HLL //  62: fn=  SHL, a=0xffffffff, b=0x00000001, y=0xfffffffe\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000001 LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  63: fn=  SHR, a=0xffffffff, b=0x00000001, y=0x7fffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  64: fn=  SRA, a=0xffffffff, b=0x00000001, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHLL LLL //  65: fn=  SHL, a=0xffffffff, b=0x00000002, y=0xfffffffc\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000010 LLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  66: fn=  SHR, a=0xffffffff, b=0x00000002, y=0x3fffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  67: fn=  SRA, a=0xffffffff, b=0x00000002, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHLLLL LLL //  68: fn=  SHL, a=0xffffffff, b=0x00000004, y=0xfffffff0\\\\n110001 11111111111111111111111111111111 00000000000000000000000000000100 LLLLHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  69: fn=  SHR, a=0xffffffff, b=0x00000004, y=0x0fffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000000100 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  70: fn=  SRA, a=0xffffffff, b=0x00000004, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHLLLLLLLL LLL //  71: fn=  SHL, a=0xffffffff, b=0x00000008, y=0xffffff00\\\\n110001 11111111111111111111111111111111 00000000000000000000000000001000 LLLLLLLLHHHHHHHHHHHHHHHHHHHHHHHH LLH //  72: fn=  SHR, a=0xffffffff, b=0x00000008, y=0x00ffffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000001000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  73: fn=  SRA, a=0xffffffff, b=0x00000008, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHLLLLLLLLLLLLLLLL LLL //  74: fn=  SHL, a=0xffffffff, b=0x00000010, y=0xffff0000\\\\n110001 11111111111111111111111111111111 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHH LLH //  75: fn=  SHR, a=0xffffffff, b=0x00000010, y=0x0000ffff\\\\n110011 11111111111111111111111111111111 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  76: fn=  SRA, a=0xffffffff, b=0x00000010, y=0xffffffff\\\\n110000 11111111111111111111111111111111 00000000000000000000000000011111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  77: fn=  SHL, a=0xffffffff, b=0x0000001f, y=0x80000000\\\\n110001 11111111111111111111111111111111 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH //  78: fn=  SHR, a=0xffffffff, b=0x0000001f, y=0x00000001\\\\n110011 11111111111111111111111111111111 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  79: fn=  SRA, a=0xffffffff, b=0x0000001f, y=0xffffffff\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  80: fn=  SHL, a=0x12345678, b=0x00000000, y=0x12345678\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  81: fn=  SHR, a=0x12345678, b=0x00000000, y=0x12345678\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000000 LLLHLLHLLLHHLHLLLHLHLHHLLHHHHLLL LLL //  82: fn=  SRA, a=0x12345678, b=0x00000000, y=0x12345678\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000001 LLHLLHLLLHHLHLLLHLHLHHLLHHHHLLLL LLL //  83: fn=  SHL, a=0x12345678, b=0x00000001, y=0x2468acf0\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  84: fn=  SHR, a=0x12345678, b=0x00000001, y=0x091a2b3c\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000001 LLLLHLLHLLLHHLHLLLHLHLHHLLHHHHLL LLL //  85: fn=  SRA, a=0x12345678, b=0x00000001, y=0x091a2b3c\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000010 LHLLHLLLHHLHLLLHLHLHHLLHHHHLLLLL LLL //  86: fn=  SHL, a=0x12345678, b=0x00000002, y=0x48d159e0\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  87: fn=  SHR, a=0x12345678, b=0x00000002, y=0x048d159e\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000010 LLLLLHLLHLLLHHLHLLLHLHLHHLLHHHHL LLL //  88: fn=  SRA, a=0x12345678, b=0x00000002, y=0x048d159e\\\\n110000 00010010001101000101011001111000 00000000000000000000000000000100 LLHLLLHHLHLLLHLHLHHLLHHHHLLLLLLL LLL //  89: fn=  SHL, a=0x12345678, b=0x00000004, y=0x23456780\\\\n110001 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  90: fn=  SHR, a=0x12345678, b=0x00000004, y=0x01234567\\\\n110011 00010010001101000101011001111000 00000000000000000000000000000100 LLLLLLLHLLHLLLHHLHLLLHLHLHHLLHHH LLL //  91: fn=  SRA, a=0x12345678, b=0x00000004, y=0x01234567\\\\n110000 00010010001101000101011001111000 00000000000000000000000000001000 LLHHLHLLLHLHLHHLLHHHHLLLLLLLLLLL LLL //  92: fn=  SHL, a=0x12345678, b=0x00000008, y=0x34567800\\\\n110001 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  93: fn=  SHR, a=0x12345678, b=0x00000008, y=0x00123456\\\\n110011 00010010001101000101011001111000 00000000000000000000000000001000 LLLLLLLLLLLHLLHLLLHHLHLLLHLHLHHL LLL //  94: fn=  SRA, a=0x12345678, b=0x00000008, y=0x00123456\\\\n110000 00010010001101000101011001111000 00000000000000000000000000010000 LHLHLHHLLHHHHLLLLLLLLLLLLLLLLLLL LLL //  95: fn=  SHL, a=0x12345678, b=0x00000010, y=0x56780000\\\\n110001 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  96: fn=  SHR, a=0x12345678, b=0x00000010, y=0x00001234\\\\n110011 00010010001101000101011001111000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLLLLHLLHLLLHHLHLL LLL //  97: fn=  SRA, a=0x12345678, b=0x00000010, y=0x00001234\\\\n110000 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  98: fn=  SHL, a=0x12345678, b=0x0000001f, y=0x00000000\\\\n110001 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL //  99: fn=  SHR, a=0x12345678, b=0x0000001f, y=0x00000000\\\\n110011 00010010001101000101011001111000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 100: fn=  SRA, a=0x12345678, b=0x0000001f, y=0x00000000\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 101: fn=  SHL, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 102: fn=  SHR, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000000 HHHHHHHLHHLHHHLLHLHLHLHHHLLHHLLL LLH // 103: fn=  SRA, a=0xfedcab98, b=0x00000000, y=0xfedcab98\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHLHHLHHHLLHLHLHLHHHLLHHLLLL LLH // 104: fn=  SHL, a=0xfedcab98, b=0x00000001, y=0xfdb95730\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000001 LHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 105: fn=  SHR, a=0xfedcab98, b=0x00000001, y=0x7f6e55cc\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000001 HHHHHHHHLHHLHHHLLHLHLHLHHHLLHHLL LLH // 106: fn=  SRA, a=0xfedcab98, b=0x00000001, y=0xff6e55cc\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHLHHLHHHLLHLHLHLHHHLLHHLLLLL LLH // 107: fn=  SHL, a=0xfedcab98, b=0x00000002, y=0xfb72ae60\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000010 LLHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 108: fn=  SHR, a=0xfedcab98, b=0x00000002, y=0x3fb72ae6\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000010 HHHHHHHHHLHHLHHHLLHLHLHLHHHLLHHL LLH // 109: fn=  SRA, a=0xfedcab98, b=0x00000002, y=0xffb72ae6\\\\n110000 11111110110111001010101110011000 00000000000000000000000000000100 HHHLHHLHHHLLHLHLHLHHHLLHHLLLLLLL LLH // 110: fn=  SHL, a=0xfedcab98, b=0x00000004, y=0xedcab980\\\\n110001 11111110110111001010101110011000 00000000000000000000000000000100 LLLLHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 111: fn=  SHR, a=0xfedcab98, b=0x00000004, y=0x0fedcab9\\\\n110011 11111110110111001010101110011000 00000000000000000000000000000100 HHHHHHHHHHHLHHLHHHLLHLHLHLHHHLLH LLH // 112: fn=  SRA, a=0xfedcab98, b=0x00000004, y=0xffedcab9\\\\n110000 11111110110111001010101110011000 00000000000000000000000000001000 HHLHHHLLHLHLHLHHHLLHHLLLLLLLLLLL LLH // 113: fn=  SHL, a=0xfedcab98, b=0x00000008, y=0xdcab9800\\\\n110001 11111110110111001010101110011000 00000000000000000000000000001000 LLLLLLLLHHHHHHHLHHLHHHLLHLHLHLHH LLH // 114: fn=  SHR, a=0xfedcab98, b=0x00000008, y=0x00fedcab\\\\n110011 11111110110111001010101110011000 00000000000000000000000000001000 HHHHHHHHHHHHHHHLHHLHHHLLHLHLHLHH LLH // 115: fn=  SRA, a=0xfedcab98, b=0x00000008, y=0xfffedcab\\\\n110000 11111110110111001010101110011000 00000000000000000000000000010000 HLHLHLHHHLLHHLLLLLLLLLLLLLLLLLLL LLH // 116: fn=  SHL, a=0xfedcab98, b=0x00000010, y=0xab980000\\\\n110001 11111110110111001010101110011000 00000000000000000000000000010000 LLLLLLLLLLLLLLLLHHHHHHHLHHLHHHLL LLH // 117: fn=  SHR, a=0xfedcab98, b=0x00000010, y=0x0000fedc\\\\n110011 11111110110111001010101110011000 00000000000000000000000000010000 HHHHHHHHHHHHHHHHHHHHHHHLHHLHHHLL LLH // 118: fn=  SRA, a=0xfedcab98, b=0x00000010, y=0xfffffedc\\\\n110000 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 119: fn=  SHL, a=0xfedcab98, b=0x0000001f, y=0x00000000\\\\n110001 11111110110111001010101110011000 00000000000000000000000000011111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 120: fn=  SHR, a=0xfedcab98, b=0x0000001f, y=0x00000001\\\\n110011 11111110110111001010101110011000 00000000000000000000000000011111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 121: fn=  SRA, a=0xfedcab98, b=0x0000001f, y=0xffffffff\\\\n010000 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 122: fn=  ADD, a=0x00000000, b=0x00000000, y=0x00000000\\\\n010000 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 123: fn=  ADD, a=0x00000000, b=0x00000001, y=0x00000001\\\\n010000 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 124: fn=  ADD, a=0x00000000, b=0x-0000001, y=0xffffffff\\\\n010000 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 125: fn=  ADD, a=0x00000000, b=0xaaaaaaaa, y=0xaaaaaaaa\\\\n010000 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 126: fn=  ADD, a=0x00000000, b=0x55555555, y=0x55555555\\\\n010000 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 127: fn=  ADD, a=0x00000001, b=0x00000000, y=0x00000001\\\\n010000 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 128: fn=  ADD, a=0x00000001, b=0x00000001, y=0x00000002\\\\n010000 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 129: fn=  ADD, a=0x00000001, b=0x-0000001, y=0x00000000\\\\n010000 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 130: fn=  ADD, a=0x00000001, b=0xaaaaaaaa, y=0xaaaaaaab\\\\n010000 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 131: fn=  ADD, a=0x00000001, b=0x55555555, y=0x55555556\\\\n010000 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 132: fn=  ADD, a=0x-0000001, b=0x00000000, y=0xffffffff\\\\n010000 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 133: fn=  ADD, a=0x-0000001, b=0x00000001, y=0x00000000\\\\n010000 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 134: fn=  ADD, a=0x-0000001, b=0x-0000001, y=0xfffffffe\\\\n010000 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 135: fn=  ADD, a=0x-0000001, b=0xaaaaaaaa, y=0xaaaaaaa9\\\\n010000 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 136: fn=  ADD, a=0x-0000001, b=0x55555555, y=0x55555554\\\\n010000 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 137: fn=  ADD, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\\\n010000 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 138: fn=  ADD, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaab\\\\n010000 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 139: fn=  ADD, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaa9\\\\n010000 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 140: fn=  ADD, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x55555554\\\\n010000 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 141: fn=  ADD, a=0xaaaaaaaa, b=0x55555555, y=0xffffffff\\\\n010000 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 142: fn=  ADD, a=0x55555555, b=0x00000000, y=0x55555555\\\\n010000 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 143: fn=  ADD, a=0x55555555, b=0x00000001, y=0x55555556\\\\n010000 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 144: fn=  ADD, a=0x55555555, b=0x-0000001, y=0x55555554\\\\n010000 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 145: fn=  ADD, a=0x55555555, b=0xaaaaaaaa, y=0xffffffff\\\\n010000 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 146: fn=  ADD, a=0x55555555, b=0x55555555, y=0xaaaaaaaa\\\\n010001 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 147: fn=  SUB, a=0x00000000, b=0x00000000, y=0x00000000\\\\n010001 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 148: fn=  SUB, a=0x00000000, b=0x00000001, y=0xffffffff\\\\n010001 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 149: fn=  SUB, a=0x00000000, b=0x-0000001, y=0x00000001\\\\n010001 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 150: fn=  SUB, a=0x00000000, b=0xaaaaaaaa, y=0x55555556\\\\n010001 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 151: fn=  SUB, a=0x00000000, b=0x55555555, y=0xaaaaaaab\\\\n010001 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 152: fn=  SUB, a=0x00000001, b=0x00000000, y=0x00000001\\\\n010001 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 153: fn=  SUB, a=0x00000001, b=0x00000001, y=0x00000000\\\\n010001 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 154: fn=  SUB, a=0x00000001, b=0x-0000001, y=0x00000002\\\\n010001 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 155: fn=  SUB, a=0x00000001, b=0xaaaaaaaa, y=0x55555557\\\\n010001 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 156: fn=  SUB, a=0x00000001, b=0x55555555, y=0xaaaaaaac\\\\n010001 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 157: fn=  SUB, a=0x-0000001, b=0x00000000, y=0xffffffff\\\\n010001 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 158: fn=  SUB, a=0x-0000001, b=0x00000001, y=0xfffffffe\\\\n010001 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 159: fn=  SUB, a=0x-0000001, b=0x-0000001, y=0x00000000\\\\n010001 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 160: fn=  SUB, a=0x-0000001, b=0xaaaaaaaa, y=0x55555555\\\\n010001 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 161: fn=  SUB, a=0x-0000001, b=0x55555555, y=0xaaaaaaaa\\\\n010001 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 162: fn=  SUB, a=0xaaaaaaaa, b=0x00000000, y=0xaaaaaaaa\\\\n010001 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 163: fn=  SUB, a=0xaaaaaaaa, b=0x00000001, y=0xaaaaaaa9\\\\n010001 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 164: fn=  SUB, a=0xaaaaaaaa, b=0x-0000001, y=0xaaaaaaab\\\\n010001 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 165: fn=  SUB, a=0xaaaaaaaa, b=0xaaaaaaaa, y=0x00000000\\\\n010001 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 166: fn=  SUB, a=0xaaaaaaaa, b=0x55555555, y=0x55555555\\\\n010001 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 167: fn=  SUB, a=0x55555555, b=0x00000000, y=0x55555555\\\\n010001 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 168: fn=  SUB, a=0x55555555, b=0x00000001, y=0x55555554\\\\n010001 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 169: fn=  SUB, a=0x55555555, b=0x-0000001, y=0x55555556\\\\n010001 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 170: fn=  SUB, a=0x55555555, b=0xaaaaaaaa, y=0xaaaaaaab\\\\n010001 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 171: fn=  SUB, a=0x55555555, b=0x55555555, y=0x00000000\\\\n000011 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 172: fn=CMPEQ, a=0x00000005, b=0xdeadbeef, y=0x00000000\\\\n000101 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 173: fn=CMPLT, a=0x00000005, b=0xdeadbeef, y=0x00000000\\\\n000111 00000000000000000000000000000101 11011110101011011011111011101111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 174: fn=CMPLE, a=0x00000005, b=0xdeadbeef, y=0x00000000\\\\n000011 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 175: fn=CMPEQ, a=0x12345678, b=0x12345678, y=0x00000001\\\\n000101 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 176: fn=CMPLT, a=0x12345678, b=0x12345678, y=0x00000000\\\\n000111 00010010001101000101011001111000 00010010001101000101011001111000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH HLL // 177: fn=CMPLE, a=0x12345678, b=0x12345678, y=0x00000001\\\\n000011 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHL // 178: fn=CMPEQ, a=0x80000000, b=0x00000001, y=0x00000000\\\\n000101 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 179: fn=CMPLT, a=0x80000000, b=0x00000001, y=0x00000001\\\\n000111 10000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LHL // 180: fn=CMPLE, a=0x80000000, b=0x00000001, y=0x00000001\\\\n000011 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLH // 181: fn=CMPEQ, a=0xdeadbeef, b=0x00000005, y=0x00000000\\\\n000101 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 182: fn=CMPLT, a=0xdeadbeef, b=0x00000005, y=0x00000001\\\\n000111 11011110101011011011111011101111 00000000000000000000000000000101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLH // 183: fn=CMPLE, a=0xdeadbeef, b=0x00000005, y=0x00000001\\\\n000011 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 184: fn=CMPEQ, a=0x7fffffff, b=0xffffffff, y=0x00000000\\\\n000101 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 185: fn=CMPLT, a=0x7fffffff, b=0xffffffff, y=0x00000000\\\\n000111 01111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 186: fn=CMPLE, a=0x7fffffff, b=0xffffffff, y=0x00000000\\\\n\\\\n// map FN[5:0] to text for operation\\\\n.plotdef op ? ? ? CMPEQ ? CMPLT ? CMPLE ? ? ? ? ? ? ? ? ADD SUB ? ? ? ? ? ? ? ? ? ? ? ? ? ? F0000 F0001 F0010 F0011 F0100 F0101 XOR F0111 AND XNOR A F1011 F1100 F1101 OR F1111 SHL SHR ? SRA ? ? ? ? ? ? ? ? ? ? ? ?\\\\n\\\\n.plot op(FN[5:0])\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(Y[31:0])\\\\n.plot Z\\\\n.plot V\\\\n.plot N\\\"]]},\\\"/user/add32_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-424,208,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-504,-48,1],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-552,-48,1],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-496,16,3],{\\\"signal\\\":\\\"s[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-536,168,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-528,-48,0]],[\\\"wire\\\",[-552,-40,0,0,-8]],[\\\"wire\\\",[-504,-40,0,0,-8]],[\\\"wire\\\",[-544,8,0,0,8],{\\\"signal\\\":\\\"p1[15:0]\\\"}],[\\\"wire\\\",[-496,8,0,0,8]],[\\\"wire\\\",[-560,32,0,0,-24],{\\\"signal\\\":\\\"g1[15:0]\\\"}],[\\\"/user/cl\\\",[-336,-24,0],{\\\"name\\\":\\\"stage1\\\"}],[\\\"wire\\\",[-392,-56,0,0,-16],{\\\"signal\\\":\\\"g1[15:1:2]\\\"}],[\\\"wire\\\",[-304,-32,0,16,0],{\\\"signal\\\":\\\"g1[14:0:2]\\\"}],[\\\"wire\\\",[-344,-56,0,0,-16],{\\\"signal\\\":\\\"p1[15:1:2]\\\"}],[\\\"wire\\\",[-304,-24,0,16,0],{\\\"signal\\\":\\\"p1[14:0:2]\\\"}],[\\\"wire\\\",[-384,16,0,0,16],{\\\"signal\\\":\\\"g2[7:0]\\\"}],[\\\"wire\\\",[-344,16,0,0,16],{\\\"signal\\\":\\\"p2[7:0]\\\"}],[\\\"wire\\\",[-360,16,0,-24,0]],[\\\"/user/cl\\\",[-160,-24,0],{\\\"name\\\":\\\"stage2\\\"}],[\\\"wire\\\",[-216,-56,0,0,-16],{\\\"signal\\\":\\\"g2[7:1:2]\\\"}],[\\\"wire\\\",[-128,-32,0,16,0],{\\\"signal\\\":\\\"g2[6:0:2]\\\"}],[\\\"wire\\\",[-168,-56,0,0,-16],{\\\"signal\\\":\\\"p2[7:1:2]\\\"}],[\\\"wire\\\",[-128,-24,0,16,0],{\\\"signal\\\":\\\"p2[6:0:2]\\\"}],[\\\"wire\\\",[-208,16,0,0,16],{\\\"signal\\\":\\\"g3[3:0]\\\"}],[\\\"wire\\\",[-168,16,0,0,16],{\\\"signal\\\":\\\"p3[3:0]\\\"}],[\\\"wire\\\",[-184,16,0,-24,0]],[\\\"wire\\\",[-360,-56,0,-32,0]],[\\\"/user/cl\\\",[-152,112,0],{\\\"name\\\":\\\"stage3\\\"}],[\\\"wire\\\",[-208,80,0,0,-16],{\\\"signal\\\":\\\"g3[3:1:2]\\\"}],[\\\"wire\\\",[-120,104,0,16,0],{\\\"signal\\\":\\\"g3[2:0:2]\\\"}],[\\\"wire\\\",[-120,112,0,16,0],{\\\"signal\\\":\\\"p3[2:0:2]\\\"}],[\\\"wire\\\",[-200,152,0,0,16],{\\\"signal\\\":\\\"g4[1:0]\\\"}],[\\\"wire\\\",[-160,152,0,0,16],{\\\"signal\\\":\\\"p4[1:0]\\\"}],[\\\"wire\\\",[-176,152,0,-24,0]],[\\\"wire\\\",[-184,-56,0,-32,0]],[\\\"wire\\\",[-160,80,0,0,-16],{\\\"signal\\\":\\\"p3[3:1:2]\\\"}],[\\\"/user/cl\\\",[-416,120,0],{\\\"name\\\":\\\"stage4\\\"}],[\\\"wire\\\",[-472,88,0,0,-16],{\\\"signal\\\":\\\"g4[1]\\\"}],[\\\"wire\\\",[-384,112,0,16,0],{\\\"signal\\\":\\\"g4[0]\\\"}],[\\\"wire\\\",[-440,88,0,-32,0]],[\\\"wire\\\",[-384,120,0,16,0],{\\\"signal\\\":\\\"p4[0]\\\"}],[\\\"wire\\\",[-424,160,0,0,16],{\\\"signal\\\":\\\"p5\\\"}],[\\\"wire\\\",[-424,88,0,0,-16],{\\\"signal\\\":\\\"p4[1]\\\"}],[\\\"wire\\\",[-176,80,0,-32,0]],[\\\"/gates/or2\\\",[-488,160,4]],[\\\"/gates/and2\\\",[-424,176,4]],[\\\"wire\\\",[-440,160,0,-48,0]],[\\\"wire\\\",[-488,176,0,16,0]],[\\\"wire\\\",[-472,184,0,0,-8]],[\\\"wire\\\",[-424,192,0,0,16]],[\\\"wire\\\",[-424,192,0,24,0]],[\\\"wire\\\",[-400,160,0,0,32]],[\\\"wire\\\",[-400,88,0,0,-16],{\\\"signal\\\":\\\"c1[1]\\\"}],[\\\"wire\\\",[-384,136,0,16,0],{\\\"signal\\\":\\\"c1[0]\\\"}],[\\\"wire\\\",[-128,152,0,0,16],{\\\"signal\\\":\\\"c1[1:0]\\\"}],[\\\"wire\\\",[-136,152,0,8,0]],[\\\"wire\\\",[-136,80,0,24,0],{\\\"signal\\\":\\\"c2[3:1:2]\\\"}],[\\\"wire\\\",[-120,128,0,16,0],{\\\"signal\\\":\\\"c2[2:0:2]\\\"}],[\\\"wire\\\",[-144,-56,0,32,0],{\\\"signal\\\":\\\"c3[7:1:2]\\\"}],[\\\"wire\\\",[-128,-8,0,16,0],{\\\"signal\\\":\\\"c3[6:0:2]\\\"}],[\\\"wire\\\",[-144,16,0,32,0],{\\\"signal\\\":\\\"c2[3:0]\\\"}],[\\\"wire\\\",[-320,-56,0,32,0],{\\\"signal\\\":\\\"c4[15:1:2]\\\"}],[\\\"wire\\\",[-304,-8,0,16,0],{\\\"signal\\\":\\\"c4[14:0:2]\\\"}],[\\\"wire\\\",[-320,16,0,32,0],{\\\"signal\\\":\\\"c3[7:0]\\\"}],[\\\"wire\\\",[-480,-16,0,24,0],{\\\"signal\\\":\\\"c4[15:0]\\\"}],[\\\"text\\\",[-470,-57,0],{\\\"text\\\":\\\"v2: cla adder\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\\\n\\\\n.plot X(g1[15:0])\\\\n.plot X(p1[15:0])\\\\n.plot X(c4[15:0])\\\\n.plot X(s[31:0])\\\\n\\\\n\\\\n/*\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\\n*/\\\\n\\\\n/*00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n*/\\\\n\\\\n\\\\n  \\\\n//01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n//00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32_v2\\\\n\\\"}]]},\\\"/user/arith_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"label\\\":\\\"Name\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]},\\\"icon-readonly\\\":\\\"true\\\",\\\"test-readonly\\\":{\\\"label\\\":\\\"Test readonly\\\",\\\"type\\\":\\\"string\\\",\\\"value\\\":\\\"true\\\",\\\"edit\\\":\\\"yes\\\",\\\"choices\\\":[\\\"\\\"]}},\\\"schematic\\\":[[\\\"port\\\",[-32,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-88,-32,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-48,0],{\\\"signal\\\":\\\"AFN\\\"}],[\\\"port\\\",[88,-72,4],{\\\"signal\\\":\\\"S[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[80,-224,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,8,4],{\\\"signal\\\":\\\"N\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,-32,4],{\\\"signal\\\":\\\"Z\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[80,8,0,-8,0],{\\\"signal\\\":\\\"S[31]\\\"}],[\\\"jumper\\\",[80,8,0]],[\\\"/user/nor32\\\",[40,-32,0],{\\\"name\\\":\\\"nor32\\\"}],[\\\"/gates/xor2\\\",[-80,-48,0]],[\\\"wire\\\",[88,-48,0,-80,0]],[\\\"wire\\\",[-32,-40,0,0,-32],{\\\"signal\\\":\\\"xb[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-32,-104,0,-56,0]],[\\\"wire\\\",[-88,-104,0,0,56]],[\\\"wire\\\",[-88,-48,0,8,0]],[\\\"wire\\\",[-80,-32,0,-8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[88,-72,0,0,24]],[\\\"wire\\\",[8,-48,0,0,16]],[\\\"/gates/and3\\\",[-16,-248,0]],[\\\"/gates/inverter\\\",[-48,-216,0]],[\\\"wire\\\",[-48,-216,0,-8,0],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"/gates/or2\\\",[32,-232,0]],[\\\"/gates/and3\\\",[-16,-168,0]],[\\\"wire\\\",[-48,-216,0,0,48]],[\\\"wire\\\",[-48,-168,0,32,0]],[\\\"/gates/inverter\\\",[-48,-152,0]],[\\\"/gates/inverter\\\",[-48,-136,0]],[\\\"wire\\\",[-48,-152,0,-32,0],{\\\"signal\\\":\\\"xb[31]\\\"}],[\\\"wire\\\",[-48,-136,0,-48,0],{\\\"signal\\\":\\\"a[31]\\\"}],[\\\"wire\\\",[-96,-136,0,0,-112]],[\\\"wire\\\",[-16,-248,0,-80,0]],[\\\"wire\\\",[-80,-152,0,0,-80]],[\\\"wire\\\",[-16,-232,0,-64,0]],[\\\"wire\\\",[32,-216,0,0,64]],[\\\"/user/add32_v3\\\",[0,-88,0]]],\\\"icon\\\":[[\\\"text\\\",[0,-11,0],{\\\"text\\\":\\\"ARITH\\\",\\\"font\\\":\\\"bold 6pt sans-serif\\\",\\\"align\\\":\\\"center\\\"}],[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[-32,8,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"AFN\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[-23,8,0],{\\\"text\\\":\\\"B[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,0,0],{\\\"text\\\":\\\"A[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[-23,16,0],{\\\"text\\\":\\\"AFN\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}],[\\\"text\\\",[23,0,0],{\\\"text\\\":\\\"S[31:0]\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"center-right\\\"}],[\\\"line\\\",[-24,-16,0,48,0]],[\\\"line\\\",[24,32,0,-48,0]],[\\\"property\\\",[0,-17,0],{\\\"format\\\":\\\"{name}\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"terminal\\\",[-16,40,5],{\\\"name\\\":\\\"Z\\\"}],[\\\"terminal\\\",[0,40,5],{\\\"name\\\":\\\"V\\\"}],[\\\"terminal\\\",[16,40,5],{\\\"name\\\":\\\"N\\\"}],[\\\"text\\\",[-16,31,0],{\\\"text\\\":\\\"Z\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[0,31,0],{\\\"text\\\":\\\"V\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"text\\\",[16,31,0],{\\\"text\\\":\\\"N\\\",\\\"font\\\":\\\"4pt sans-serif\\\",\\\"align\\\":\\\"bottom-center\\\"}],[\\\"line\\\",[-24,-16,0,0,48]],[\\\"line\\\",[24,-16,0,0,48]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs AFN A[31:0] B[31:0]\\\\n.group outputs S[31:0] Z V N\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  1: afn=0, a=0X00000000, b=0X00000000, s=0X00000000\\\\n0 00000000000000000000000000000000 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  2: afn=0, a=0X00000000, b=0X00000001, s=0X00000001\\\\n0 00000000000000000000000000000000 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH //  3: afn=0, a=0X00000000, b=0XFFFFFFFF, s=0XFFFFFFFF\\\\n0 00000000000000000000000000000000 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH //  4: afn=0, a=0X00000000, b=0XAAAAAAAA, s=0XAAAAAAAA\\\\n0 00000000000000000000000000000000 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL //  5: afn=0, a=0X00000000, b=0X55555555, s=0X55555555\\\\n0 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL //  6: afn=0, a=0X00000001, b=0X00000000, s=0X00000001\\\\n0 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL //  7: afn=0, a=0X00000001, b=0X00000001, s=0X00000002\\\\n0 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL //  8: afn=0, a=0X00000001, b=0XFFFFFFFF, s=0X00000000\\\\n0 00000000000000000000000000000001 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH //  9: afn=0, a=0X00000001, b=0XAAAAAAAA, s=0XAAAAAAAB\\\\n0 00000000000000000000000000000001 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 10: afn=0, a=0X00000001, b=0X55555555, s=0X55555556\\\\n0 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 11: afn=0, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\\\n0 11111111111111111111111111111111 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 12: afn=0, a=0XFFFFFFFF, b=0X00000001, s=0X00000000\\\\n0 11111111111111111111111111111111 11111111111111111111111111111111 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 13: afn=0, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0XFFFFFFFE\\\\n0 11111111111111111111111111111111 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 14: afn=0, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0XAAAAAAA9\\\\n0 11111111111111111111111111111111 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 15: afn=0, a=0XFFFFFFFF, b=0X55555555, s=0X55555554\\\\n0 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 16: afn=0, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\\\n0 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 17: afn=0, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAAB\\\\n0 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 18: afn=0, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAA9\\\\n0 10101010101010101010101010101010 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LHL // 19: afn=0, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X55555554\\\\n0 10101010101010101010101010101010 01010101010101010101010101010101 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 20: afn=0, a=0XAAAAAAAA, b=0X55555555, s=0XFFFFFFFF\\\\n0 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 21: afn=0, a=0X55555555, b=0X00000000, s=0X55555555\\\\n0 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 22: afn=0, a=0X55555555, b=0X00000001, s=0X55555556\\\\n0 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 23: afn=0, a=0X55555555, b=0XFFFFFFFF, s=0X55555554\\\\n0 01010101010101010101010101010101 10101010101010101010101010101010 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 24: afn=0, a=0X55555555, b=0XAAAAAAAA, s=0XFFFFFFFF\\\\n0 01010101010101010101010101010101 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LHH // 25: afn=0, a=0X55555555, b=0X55555555, s=0XAAAAAAAA\\\\n1 00000000000000000000000000000000 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 26: fn=1, a=0X00000000, b=0X00000000, s=0X00000000\\\\n1 00000000000000000000000000000000 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 27: fn=1, a=0X00000000, b=0X00000001, s=0XFFFFFFFF\\\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 28: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\\\n1 00000000000000000000000000000000 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 29: fn=1, a=0X00000000, b=0XAAAAAAAA, s=0X55555556\\\\n1 00000000000000000000000000000000 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 30: fn=1, a=0X00000000, b=0X55555555, s=0XAAAAAAAB\\\\n1 00000000000000000000000000000001 00000000000000000000000000000000 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 31: fn=1, a=0X00000001, b=0X00000000, s=0X00000001\\\\n1 00000000000000000000000000000001 00000000000000000000000000000001 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 32: fn=1, a=0X00000001, b=0X00000001, s=0X00000000\\\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 33: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\\\n1 00000000000000000000000000000001 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHH LLL // 34: fn=1, a=0X00000001, b=0XAAAAAAAA, s=0X55555557\\\\n1 00000000000000000000000000000001 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLL LLH // 35: fn=1, a=0X00000001, b=0X55555555, s=0XAAAAAAAC\\\\n1 11111111111111111111111111111111 00000000000000000000000000000000 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH LLH // 36: fn=1, a=0XFFFFFFFF, b=0X00000000, s=0XFFFFFFFF\\\\n1 11111111111111111111111111111111 00000000000000000000000000000001 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHL LLH // 37: fn=1, a=0XFFFFFFFF, b=0X00000001, s=0XFFFFFFFE\\\\n1 11111111111111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 38: fn=1, a=0XFFFFFFFF, b=0XFFFFFFFF, s=0X00000000\\\\n1 11111111111111111111111111111111 10101010101010101010101010101010 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 39: fn=1, a=0XFFFFFFFF, b=0XAAAAAAAA, s=0X55555555\\\\n1 11111111111111111111111111111111 01010101010101010101010101010101 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 40: fn=1, a=0XFFFFFFFF, b=0X55555555, s=0XAAAAAAAA\\\\n1 10101010101010101010101010101010 00000000000000000000000000000000 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL LLH // 41: fn=1, a=0XAAAAAAAA, b=0X00000000, s=0XAAAAAAAA\\\\n1 10101010101010101010101010101010 00000000000000000000000000000001 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLLH LLH // 42: fn=1, a=0XAAAAAAAA, b=0X00000001, s=0XAAAAAAA9\\\\n1 10101010101010101010101010101010 11111111111111111111111111111111 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LLH // 43: fn=1, a=0XAAAAAAAA, b=0XFFFFFFFF, s=0XAAAAAAAB\\\\n1 10101010101010101010101010101010 10101010101010101010101010101010 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 44: fn=1, a=0XAAAAAAAA, b=0XAAAAAAAA, s=0X00000000\\\\n1 10101010101010101010101010101010 01010101010101010101010101010101 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LHL // 45: fn=1, a=0XAAAAAAAA, b=0X55555555, s=0X55555555\\\\n1 01010101010101010101010101010101 00000000000000000000000000000000 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH LLL // 46: fn=1, a=0X55555555, b=0X00000000, s=0X55555555\\\\n1 01010101010101010101010101010101 00000000000000000000000000000001 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL LLL // 47: fn=1, a=0X55555555, b=0X00000001, s=0X55555554\\\\n1 01010101010101010101010101010101 11111111111111111111111111111111 LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHL LLL // 48: fn=1, a=0X55555555, b=0XFFFFFFFF, s=0X55555556\\\\n1 01010101010101010101010101010101 10101010101010101010101010101010 HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHH LHH // 49: fn=1, a=0X55555555, b=0XAAAAAAAA, s=0XAAAAAAAB\\\\n1 01010101010101010101010101010101 01010101010101010101010101010101 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL HLL // 50: fn=1, a=0X55555555, b=0X55555555, s=0X00000000\\\\n1 01111111111111111111111111111111 11111111111111111111111111111111 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHH // 51: fn=1, a=0X7FFFFFFF, b=0XFFFFFFFF, s=0X80000000\\\\n1 00111111111111111111111111111111 11111111111111111111111111111111 LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 52: fn=1, a=0X3FFFFFFF, b=0XFFFFFFFF, s=0X40000000\\\\n1 00011111111111111111111111111111 11111111111111111111111111111111 LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 53: fn=1, a=0X1FFFFFFF, b=0XFFFFFFFF, s=0X20000000\\\\n1 00001111111111111111111111111111 11111111111111111111111111111111 LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 54: fn=1, a=0X0FFFFFFF, b=0XFFFFFFFF, s=0X10000000\\\\n1 00000111111111111111111111111111 11111111111111111111111111111111 LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 55: fn=1, a=0X07FFFFFF, b=0XFFFFFFFF, s=0X08000000\\\\n1 00000011111111111111111111111111 11111111111111111111111111111111 LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 56: fn=1, a=0X03FFFFFF, b=0XFFFFFFFF, s=0X04000000\\\\n1 00000001111111111111111111111111 11111111111111111111111111111111 LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL LLL // 57: fn=1, a=0X01FFFFFF, b=0XFFFFFFFF, s=0X02000000\\\\n1 00000000111111111111111111111111 11111111111111111111111111111111 LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL LLL // 58: fn=1, a=0X00FFFFFF, b=0XFFFFFFFF, s=0X01000000\\\\n1 00000000011111111111111111111111 11111111111111111111111111111111 LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLL // 59: fn=1, a=0X007FFFFF, b=0XFFFFFFFF, s=0X00800000\\\\n1 00000000001111111111111111111111 11111111111111111111111111111111 LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLL // 60: fn=1, a=0X003FFFFF, b=0XFFFFFFFF, s=0X00400000\\\\n1 00000000000111111111111111111111 11111111111111111111111111111111 LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLL // 61: fn=1, a=0X001FFFFF, b=0XFFFFFFFF, s=0X00200000\\\\n1 00000000000011111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL LLL // 62: fn=1, a=0X000FFFFF, b=0XFFFFFFFF, s=0X00100000\\\\n1 00000000000001111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL LLL // 63: fn=1, a=0X0007FFFF, b=0XFFFFFFFF, s=0X00080000\\\\n1 00000000000000111111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL LLL // 64: fn=1, a=0X0003FFFF, b=0XFFFFFFFF, s=0X00040000\\\\n1 00000000000000011111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL LLL // 65: fn=1, a=0X0001FFFF, b=0XFFFFFFFF, s=0X00020000\\\\n1 00000000000000001111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL LLL // 66: fn=1, a=0X0000FFFF, b=0XFFFFFFFF, s=0X00010000\\\\n1 00000000000000000111111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL LLL // 67: fn=1, a=0X00007FFF, b=0XFFFFFFFF, s=0X00008000\\\\n1 00000000000000000011111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL LLL // 68: fn=1, a=0X00003FFF, b=0XFFFFFFFF, s=0X00004000\\\\n1 00000000000000000001111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL LLL // 69: fn=1, a=0X00001FFF, b=0XFFFFFFFF, s=0X00002000\\\\n1 00000000000000000000111111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL LLL // 70: fn=1, a=0X00000FFF, b=0XFFFFFFFF, s=0X00001000\\\\n1 00000000000000000000011111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL LLL // 71: fn=1, a=0X000007FF, b=0XFFFFFFFF, s=0X00000800\\\\n1 00000000000000000000001111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL LLL // 72: fn=1, a=0X000003FF, b=0XFFFFFFFF, s=0X00000400\\\\n1 00000000000000000000000111111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL LLL // 73: fn=1, a=0X700001FF, b=0XFFFFFFFF, s=0X00000200\\\\n1 00000000000000000000000011111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LLL // 74: fn=1, a=0X000000FF, b=0XFFFFFFFF, s=0X00000100\\\\n1 00000000000000000000000001111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL LLL // 75: fn=1, a=0X0000007F, b=0XFFFFFFFF, s=0X00000080\\\\n1 00000000000000000000000000111111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL LLL // 76: fn=1, a=0X0000003F, b=0XFFFFFFFF, s=0X00000040\\\\n1 00000000000000000000000000011111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL LLL // 77: fn=1, a=0X0000001F, b=0XFFFFFFFF, s=0X00000020\\\\n1 00000000000000000000000000001111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL LLL // 78: fn=1, a=0X0000000F, b=0XFFFFFFFF, s=0X00000010\\\\n1 00000000000000000000000000000111 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LLL // 79: fn=1, a=0X00000007, b=0XFFFFFFFF, s=0X00000008\\\\n1 00000000000000000000000000000011 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LLL // 80: fn=1, a=0X00000003, b=0XFFFFFFFF, s=0X00000004\\\\n1 00000000000000000000000000000001 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL LLL // 81: fn=1, a=0X00000001, b=0XFFFFFFFF, s=0X00000002\\\\n1 00000000000000000000000000000000 11111111111111111111111111111111 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH LLL // 82: fn=1, a=0X00000000, b=0XFFFFFFFF, s=0X00000001\\\\n      \\\\n.plot X(AFN)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot Z\\\\n.plot V\\\\n.plot N\\\\n\\\"]]},\\\"/user/cla1\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/xor2\\\",[-64,-112,0]],[\\\"/gates/xor2\\\",[-16,-120,0]],[\\\"wire\\\",[-16,-128,0,-64,0]],[\\\"wire\\\",[-64,-112,0,-16,0]],[\\\"wire\\\",[-64,-96,0,-16,0]],[\\\"wire\\\",[-16,-104,0,0,16]],[\\\"wire\\\",[32,-112,0,16,0]],[\\\"wire\\\",[-16,-88,0,64,0]],[\\\"/gates/and2\\\",[-16,-56,0]],[\\\"wire\\\",[-16,-56,0,-8,0],{\\\"signal\\\":\\\"a\\\"}],[\\\"wire\\\",[-16,-40,0,-8,0],{\\\"signal\\\":\\\"b\\\"}],[\\\"wire\\\",[32,-48,0,16,0]],[\\\"port\\\",[-80,-112,0],{\\\"signal\\\":\\\"b\\\"}],[\\\"port\\\",[-80,-96,0],{\\\"signal\\\":\\\"a\\\"}],[\\\"port\\\",[-80,-128,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-16,-120,0,0,-8]],[\\\"port\\\",[48,-112,4],{\\\"signal\\\":\\\"s\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[48,-88,4],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[48,-48,4],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-40,-8,1],{\\\"name\\\":\\\"b\\\"}],[\\\"terminal\\\",[8,-8,1],{\\\"name\\\":\\\"a\\\"}],[\\\"terminal\\\",[32,16,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[16,40,3],{\\\"name\\\":\\\"s\\\"}],[\\\"terminal\\\",[-32,40,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-48,40,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-48,26,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[-31,26,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[15,27,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[10,15,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[6,5,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-41,7,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[-26,14,0],{\\\"text\\\":\\\"cla1\\\"}],[\\\"line\\\",[-56,32,0,80,0]],[\\\"line\\\",[24,32,0,0,-32]],[\\\"line\\\",[24,0,0,-80,0]],[\\\"line\\\",[-56,0,0,0,32]]]},\\\"/user/cl\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/and2\\\",[-24,-24,0]],[\\\"/gates/and2\\\",[-24,8,0]],[\\\"/gates/or2\\\",[24,24,0]],[\\\"port\\\",[-24,-24,0],{\\\"signal\\\":\\\"ph\\\"}],[\\\"port\\\",[-24,-8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[24,-16,0,16,0]],[\\\"port\\\",[40,-16,4],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-24,8,0],{\\\"signal\\\":\\\"ph\\\"}],[\\\"port\\\",[-24,24,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[24,16,0,0,8]],[\\\"port\\\",[24,40,0],{\\\"signal\\\":\\\"gh\\\"}],[\\\"port\\\",[72,32,4],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"text\\\",[-16,-43,0],{\\\"text\\\":\\\"gp logic\\\"}],[\\\"text\\\",[-15,62,0],{\\\"text\\\":\\\"carry logic\\\"}],[\\\"/gates/and2\\\",[-24,88,0]],[\\\"/gates/or2\\\",[24,104,0]],[\\\"port\\\",[72,112,4],{\\\"signal\\\":\\\"ch\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[72,144,4],{\\\"signal\\\":\\\"cl\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[64,144,0]],[\\\"wire\\\",[64,144,0,-8,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[24,104,0,0,-8]],[\\\"wire\\\",[24,120,0,-8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"port\\\",[-24,88,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[-24,104,0,-8,0],{\\\"signal\\\":\\\"pl\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-24,-32,1],{\\\"name\\\":\\\"gh\\\"}],[\\\"terminal\\\",[-8,-32,1],{\\\"name\\\":\\\"ph\\\"}],[\\\"terminal\\\",[16,-32,1],{\\\"name\\\":\\\"ch\\\"}],[\\\"terminal\\\",[32,-8,4],{\\\"name\\\":\\\"gl\\\"}],[\\\"terminal\\\",[32,0,4],{\\\"name\\\":\\\"pl\\\"}],[\\\"terminal\\\",[32,16,4],{\\\"name\\\":\\\"cl\\\"}],[\\\"terminal\\\",[16,40,3],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[-8,40,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-24,40,3],{\\\"name\\\":\\\"g\\\"}],[\\\"line\\\",[-32,-24,0,56,0]],[\\\"line\\\",[24,-24,0,0,56]],[\\\"line\\\",[24,32,0,-56,0]],[\\\"line\\\",[-32,32,0,0,-56]],[\\\"text\\\",[-25,-20,0],{\\\"text\\\":\\\"gh\\\"}],[\\\"text\\\",[-8,-20,0],{\\\"text\\\":\\\"ph\\\"}],[\\\"text\\\",[-26,26,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[-10,26,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[5,26,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[11,-21,0],{\\\"text\\\":\\\"ch\\\"}],[\\\"text\\\",[14,-8,0],{\\\"text\\\":\\\"gl\\\"}],[\\\"text\\\",[14,0,0],{\\\"text\\\":\\\"pl\\\"}],[\\\"text\\\",[14,17,0],{\\\"text\\\":\\\"cl\\\"}],[\\\"text\\\",[-18,-9,0],{\\\"text\\\":\\\"Hi\\\"}],[\\\"text\\\",[-19,19,0],{\\\"text\\\":\\\"HiLo\\\"}],[\\\"text\\\",[3,3,0],{\\\"text\\\":\\\"Lo\\\"}],[\\\"text\\\",[-20,4,0],{\\\"text\\\":\\\"CL\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"property\\\",[-46,2,3],{\\\"format\\\":\\\"{name}\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/user/cla2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/user/cla1\\\",[-8,-48,0]],[\\\"port\\\",[0,-56,1],{\\\"signal\\\":\\\"a[1:0]\\\"}],[\\\"port\\\",[-48,-56,1],{\\\"signal\\\":\\\"b[1:0]\\\"}],[\\\"wire\\\",[24,-32,0,16,0],{\\\"signal\\\":\\\"ch,cl\\\"}],[\\\"port\\\",[8,-8,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cl\\\",[-32,112,0]],[\\\"wire\\\",[-16,80,0,0,-16],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-40,80,0,0,-16],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-56,80,0,0,-16],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[0,104,0,16,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[0,112,0,16,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[0,128,0,16,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-16,152,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-40,152,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-56,152,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-56,-8,0,0,16],{\\\"signal\\\":\\\"gh,gl\\\"}],[\\\"wire\\\",[-40,32,0,0,-40],{\\\"signal\\\":\\\"ph,pl\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-24,8,1],{\\\"name\\\":\\\"b[1:0]\\\"}],[\\\"terminal\\\",[24,8,1],{\\\"name\\\":\\\"a[1:0]\\\"}],[\\\"terminal\\\",[48,32,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[32,56,3],{\\\"name\\\":\\\"s[1:0]\\\"}],[\\\"terminal\\\",[-16,56,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-32,56,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-32,42,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[-15,42,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[31,43,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[25,31,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[22,21,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-25,23,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[-10,30,0],{\\\"text\\\":\\\"cla2\\\"}],[\\\"line\\\",[-40,48,0,80,0]],[\\\"line\\\",[40,48,0,0,-32]],[\\\"line\\\",[40,16,0,-80,0]],[\\\"line\\\",[-40,16,0,0,32]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[1:0] B[1:0] cin\\\\n.group outputs S[1:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n01 01 0 HL // 1 + 1 = 2\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[1:0])\\\\n.plot X(B[1:0])\\\\n.plot X(S[1:0])\\\\n.plot X(gl)\\\\n.plot X(gh)\\\\n.plot X(pl)\\\\n.plot X(ph)\\\\n.plot X(ch)\\\\n.plot X(cl)\\\\n.plot X(g)\\\\n.plot X(p)\\\\n\\\\n/*\\\\n00 00 0 LL\\\\n00 01 0 LH\\\\n00 10 0 HL\\\\n01 00 0 LH\\\\n10 00 0 HL\\\\n\\\\n00 11 1 LL // 0 + 3 + 1 = 0\\\\n01 11 0 LL // 1 + 3 = 0\\\\n\\\\n01 10 0 HH // 1 + 2 = 3\\\\n00 10 1 HH // 0 + 2 + 1 = 3\\\\n10 11 0 LH // 2 + 3 = 1\\\\n11 11 0 HL // 3 + 3 = 2\\\\n11 11 1 HH // 3 + 3 + 1 = 3\\\\n*/\\\\n\\\\n\\\"]]},\\\"/user/a31_v2investigate\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-120,344,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-40,-96,1],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-88,-96,1],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[16,-112,3],{\\\"signal\\\":\\\"s[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-232,304,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-64,-80,0]],[\\\"wire\\\",[-88,-72,0,0,-8],{\\\"signal\\\":\\\"b[31:2]\\\"}],[\\\"wire\\\",[-40,-72,0,0,-8],{\\\"signal\\\":\\\"a[31:2]\\\"}],[\\\"wire\\\",[-80,-24,0,0,8],{\\\"signal\\\":\\\"p1[15:1]\\\"}],[\\\"wire\\\",[-32,-24,0,0,8],{\\\"signal\\\":\\\"s[31:2]\\\"}],[\\\"wire\\\",[-96,0,0,0,-24],{\\\"signal\\\":\\\"g1[15:1]\\\"}],[\\\"/user/cl\\\",[120,24,0],{\\\"name\\\":\\\"stage1\\\"}],[\\\"wire\\\",[64,-8,0,0,-16],{\\\"signal\\\":\\\"g1[15:1:2]\\\"}],[\\\"wire\\\",[152,16,0,16,0],{\\\"signal\\\":\\\"g1[14:0:2]\\\"}],[\\\"wire\\\",[112,-8,0,0,-16],{\\\"signal\\\":\\\"p1[15:1:2]\\\"}],[\\\"wire\\\",[152,24,0,16,0],{\\\"signal\\\":\\\"p1[14:0:2]\\\"}],[\\\"wire\\\",[72,64,0,0,16],{\\\"signal\\\":\\\"g2[7:0]\\\"}],[\\\"wire\\\",[112,64,0,0,16],{\\\"signal\\\":\\\"p2[7:0]\\\"}],[\\\"wire\\\",[96,64,0,-24,0]],[\\\"/user/cl\\\",[-104,96,0],{\\\"name\\\":\\\"stage2\\\"}],[\\\"wire\\\",[-160,64,0,0,-16],{\\\"signal\\\":\\\"g2[7:1:2]\\\"}],[\\\"wire\\\",[-72,88,0,16,0],{\\\"signal\\\":\\\"g2[6:0:2]\\\"}],[\\\"wire\\\",[-112,64,0,0,-16],{\\\"signal\\\":\\\"p2[7:1:2]\\\"}],[\\\"wire\\\",[-72,96,0,16,0],{\\\"signal\\\":\\\"p2[6:0:2]\\\"}],[\\\"wire\\\",[-152,136,0,0,16],{\\\"signal\\\":\\\"g3[3:0]\\\"}],[\\\"wire\\\",[-112,136,0,0,16],{\\\"signal\\\":\\\"p3[3:0]\\\"}],[\\\"wire\\\",[-128,136,0,-24,0]],[\\\"wire\\\",[96,-8,0,-32,0]],[\\\"/user/cl\\\",[56,176,0],{\\\"name\\\":\\\"stage3\\\"}],[\\\"wire\\\",[0,144,0,0,-16],{\\\"signal\\\":\\\"g3[3:1:2]\\\"}],[\\\"wire\\\",[88,168,0,16,0],{\\\"signal\\\":\\\"g3[2:0:2]\\\"}],[\\\"wire\\\",[88,176,0,16,0],{\\\"signal\\\":\\\"p3[2:0:2]\\\"}],[\\\"wire\\\",[8,216,0,0,16],{\\\"signal\\\":\\\"g4[1:0]\\\"}],[\\\"wire\\\",[48,216,0,0,16],{\\\"signal\\\":\\\"p4[1:0]\\\"}],[\\\"wire\\\",[32,216,0,-24,0]],[\\\"wire\\\",[-128,64,0,-32,0]],[\\\"wire\\\",[48,144,0,0,-16],{\\\"signal\\\":\\\"p3[3:1:2]\\\"}],[\\\"/user/cl\\\",[-112,256,0],{\\\"name\\\":\\\"stage4\\\"}],[\\\"wire\\\",[-168,224,0,0,-16],{\\\"signal\\\":\\\"g4[1]\\\"}],[\\\"wire\\\",[-80,248,0,16,0],{\\\"signal\\\":\\\"g4[0]\\\"}],[\\\"wire\\\",[-136,224,0,-32,0]],[\\\"wire\\\",[-80,256,0,16,0],{\\\"signal\\\":\\\"p4[0]\\\"}],[\\\"wire\\\",[-120,296,0,0,16],{\\\"signal\\\":\\\"p5\\\"}],[\\\"wire\\\",[-120,224,0,0,-16],{\\\"signal\\\":\\\"p4[1]\\\"}],[\\\"wire\\\",[32,144,0,-32,0]],[\\\"/gates/or2\\\",[-184,296,4]],[\\\"/gates/and2\\\",[-120,312,4]],[\\\"wire\\\",[-136,296,0,-48,0]],[\\\"wire\\\",[-184,312,0,16,0]],[\\\"wire\\\",[-168,320,0,0,-8]],[\\\"wire\\\",[-120,328,0,0,16]],[\\\"wire\\\",[-120,328,0,24,0]],[\\\"wire\\\",[-96,296,0,0,32]],[\\\"wire\\\",[-96,224,0,0,-16],{\\\"signal\\\":\\\"c1[1]\\\"}],[\\\"wire\\\",[-80,272,0,16,0],{\\\"signal\\\":\\\"c1[0]\\\"}],[\\\"wire\\\",[80,216,0,0,16],{\\\"signal\\\":\\\"c1[1:0]\\\"}],[\\\"wire\\\",[72,216,0,8,0]],[\\\"wire\\\",[72,144,0,24,0],{\\\"signal\\\":\\\"c2[3:1:2]\\\"}],[\\\"wire\\\",[88,192,0,16,0],{\\\"signal\\\":\\\"c2[2:0:2]\\\"}],[\\\"wire\\\",[-88,64,0,32,0],{\\\"signal\\\":\\\"c3[7:1:2]\\\"}],[\\\"wire\\\",[-72,112,0,16,0],{\\\"signal\\\":\\\"c3[6:0:2]\\\"}],[\\\"wire\\\",[-88,136,0,32,0],{\\\"signal\\\":\\\"c2[3:0]\\\"}],[\\\"wire\\\",[136,-8,0,32,0],{\\\"signal\\\":\\\"c4[15:1:2]\\\"}],[\\\"wire\\\",[152,40,0,16,0],{\\\"signal\\\":\\\"c4[14:0:2]\\\"}],[\\\"wire\\\",[136,64,0,32,0],{\\\"signal\\\":\\\"c3[7:0]\\\"}],[\\\"wire\\\",[24,-160,0,24,0],{\\\"signal\\\":\\\"c4[15:0]\\\"}],[\\\"text\\\",[-102,-145,0],{\\\"text\\\":\\\"v2: cla adder\\\"}],[\\\"wire\\\",[-16,-48,0,16,0],{\\\"signal\\\":\\\"0'15\\\"}],[\\\"port\\\",[-184,-40,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-216,-104,0]],[\\\"wire\\\",[-240,-96,0,0,-8],{\\\"signal\\\":\\\"b[1:0]\\\"}],[\\\"wire\\\",[-192,-96,0,0,-8],{\\\"signal\\\":\\\"a[1:0]\\\"}],[\\\"wire\\\",[-232,-48,0,0,8],{\\\"signal\\\":\\\"p1[0]\\\"}],[\\\"wire\\\",[-184,-48,0,0,8]],[\\\"wire\\\",[-248,-24,0,0,-24],{\\\"signal\\\":\\\"g1[0]\\\"}],[\\\"wire\\\",[-168,-72,0,16,0],{\\\"signal\\\":\\\"0'1\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n\\\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\\\n  \\\\n//01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n//00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32_v2\\\\n\\\"}]]},\\\"/user/cla2test\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-504,-48,1],{\\\"signal\\\":\\\"A[1:0]\\\"}],[\\\"port\\\",[-552,-48,1],{\\\"signal\\\":\\\"B[1:0]\\\"}],[\\\"port\\\",[-496,16,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-528,-48,0]],[\\\"wire\\\",[-552,-40,0,0,-8]],[\\\"wire\\\",[-504,-40,0,0,-8]],[\\\"wire\\\",[-544,8,0,0,8],{\\\"signal\\\":\\\"p1\\\"}],[\\\"wire\\\",[-496,8,0,0,8]],[\\\"wire\\\",[-560,32,0,0,-24],{\\\"signal\\\":\\\"g1\\\"}],[\\\"wire\\\",[-480,-16,0,24,0],{\\\"signal\\\":\\\"c4\\\"}],[\\\"port\\\",[-456,-40,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"jumper\\\",[-456,-24,1]],[\\\"wire\\\",[-456,-40,0,0,16]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[1:0] B[1:0] cin\\\\n.group outputs S[1:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n01  01 0 HL\\\\n01  01 1 HH\\\\n\\\\n.plot X(g1)\\\\n.plot X(p1)\\\\n.plot X(c4)\\\\n.plot X(s[1:0])\\\\n\\\\n\\\\n/*\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\\n*/\\\\n\\\\n/*00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n*/\\\\n\\\\n\\\\n  \\\\n//01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n//00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\\\n\\\"]]},\\\"/user/cla4test\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[3:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[3:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[3:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-552,-88,0]],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"p1[1:0]\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"g1[1:0]\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"c4[1:0]\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"g1[1]\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"p1[1]\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"c4[1]\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"g1[0]\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"p1[0]\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"c4[0]\\\"}],[\\\"wire\\\",[-584,128,0,0,16],{\\\"signal\\\":\\\"g2\\\"}],[\\\"wire\\\",[-568,128,0,0,8],{\\\"signal\\\":\\\"p2\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[3:0] B[3:0] cin\\\\n.group outputs S[3:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0001  0001 0 LLHL\\\\n//0001  0001 1 LLHH\\\\n\\\\n.plot X(g1[1:0])\\\\n.plot X(p1[1:0])\\\\n.plot X(c4[1:0])\\\\n.plot X(s[3:0])\\\"]]},\\\"/user/cla4test_v2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[1:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[1:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-552,-88,0]],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"wire\\\",[-584,128,0,0,16],{\\\"signal\\\":\\\"g\\\"}],[\\\"wire\\\",[-568,128,0,0,8],{\\\"signal\\\":\\\"p\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[3:2]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[3:2]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[3:2]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-712,-88,0]],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[3:0] B[3:0] cin\\\\n.group outputs S[3:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0001 0001 0 LLHL\\\\n0001 0001 1 LLHH\\\\n1111 0001 0 LLLL\\\\n\\\\n.plot X(s[3:0])\\\"]]},\\\"/user/cla4\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[1:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[1:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-552,-88,0]],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[3:2]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[3:2]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[3:2]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla2\\\",[-712,-88,0]],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-584,128,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[3:0] B[3:0] cin\\\\n.group outputs S[3:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n0001 0001 0 LLHL\\\\n0001 0001 1 LLHH\\\\n1111 0001 0 LLLL\\\\n\\\\n.plot X(s[3:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-8,24,1],{\\\"name\\\":\\\"b[3:0]\\\"}],[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[3:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[3:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-16,72,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-16,58,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-9,39,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[6,46,0],{\\\"text\\\":\\\"cla4\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla8\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[3:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[3:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[3:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[7:4]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[7:4]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[7:4]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-584,128,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla4\\\",[-568,-104,0]],[\\\"/user/cla4\\\",[-728,-104,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[7:0] B[7:0] cin\\\\n.group outputs S[7:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000001 00000001 0 LLLLLLHL\\\\n00000001 00000001 1 LLLLLLHH\\\\n11111111 00000001 0 LLLLLLLL\\\\n\\\\n.plot X(s[7:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-8,24,1],{\\\"name\\\":\\\"b[7:0]\\\"}],[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[7:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[7:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-16,72,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-16,58,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-9,39,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[6,46,0],{\\\"text\\\":\\\"cla8\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/cla16\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-528,-88,1],{\\\"signal\\\":\\\"A[7:0]\\\"}],[\\\"port\\\",[-576,-88,1],{\\\"signal\\\":\\\"B[7:0]\\\"}],[\\\"port\\\",[-520,-24,3],{\\\"signal\\\":\\\"s[7:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-576,-80,0,0,-8]],[\\\"wire\\\",[-528,-80,0,0,-8]],[\\\"wire\\\",[-568,-32,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-520,-32,0,0,8]],[\\\"wire\\\",[-584,-8,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-504,-56,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-544,128,3],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/user/cl\\\",[-560,88,0]],[\\\"wire\\\",[-584,56,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-568,56,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-544,56,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-528,80,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-528,88,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-528,104,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-688,-88,1],{\\\"signal\\\":\\\"A[15:8]\\\"}],[\\\"port\\\",[-736,-88,1],{\\\"signal\\\":\\\"B[15:8]\\\"}],[\\\"port\\\",[-680,-24,3],{\\\"signal\\\":\\\"s[15:8]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-736,-80,0,0,-8]],[\\\"wire\\\",[-688,-80,0,0,-8]],[\\\"wire\\\",[-728,-32,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-680,-32,0,0,8]],[\\\"wire\\\",[-744,-8,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-664,-56,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"port\\\",[-584,128,3],{\\\"signal\\\":\\\"g\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-568,128,3],{\\\"signal\\\":\\\"p\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/cla8\\\",[-568,-104,0]],[\\\"/user/cla8\\\",[-728,-104,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[15:0] B[15:0] cin\\\\n.group outputs S[15:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000001 00000000 00000001 0 LLLLLLLL LLLLLLHL\\\\n00000000 00000001 00000000 00000001 1 LLLLLLLL LLLLLLHH\\\\n11111111 11111111 00000000 00000001 0 LLLLLLLL LLLLLLLL\\\\n\\\\n.plot X(s[15:0])\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-8,24,1],{\\\"name\\\":\\\"b[15:0]\\\"}],[\\\"terminal\\\",[40,24,1],{\\\"name\\\":\\\"a[15:0]\\\"}],[\\\"terminal\\\",[64,48,4],{\\\"name\\\":\\\"cin\\\"}],[\\\"terminal\\\",[48,72,3],{\\\"name\\\":\\\"s[15:0]\\\"}],[\\\"terminal\\\",[0,72,3],{\\\"name\\\":\\\"p\\\"}],[\\\"terminal\\\",[-16,72,3],{\\\"name\\\":\\\"g\\\"}],[\\\"text\\\",[-16,58,0],{\\\"text\\\":\\\"g\\\"}],[\\\"text\\\",[1,58,0],{\\\"text\\\":\\\"p\\\"}],[\\\"text\\\",[47,59,0],{\\\"text\\\":\\\"s\\\"}],[\\\"text\\\",[41,47,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"text\\\",[38,37,0],{\\\"text\\\":\\\"a\\\"}],[\\\"text\\\",[-9,39,0],{\\\"text\\\":\\\"b\\\"}],[\\\"text\\\",[6,46,0],{\\\"text\\\":\\\"cla16\\\"}],[\\\"line\\\",[-24,64,0,80,0]],[\\\"line\\\",[56,64,0,0,-32]],[\\\"line\\\",[56,32,0,-80,0]],[\\\"line\\\",[-24,32,0,0,32]]]},\\\"/user/add32_v3\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-648,208,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"port\\\",[-760,168,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-648,160,0,0,16]],[\\\"/gates/or2\\\",[-712,160,4]],[\\\"/gates/and2\\\",[-648,176,4]],[\\\"wire\\\",[-664,160,0,-48,0]],[\\\"wire\\\",[-712,176,0,16,0]],[\\\"wire\\\",[-696,184,0,0,-8]],[\\\"wire\\\",[-648,192,0,0,16]],[\\\"wire\\\",[-648,192,0,24,0]],[\\\"wire\\\",[-624,160,0,0,32]],[\\\"port\\\",[-608,-56,1],{\\\"signal\\\":\\\"A[15:0]\\\"}],[\\\"port\\\",[-656,-56,1],{\\\"signal\\\":\\\"B[15:0]\\\"}],[\\\"port\\\",[-600,8,3],{\\\"signal\\\":\\\"s[15:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-656,-48,0,0,-8]],[\\\"wire\\\",[-608,-48,0,0,-8]],[\\\"wire\\\",[-648,0,0,0,8],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-600,0,0,0,8]],[\\\"wire\\\",[-664,24,0,0,-24],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-584,-24,0,24,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"/user/cl\\\",[-640,120,0]],[\\\"wire\\\",[-664,88,0,0,-8],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-648,88,0,0,-24],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-624,88,0,0,-8],{\\\"signal\\\":\\\"ch\\\"}],[\\\"wire\\\",[-608,112,0,8,0],{\\\"signal\\\":\\\"gl\\\"}],[\\\"wire\\\",[-608,120,0,8,0],{\\\"signal\\\":\\\"pl\\\"}],[\\\"wire\\\",[-608,136,0,8,0],{\\\"signal\\\":\\\"cl\\\"}],[\\\"port\\\",[-768,-56,1],{\\\"signal\\\":\\\"A[31:16]\\\"}],[\\\"port\\\",[-816,-56,1],{\\\"signal\\\":\\\"B[31:16]\\\"}],[\\\"port\\\",[-760,8,3],{\\\"signal\\\":\\\"s[31:16]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-816,-48,0,0,-8]],[\\\"wire\\\",[-768,-48,0,0,-8]],[\\\"wire\\\",[-808,0,0,0,8],{\\\"signal\\\":\\\"ph\\\"}],[\\\"wire\\\",[-760,0,0,0,8]],[\\\"wire\\\",[-824,24,0,0,-24],{\\\"signal\\\":\\\"gh\\\"}],[\\\"wire\\\",[-744,-24,0,24,0],{\\\"signal\\\":\\\"ch\\\"}],[\\\"/user/cla16\\\",[-648,-72,0]],[\\\"/user/cla16\\\",[-808,-72,0]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000001  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n00000000 00000000 00000000 00000000  10000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 LHLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n \\\\n01000000 00000000 00000000 00000000  01000000 00000000 00000000 00000000 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L  \\\\n00000000 00000000 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLH LLLLLLLL LLLLLLLL L\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\\n\\\\n\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32_v3\\\\n\\\"}]]}},\\\"last_saved\\\":1644301708521}\",\"check\":\"right\"},\"1A\":{\"id\":\"1A\",\"value\":\"2**3\",\"check\":\"right\"},\"1B\":{\"id\":\"1B\",\"value\":\"((2**64)*100e-9)/(60*60*24*365)\",\"check\":\"right\"},\"1C1\":{\"id\":\"1C1\",\"value\":\"A[N-1]=0, B[N-1]=0\",\"check\":\"right\"},\"1C2\":{\"id\":\"1C2\",\"value\":\"A[N-1]=1, B[N-1]=1\",\"check\":\"right\"},\"1E1\":{\"id\":\"1E1\",\"value\":\"0x00000005 - 0xDEADBEEF\",\"check\":\"right\"},\"1E2\":{\"id\":\"1E2\",\"value\":\"0x12345678 - 0x12345678\",\"check\":\"right\"},\"1E3\":{\"id\":\"1E3\",\"value\":\"0x80000000 - 0x00000001\",\"check\":\"right\"},\"1E4\":{\"id\":\"1E4\",\"value\":\"0xDEADBEEF - 0x00000005\",\"check\":\"right\"},\"1E5\":{\"id\":\"1E5\",\"value\":\"0x7FFFFFFF - 0xFFFFFFFF\",\"check\":\"right\"},\"3A\":{\"id\":\"3A\",\"value\":\"1000\",\"check\":\"right\"},\"3B\":{\"id\":\"3B\",\"value\":\"1110\",\"check\":\"right\"},\"3C\":{\"id\":\"3C\",\"value\":\"0110\",\"check\":\"right\"},\"3D\":{\"id\":\"3D\",\"value\":\"0111\",\"check\":\"right\"},\"3E\":{\"id\":\"3E\",\"value\":\"0001\",\"check\":\"right\"},\"3F\":{\"id\":\"3F\",\"value\":\"1001\",\"check\":\"right\"},\"3G\":{\"id\":\"3G\",\"value\":\"1010\",\"check\":\"right\"},\"3H\":{\"id\":\"3H\",\"value\":\"1100\",\"check\":\"right\"},\"_timestamp_\":1644301708558}","/ComputationStructures/videos/isa/lecture.html":"{}","/ComputationStructures/notes/sequential_logic/notes.html":"{}","/ComputationStructures/videos/caches/lecture.html":"{}","/ComputationStructures/notes/assembly/notes.html":"{}","/ComputationStructures/lectures/fsm/fsm.html":"{}","/ComputationStructures/worksheets/L01.html":"{}","/ComputationStructures/notes/cmos/notes.html":"{}","/ComputationStructures/exercises/fsm/lab.html":"{\"3\":{\"id\":\"3\",\"value\":\"{\\\"tests\\\":{\\\"Paren checker\\\":\\\"passed 396954104 2\\\"},\\\"required_tests\\\":[\\\"-2122075866\\\"],\\\"state\\\":{\\\"Paren checker\\\":\\\"// Parenthesis matcher Turing Machine\\\\n// test tapes \\\\n\\\\nsymbols ( ) 0 1\\\\n\\\\ntape test1 (\\\\nresult1 test1 0\\\\n\\\\ntape test2 )\\\\nresult1 test2 0\\\\n\\\\ntape test3 ( ) ( )\\\\nresult1 test3 1\\\\n\\\\ntape test4 ( ) ( ) )\\\\nresult1 test4 0\\\\n\\\\ntape test5 ( ( ( )\\\\nresult1 test5 0\\\\n\\\\ntape test6 ( ) ( ( ( ) ( ( ( ) ) ( ) ) )\\\\nresult1 test6 0\\\\n\\\\ntape test7 ( ( ( ( ( ( ) ( ( ) ) ) ) ) ) )\\\\nresult1 test7 1\\\\n\\\\ntape test8 ( ( ( ) ( ) ( ) ) ) ( ( ) )\\\\nresult1 test8 1\\\\n\\\\ntape test9 ( )\\\\nresult1 test9 1\\\\n\\\\n// define additional symbols, your states and actions here\\\\nstates f l\\\\nsymbols s o z y\\\\n\\\\naction f ( l s l\\\\naction f ) *halt* 0 -\\\\naction f - *halt* 1 -\\\\naction f y f y l\\\\n\\\\naction l ) l y r //change direction\\\\naction l ( l o l\\\\naction l - *halt* 0 -\\\\n\\\\naction l o l z l //change direction \\\\naction l s f y - //change direction\\\\naction l z l y r\\\\naction l y l z l\\\\n\\\\n\\\\n\\\\n\\\"}}\",\"check\":\"right\"},\"4\":{\"id\":\"4\",\"value\":\"{\\\"tests\\\":{\\\"/fsm2/fsm2\\\":\\\"Error detected extracting netlist:<p>No schematic for  an instance of /user/untitled\\\",\\\"/fsm/fsm\\\":\\\"passed 2cce5785aabc06797428a547fb914d7c d41d8cd98f00b204e9800998ecf8427e 96446.89633887606\\\"},\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/buffer\\\",[-16,-8,0]]],\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/fsm/fsm\\\":{\\\"schematic\\\":[[\\\"port\\\",[312,-88,4],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[368,-128,7],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[208,-184,0],{\\\"signal\\\":\\\"IN\\\"}],[\\\"port\\\",[520,-176,4],{\\\"signal\\\":\\\"U\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[360,-264,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"memory\\\",[296,-208,0],{\\\"naddr\\\":\\\"4\\\",\\\"ndata\\\":\\\"4\\\",\\\"name\\\":\\\"ROM2\\\",\\\"contents\\\":\\\"0b0100 //D -> E \\\\n0b1000 //  -> F\\\\n0b0000 //B -> D\\\\n0b1110 //  -> C\\\\n0b1000 //E -> F\\\\n0b1110 //  -> C\\\\n0b0111 //A -> A\\\\n0b0011 //  -> B\\\\n0b0110 //F -> A\\\\n0b1000 //  -> F\\\\n// unused locations\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0001 //C -> D\\\\n0b0101 //  -> E\\\"}],[\\\"wire\\\",[296,-200,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[296,-192,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[296,-184,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[376,-96,2]],[\\\"wire\\\",[376,-96,0,24,0],{\\\"signal\\\":\\\"0b011'3\\\",\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[376,-112,0,16,0],{\\\"signal\\\":\\\"D[3:1]\\\",\\\"width\\\":\\\"3\\\"}],[\\\"/gates/dreg\\\",[312,-104,4]],[\\\"wire\\\",[312,-104,0,48,0],{\\\"width\\\":\\\"3\\\",\\\"signal\\\":\\\"muxout[2:0]\\\"}],[\\\"wire\\\",[272,-104,0,-24,0],{\\\"signal\\\":\\\"q[2:0]\\\"}],[\\\"wire\\\",[488,-176,0,-16,0],{\\\"signal\\\":\\\"Q[2]\\\"}],[\\\"wire\\\",[296,-208,0,-16,0],{\\\"signal\\\":\\\"Q[2:0], IN\\\"}],[\\\"wire\\\",[368,-208,0,16,0],{\\\"signal\\\":\\\"D[3:0]\\\"}],[\\\"jumper\\\",[352,-264,0]],[\\\"wire\\\",[352,-264,0,-8,0],{\\\"signal\\\":\\\"D[0]\\\"}],[\\\"jumper\\\",[488,-176,0]],[\\\"wire\\\",[496,-176,0,24,0]]]},\\\"/fsm2/fsm2\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"},\\\"test-readonly\\\":\\\"true\\\"},\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET IN\\\\n.group outputs U V\\\\n.mode gate\\\\n\\\\n.cycle CLK=0 assert inputs tran 10n CLK=1 tran 20n CLK=0 tran 5n sample outputs tran 5n\\\\n\\\\n1 0 LH //  1. now in SA\\\\n0 0 LH //  2. now in SA\\\\n0 1 LL //  3. now in SB\\\\n0 0 LL //  4. now in SD\\\\n0 1 HL //  5. now in SF\\\\n0 1 HL //  6. now in SF\\\\n0 0 LH //  7. now in SA\\\\n0 1 LL //  8. now in SB\\\\n0 1 HH //  9. now in SC\\\\n0 0 LL // 10. now in SD\\\\n0 0 LL // 11. now in SE\\\\n0 1 HH // 12. now in SC\\\\n0 1 LL // 13. now in SE\\\\n0 0 HL // 14. now in SF\\\\n0 0 LH // 15. now in SA\\\\n\\\\n// now test that RESET always returns us SA\\\\n1 0 LH // 16. now in SA (reset asserted)\\\\n0 1 LL // 17. now in SB\\\\n1 0 LH // 18. now in SA (reset asserted)\\\\n0 1 LL // 19. now in SB\\\\n0 1 HH // 20. now in SC\\\\n1 0 LH // 21. now in SA (reset asserted)\\\\n0 1 LL // 22. now in SB\\\\n0 0 LL // 23. now in SD\\\\n1 0 LH // 24. now in SA (reset asserted)\\\\n0 1 LL // 25. now in SB\\\\n0 0 LL // 26. now in SD\\\\n0 1 HL // 27. now in SF\\\\n1 0 LH // 28. now in SA (reset asserted)\\\\n0 1 LL // 29. now in SB\\\\n0 0 LL // 30. now in SD\\\\n0 0 LL // 31. now in SE\\\\n1 0 LH // 32. now in SA (reset asserted)\\\\n\\\\n// test RESET again this time with IN=1 on reset cycles\\\\n1 1 LH // 33. now in SA (reset asserted)\\\\n0 1 LL // 34. now in SB\\\\n1 1 LH // 35. now in SA (reset asserted)\\\\n0 1 LL // 36. now in SB\\\\n0 1 HH // 37. now in SC\\\\n1 1 LH // 38. now in SA (reset asserted)\\\\n0 1 LL // 39. now in SB\\\\n0 0 LL // 40. now in SD\\\\n1 1 LH // 41. now in SA (reset asserted)\\\\n0 1 LL // 42. now in SB\\\\n0 0 LL // 43. now in SD\\\\n0 1 HL // 44. now in SF\\\\n1 1 LH // 45. now in SA (reset asserted)\\\\n0 1 LL // 46. now in SB\\\\n0 0 LL // 47. now in SD\\\\n0 0 LL // 48. now in SE\\\\n1 1 LH // 49. now in SA (reset asserted)\\\\n\\\\n.plot CLK\\\\n.plot RESET\\\\n.plot IN\\\\n.plot U\\\\n.plot V\\\\n\\\"]],\\\"schematic\\\":[[\\\"port\\\",[464,-128,4],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[520,-168,7],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[360,-224,0],{\\\"signal\\\":\\\"IN\\\"}],[\\\"port\\\",[600,-256,4],{\\\"signal\\\":\\\"U\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[600,-280,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/user/untitled\\\",[72,-56,0]],[\\\"memory\\\",[448,-248,0],{\\\"naddr\\\":\\\"4\\\",\\\"ndata\\\":\\\"4\\\",\\\"name\\\":\\\"ROM2\\\",\\\"contents\\\":\\\"0b0100 //D -> E \\\\n0b1000 //  -> F\\\\n0b0000 //B -> D\\\\n0b1110 //  -> C\\\\n0b1000 //E -> F\\\\n0b1110 //  -> C\\\\n0b0111 //A -> A\\\\n0b0011 //  -> B\\\\n0b0110 //F -> A\\\\n0b1000 //  -> F\\\\n// unused locations\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0110\\\\n0b0001 //C -> D\\\\n0b0101 //  -> E\\\"}],[\\\"wire\\\",[448,-240,0,-16,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[448,-232,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[448,-224,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[528,-136,2]],[\\\"wire\\\",[528,-136,0,24,0],{\\\"signal\\\":\\\"011'3\\\"}],[\\\"wire\\\",[528,-152,0,16,0],{\\\"width\\\":\\\"3\\\",\\\"signal\\\":\\\"D[2:0]\\\"}],[\\\"/gates/dreg\\\",[464,-144,4]],[\\\"wire\\\",[464,-144,0,48,0],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[424,-144,0,-24,0],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[360,-224,0,16,0]],[\\\"/gates/buffer\\\",[568,-256,0]],[\\\"wire\\\",[568,-256,0,-16,0],{\\\"signal\\\":\\\"D[3]\\\"}],[\\\"wire\\\",[600,-280,0,-40,0]],[\\\"/gates/buffer\\\",[528,-280,0]],[\\\"wire\\\",[528,-280,0,-8,0],{\\\"signal\\\":\\\"A[3]\\\"}],[\\\"wire\\\",[448,-248,0,-16,0],{\\\"signal\\\":\\\"IN, Q[2:0]\\\"}]]}},\\\"last_saved\\\":1636443297868}\",\"check\":\"right\"},\"1A1\":{\"id\":\"1A1\",\"value\":\"128\",\"check\":\"right\"},\"1A2\":{\"id\":\"1A2\",\"value\":\"6\",\"check\":\"right\"},\"1B\":{\"id\":\"1B\",\"value\":\"32\",\"check\":\"right\"},\"1C\":{\"id\":\"1C\",\"value\":\"0.7n\",\"check\":\"right\"},\"1D\":{\"id\":\"1D\",\"value\":\"12.5n\",\"check\":\"right\"},\"2A\":{\"id\":\"2A\",\"value\":\"3\",\"check\":\"right\"},\"2B\":{\"id\":\"2B\",\"value\":\"1\",\"check\":\"right\"},\"2C\":{\"id\":\"2C\",\"value\":\"0\",\"check\":\"right\"},\"2D1\":{\"id\":\"2D1\",\"value\":\"000\",\"check\":\"right\"},\"2D2\":{\"id\":\"2D2\",\"value\":\"100\",\"check\":\"right\"},\"2D3\":{\"id\":\"2D3\",\"value\":\"011\",\"check\":\"right\"},\"2D4\":{\"id\":\"2D4\",\"value\":\"111\",\"check\":\"right\"},\"2D5\":{\"id\":\"2D5\",\"value\":\"011\",\"check\":\"right\"},\"2D6\":{\"id\":\"2D6\",\"value\":\"111\",\"check\":\"right\"}}","/ComputationStructures/videos/assembly/lecture.html":"{}","/ComputationStructures/notes/memory/notes.html":"{}","/ComputationStructures/lectures/virtual/virtual.html":"{}","/ComputationStructures/exercises/sandboxes/bsim.html":"{\"bsim\":{\"id\":\"bsim\",\"value\":\"{\\\"state\\\":{\\\"Sandbox\\\":\\\".include \\\\\\\"beta.uasm\\\\\\\"\\\\n      . = 0\\\\n      LD(r31, X, r0)\\\\n      CMPLE(r0, r31, r1)\\\\n      BNE(r1, L1, r31)\\\\n      ADDC(r31, 17, r2)\\\\n      BEQ(r31, L2, r31)\\\\nL1:   SUB(r31, r0, r2)\\\\nL2:   XORC(r2, 0xFFFF, r2)     // be careful here!\\\\n      HALT()\\\\n\\\\n      . = 0x1CE8\\\\nX:    LONG(0x87654321)\\\"}}\"},\"_timestamp_\":1637140051239}","/ComputationStructures/notes/cpu/notes.html":"{}","/ComputationStructures/lectures/models/models.html":"{}","/ComputationStructures/notes/isas/notes.html":"{}","/ComputationStructures/worksheets/L10a.html":"{}","/ComputationStructures/exercises/procedures/lab.html":"{\"4\":{\"id\":\"4\",\"value\":\"{\\\"tests\\\":{\\\"test\\\":\\\"The test program did not print out the expected result. Please check the lab writeup to see what result is expected.\\\"},\\\"required_tests\\\":[\\\"1352299311\\\"],\\\"state\\\":{\\\"Quicksort\\\":\\\"////////////////////////////////////////////////////////////////////////////////\\\\n// Lab 4\\\\n////////////////////////////////////////////////////////////////////////////////\\\\n\\\\n// Include the checkoff program:\\\\n.include \\\\\\\"checkoff.uasm\\\\\\\"\\\\n\\\\n// Leave the following as zero to run ALL the test cases, and get your solution\\\\n//   validated if all pass.  If you have trouble with test case N, set it to N\\\\n//   to run JUST that test case (for easier debugging):\\\\nTestCase:       LONG(13)\\\\n\\\\n// Quicksort-in-place code.  We include the C/Python version here as a comment;\\\\n// you can use this as a model for your Beta assembly version:\\\\n\\\\n//def partition(array,left,right):\\\\n//    # choose middle element of array as pivot\\\\n//    pivotIndex = (left+right) >> 1;\\\\n//    pivotValue = array[pivotIndex]\\\\n//\\\\n//    # swap array[right] and array[pivotIndex]\\\\n//    # note that we already store array[pivotIndex] in pivotValue\\\\n//    array[pivotIndex] = array[right]\\\\n//\\\\n//    # elements <= the pivot are moved to the left (smaller indices)\\\\n//    storeIndex = left\\\\n//    for i in xrange(left,right):  # don't include array[right]\\\\n//        temp = array[i]\\\\n//        if temp <= pivotValue:\\\\n//            array[i] = array[storeIndex]\\\\n//            array[storeIndex] = temp\\\\n//            storeIndex += 1\\\\n//\\\\n//    # move pivot to its final place\\\\n//    array[right] = array[storeIndex]\\\\n//    array[storeIndex] = pivotValue;\\\\n//    return storeIndex;\\\\n\\\\n//def partition(array,left,right):\\\\npartition:\\\\n    PUSH(LP)\\\\n    PUSH(BP)\\\\n    MOVE(SP, BP)\\\\n\\\\n    //Use registers for temp vals:\\\\n\\\\tPUSH(R1) \\\\n\\\\tPUSH(R2)\\\\n\\\\tPUSH(R3)\\\\n\\\\tPUSH(R4)\\\\n\\\\tPUSH(R5)\\\\n\\\\tPUSH(R6)\\\\n\\\\tPUSH(R7)\\\\n\\\\tPUSH(R8)\\\\n\\\\tPUSH(R9)\\\\n\\\\tPUSH(R10)\\\\n\\\\tp_pivotIndex = R1\\\\n\\\\tp_tmp1 = R2\\\\n\\\\tp_tmp2 = R3\\\\n\\\\tp_left = R4\\\\n\\\\tp_right = R5\\\\n\\\\tp_array = R6\\\\n\\\\tp_pivotValue = R7\\\\n\\\\tp_i = R8\\\\n    p_temp = R9 \\\\n    p_tmp3 = R10\\\\n\\\\n\\\\tLD(BP,-20,p_right)\\\\n\\\\tLD(BP,-16,p_left)\\\\n    LD(BP,-12,p_array)\\\\n\\\\t\\\\n\\\\t//.breakpoint\\\\n\\\\t//choose middle element of array as pivot\\\\n\\\\t//pivotIndex = (left+right)>>1\\\\n\\\\tADD(p_left,p_right,p_pivotIndex)\\\\n\\\\tSHRC(p_pivotIndex,1,p_pivotIndex)\\\\n\\\\t\\\\n\\\\t//byte addressing\\\\n\\\\tSHLC(p_left,2,p_left)\\\\n\\\\tSHLC(p_right,2,p_right)\\\\n\\\\tSHLC(p_pivotIndex,2,p_pivotIndex)\\\\n\\\\n\\\\t//pivotValue = array[pivotIndex]\\\\n\\\\tADD(p_array,p_pivotIndex,p_tmp1)\\\\n\\\\tLD(p_tmp1,0,p_pivotValue) \\\\n    \\\\n\\\\t//#swap array[right] and array[pivotIndex]\\\\n    //#note that we already store array[pivotIndex] in pivotValue\\\\n\\\\t//array[pivotIndex] = array[right]\\\\n\\\\tADD(p_array,p_right,p_tmp2)\\\\n\\\\tLD(p_tmp2,0,p_tmp2)\\\\t\\\\n\\\\t//.breakpoint\\\\n\\\\tST(p_tmp2,0,p_tmp1)\\\\n\\\\t\\\\n\\\\t//#elements <= the pivot are moved to the left (smaller indices)\\\\n    //storeIndex = left\\\\n\\\\tp_storeIndex = R0\\\\n\\\\tMOVE(p_left,p_storeIndex)\\\\n\\\\t\\\\n    //for i in xrange(left,right):  # don't include array[right]    \\\\n    MOVE(p_left,p_i)\\\\n    p_FOR:\\\\n\\\\t\\\\t//temp = array[i]\\\\n\\\\t\\\\tADD(p_array,p_i,p_tmp2)\\\\n\\\\t\\\\tLD(p_tmp2,0,p_temp)\\\\n\\\\t\\\\t// if temp <= pivotValue\\\\n\\\\t\\\\tCMPLE(p_temp,p_pivotValue,p_tmp1)\\\\n\\\\t\\\\tBF(p_tmp1,p_ELSE) \\\\n\\\\t\\\\t\\\\t//array[i] = array[storeIndex]\\\\n\\\\t\\\\t\\\\t//.breakpoint\\\\n\\\\t\\\\t\\\\tADD(p_array,p_storeIndex,p_tmp3)\\\\n\\\\t\\\\t\\\\tLD(p_tmp3,0,p_tmp1) //array[i] in p_tmp1\\\\n\\\\t\\\\t\\\\tST(p_tmp1,0,p_tmp2)     \\\\t\\\\t\\\\t\\\\n\\\\t\\\\t\\\\t//array[storeIndex] = temp\\\\n\\\\t\\\\t\\\\tST(p_temp,0,p_tmp3)\\\\n\\\\t\\\\t\\\\t//storeIndex += 1\\\\n\\\\t\\\\t\\\\tADDC(p_storeIndex,4,p_storeIndex)\\\\n\\\\t\\\\tp_ELSE:\\\\n\\\\t\\\\tADDC(p_i,4,p_i)                 \\\\n\\\\t\\\\tCMPLT(p_i,p_right,p_tmp1)\\\\n\\\\t\\\\tBNE(p_tmp1,p_FOR)\\\\n\\\\n\\\\t//#move pivot to its final place\\\\n\\\\t//array[right] = array[storeIndex]\\\\n\\\\tADD(p_array,p_right,p_tmp1)\\\\n\\\\tADD(p_array,p_storeIndex,p_tmp2)\\\\n\\\\t//.breakpoint\\\\n\\\\tLD(p_tmp2,0,p_temp) //recycle p_temp\\\\n\\\\tST(p_temp,0,p_tmp1)\\\\n\\\\t//array[storeIndex] = pivotValue\\\\n\\\\tST(p_pivotValue,0,p_tmp2)       \\\\n\\\\t//return storeIndex;\\\\n\\\\t//byte offset to index\\\\n\\\\tSHRC(p_storeIndex,2,p_storeIndex) \\\\n\\\\n\\\\t//Restore state of all registers\\\\n\\\\tPOP(R10)\\\\n\\\\tPOP(R9)\\\\n\\\\tPOP(R8)\\\\n\\\\tPOP(R7)\\\\n\\\\tPOP(R6)\\\\n\\\\tPOP(R5)\\\\n\\\\tPOP(R4)\\\\n\\\\tPOP(R3)\\\\n\\\\tPOP(R2)\\\\n\\\\tPOP(R1)\\\\n\\\\n\\\\t//Restore Base and Linkeage pointers, return to caller\\\\n\\\\tMOVE(BP, SP)\\\\n\\\\tPOP(BP)\\\\n\\\\tPOP(LP)\\\\n\\\\tJMP(LP)\\\\n\\\\n// quicksort(ArrayBase, left, right)\\\\nquicksort:\\\\n    PUSH(LP)\\\\n    PUSH(BP)\\\\n    MOVE(SP, BP)\\\\n\\\\t\\\\n\\\\t//set up local variables\\\\n\\\\tPUSH(R1)\\\\n\\\\tPUSH(R2)\\\\n\\\\tPUSH(R3)\\\\n\\\\tPUSH(R4)\\\\n\\\\tPUSH(R5)\\\\n\\\\tq_right = R1\\\\n\\\\tq_left  = R2\\\\n\\\\tq_array = R3\\\\n\\\\tq_tmp1\\\\t= R4\\\\n\\\\tq_pivotIndex = R5\\\\n\\\\t\\\\n\\\\t//load locals\\\\n\\\\tLD(BP,-12,q_array)\\\\n\\\\tLD(BP,-16,q_left)\\\\n\\\\tLD(BP,-20,q_right)\\\\n\\\\t.breakpoint\\\\n\\\\t\\\\n\\\\t//if left < right\\\\n\\\\tCMPLT(q_left, q_right, q_tmp1)\\\\n\\\\tBF(q_tmp1, q_ELSE)\\\\n\\\\n\\\\t\\\\t//pivotIndex = partition(array,left,right)\\\\n\\\\t\\\\tPUSH(q_right)\\\\n\\\\t\\\\tPUSH(q_left)\\\\n\\\\t\\\\tPUSH(q_array)\\\\n\\\\t\\\\tBR(partition,LP)\\\\n\\\\t\\\\t//.breakpoint\\\\n\\\\t\\\\tDEALLOCATE(3)\\\\n\\\\t\\\\t//in general saving R0 is required, here it is not strictly necessary\\\\n\\\\t\\\\tMOVE(R0,q_pivotIndex) \\\\n\\\\t\\\\t\\\\n\\\\t\\\\t//quicksort(array,left,pivotIndex-1)\\\\n\\\\t\\\\tSUBC(q_pivotIndex,1,q_tmp1)\\\\n\\\\t\\\\tPUSH(q_tmp1)\\\\n\\\\t\\\\tPUSH(q_left)\\\\n\\\\t\\\\tPUSH(q_array)\\\\n\\\\t\\\\tBR(quicksort,LP)\\\\n\\\\t\\\\tDEALLOCATE(3)\\\\n\\\\t\\\\t\\\\n\\\\t\\\\t//quicksort(array,pivotIndex+1,right)\\\\n\\\\t\\\\tPUSH(q_right)\\\\n\\\\t\\\\tADDC(q_pivotIndex,1,q_tmp1)\\\\n\\\\t\\\\tPUSH(q_tmp1)\\\\n\\\\t\\\\tPUSH(q_array)\\\\n\\\\t\\\\tBR(quicksort,LP)\\\\n\\\\t\\\\tDEALLOCATE(3)\\\\n\\\\t\\\\t\\\\n\\\\tq_ELSE:\\\\n\\\\t\\\\n\\\\t//Restore all used registers\\\\n\\\\tPOP(R5)\\\\n\\\\tPOP(R4)\\\\n\\\\tPOP(R3)\\\\n\\\\tPOP(R2)\\\\n\\\\tPOP(R1)\\\\n\\\\t\\\\n    MOVE(BP, SP)\\\\n    POP(BP)\\\\n    POP(LP)\\\\n    JMP(LP)\\\\n\\\\n// Allocate a stack: SP is initialized by checkoff code.\\\\nStackBasePtr:\\\\n        LONG(StackArea)\\\\n\\\\n.unprotect\\\\n\\\\nStackArea:\\\\n        STORAGE(1000)\\\\n\\\"}}\",\"check\":\"wrong\",\"message\":\"Test failed\"},\"A1\":{\"id\":\"A1\",\"value\":\"0\",\"check\":\"right\"},\"A2\":{\"id\":\"A2\",\"value\":\"1\",\"check\":\"right\"},\"A3\":{\"id\":\"A3\",\"value\":\"2\",\"check\":\"right\"},\"A4\":{\"id\":\"A4\",\"value\":\"3\",\"check\":\"right\"},\"A5\":{\"id\":\"A5\",\"value\":\"0xc\",\"check\":\"right\"},\"B1\":{\"id\":\"B1\",\"value\":\"0x2000\",\"check\":\"right\"},\"B2\":{\"id\":\"B2\",\"value\":\"0xedededed\",\"check\":\"right\"},\"B3\":{\"id\":\"B3\",\"value\":\"0xfededede\",\"check\":\"right\"},\"B4\":{\"id\":\"B4\",\"value\":\"0x2004\",\"check\":\"right\"},\"B5\":{\"id\":\"B5\",\"value\":\"0xc01f2000\",\"check\":\"right\"},\"C1\":{\"id\":\"C1\",\"value\":\"0x87654321\",\"check\":\"right\"},\"C2\":{\"id\":\"C2\",\"value\":\"0x1\",\"check\":\"right\"},\"C3\":{\"id\":\"C3\",\"value\":\"0x87654320\",\"check\":\"right\"},\"C4\":{\"id\":\"C4\",\"value\":\"0x14\",\"check\":\"right\"},\"C5\":{\"id\":\"C5\",\"value\":\"0x77e10002\",\"check\":\"right\"},\"D1\":{\"id\":\"D1\",\"value\":\"0x11\",\"check\":\"right\"},\"D2\":{\"id\":\"D2\",\"value\":\"0x0\",\"check\":\"right\"},\"D3\":{\"id\":\"D3\",\"value\":\"32\",\"check\":\"right\"},\"D4\":{\"id\":\"D4\",\"value\":\"no instructions need to be changed\",\"check\":\"right\"},\"E1\":{\"id\":\"E1\",\"value\":\"0x4\",\"check\":\"right\"},\"E2\":{\"id\":\"E2\",\"value\":\"0xc0000000\",\"check\":\"right\"},\"x1\":{\"id\":\"x1\",\"value\":\"20\",\"check\":\"right\"},\"x2\":{\"id\":\"x2\",\"value\":\"0\",\"check\":\"right\"},\"x3\":{\"id\":\"x3\",\"value\":\"-1\",\"check\":\"right\"},\"x4\":{\"id\":\"x4\",\"value\":\"0xa\",\"check\":\"right\"},\"x55\":{\"id\":\"x55\",\"value\":\"first (smaller elements)\",\"check\":\"right\"},\"x5\":{\"id\":\"x5\",\"value\":\"0\",\"check\":\"right\"},\"x6\":{\"id\":\"x6\",\"value\":\"4\",\"check\":\"right\"},\"x7\":{\"id\":\"x7\",\"value\":\"5\",\"check\":\"right\"}}","/ComputationStructures/lectures/pbeta/pbeta.html":"{}","/ComputationStructures/notes/digitalabstraction/notes.html":"{}","/ComputationStructures/lectures/beta/beta.html":"{}","/ComputationStructures/exercises/assembly/lab.html":"{\"bsim\":{\"id\":\"bsim\",\"value\":\"{\\\"tests\\\":{\\\"test\\\":\\\"-1941773813\\\"},\\\"required_tests\\\":[\\\"-1941773813\\\"],\\\"state\\\":{\\\"Bubble_sort\\\":\\\".include \\\\\\\"beta.uasm\\\\\\\"\\\\n\\\\n        BR(START)   // start point in assembly code\\\\n\\\\n        // the array to be sorted\\\\n        A:      LONG(10) LONG(56) LONG(27) LONG(69) LONG(73) LONG(99)\\\\n                LONG(44) LONG(36) LONG(10) LONG(72) LONG(71) LONG(1)\\\\n\\\\nALEN = (. - A)/4    // determine number of elements in A\\\\n\\\\nSTART:\\\\n\\\\ni \\\\t\\\\t= R0\\\\ni4\\\\t\\\\t= R1\\\\t//4*i\\\\nswapped = R2\\\\nAim1\\\\t= R3 \\\\t//A[i-1]\\\\nAi \\\\t\\\\t= R4\\\\t//A[i]\\\\ncond\\\\t= R5\\\\t//store conditionals\\\\n\\\\nOUTER:\\\\n        CMOVE(0, swapped) \\\\t\\\\t//swapped = 0\\\\n        CMOVE(0, i)\\\\t\\\\t\\\\t\\\\t//i = 0\\\\nINNER:\\\\n        CMPLTC(i, ALEN-1, cond) //while (i < ALEN - 1)\\\\n\\\\t\\\\tBF(cond, CHECKOUTER) \\\\n\\\\t\\\\tADDC(i, 1, i)\\\\t\\\\t\\\\t//i++\\\\n\\\\t\\\\tMULC(i, 4, i4)\\\\t\\\\t\\\\t//i4 = i*4\\\\n\\\\t\\\\tLD(i4, A, Ai)\\\\t\\\\t\\\\t//load ai\\\\n\\\\t\\\\tLD(i4, A-4, Aim1)\\\\t\\\\t//load ai-1\\\\n\\\\t\\\\tCMPLE(Aim1, Ai, cond)\\\\t//if ai-1<=ai\\\\n\\\\t\\\\tBT(cond, INNER) \\\\t\\\\t//else loop inner\\\\n\\\\t\\\\tST(Ai, A-4, i4)\\\\t\\\\t\\\\t//store ai   @ mem[index(ai-1)]\\\\n\\\\t\\\\tST(Aim1, A, i4)\\\\t\\\\t\\\\t//store ai-1 @ mem[index(ai)]\\\\n\\\\t\\\\tCMOVE(1, swapped) \\\\t\\\\t//swapped <- 1 \\\\n\\\\t\\\\tBR(INNER)\\\\t\\\\t\\\\t\\\\t//loop inner\\\\nCHECKOUTER:\\\\n\\\\t\\\\tCMPEQC(swapped, 1, cond)\\\\n\\\\t\\\\tBT(cond, OUTER)\\\\t//loop outer\\\\n\\\\t\\\\t//else proceed\\\\n\\\\n.include \\\\\\\"checkoff.uasm\\\\\\\"\\\\n\\\\n\\\"}}\",\"check\":\"right\"}}","/ComputationStructures/notes/tradeoffs/notes.html":"{}","/ComputationStructures/lectures/combinational/combinational.html":"{}","/ComputationStructures/exercises/beta/lab.html":"{\"2\":{\"id\":\"2\",\"value\":\"{\\\"tests\\\":{\\\"/alu/alu\\\":\\\"passed 936fccfa4372c323a3f696b9fa670991 d41d8cd98f00b204e9800998ecf8427e 367.186455813516\\\",\\\"/beta/pc\\\":\\\"passed c831dff860e820a0179567f0964f0f72 d41d8cd98f00b204e9800998ecf8427e 3013.1009629870673\\\",\\\"/beta/test\\\":\\\"passed 327ee733491d310e278d231ad43f4abc d41d8cd98f00b204e9800998ecf8427e 5.659647029095178\\\",\\\"/beta/beta\\\":\\\"Error detected: invalid test specification<li>Missing Vol threshold specification<li>Missing Vil threshold specification<li>Missing Vih threshold specification<li>Missing Voh threshold specification<li>Missing .cycle specification<li>No tests specified!\\\",\\\"/beta/regfile\\\":\\\"passed 9fdebf954c25d82f0ba5125982b3268e d41d8cd98f00b204e9800998ecf8427e 1725.6850969835039\\\",\\\"/beta/ctl\\\":\\\"passed 3e5897e2dab8128bbf190bf5301637b7 d41d8cd98f00b204e9800998ecf8427e 848.815732290302\\\"},\\\"state\\\":{\\\"/user/untitled\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"test\\\":[[\\\"test\\\",\\\"\\\"]]},\\\"/alu/arith\\\":{\\\"schematic\\\":[[\\\"port\\\",[-32,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-88,-32,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-48,0],{\\\"signal\\\":\\\"AFN\\\"}],[\\\"port\\\",[88,-72,4],{\\\"signal\\\":\\\"S[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[80,-224,4],{\\\"signal\\\":\\\"V\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,8,4],{\\\"signal\\\":\\\"N\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[88,-32,4],{\\\"signal\\\":\\\"Z\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[80,8,0,-8,0],{\\\"signal\\\":\\\"S[31]\\\"}],[\\\"jumper\\\",[80,8,0]],[\\\"/user/nor32\\\",[40,-32,0],{\\\"name\\\":\\\"nor32\\\"}],[\\\"/user/add32\\\",[0,-88,0]],[\\\"/gates/xor2\\\",[-80,-48,0]],[\\\"wire\\\",[88,-48,0,-80,0]],[\\\"wire\\\",[-32,-40,0,0,-32],{\\\"signal\\\":\\\"xb[31:0]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-32,-104,0,-56,0]],[\\\"wire\\\",[-88,-104,0,0,56]],[\\\"wire\\\",[-88,-48,0,8,0]],[\\\"wire\\\",[-80,-32,0,-8,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[88,-72,0,0,24]],[\\\"wire\\\",[8,-48,0,0,16]],[\\\"/gates/and3\\\",[-16,-248,0]],[\\\"/gates/inverter\\\",[-48,-216,0]],[\\\"wire\\\",[-48,-216,0,-8,0],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"/gates/or2\\\",[32,-232,0]],[\\\"/gates/and3\\\",[-16,-168,0]],[\\\"wire\\\",[-48,-216,0,0,48]],[\\\"wire\\\",[-48,-168,0,32,0]],[\\\"/gates/inverter\\\",[-48,-152,0]],[\\\"/gates/inverter\\\",[-48,-136,0]],[\\\"wire\\\",[-48,-152,0,-32,0],{\\\"signal\\\":\\\"xb[31]\\\"}],[\\\"wire\\\",[-48,-136,0,-48,0],{\\\"signal\\\":\\\"a[31]\\\"}],[\\\"wire\\\",[-96,-136,0,0,-112]],[\\\"wire\\\",[-16,-248,0,-80,0]],[\\\"wire\\\",[-80,-152,0,0,-80]],[\\\"wire\\\",[-16,-232,0,-64,0]],[\\\"wire\\\",[32,-216,0,0,64]]]},\\\"/alu/bool\\\":{\\\"schematic\\\":[[\\\"port\\\",[0,-72,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-88,-56,0],{\\\"signal\\\":\\\"BFN[3:0]\\\"}],[\\\"port\\\",[-88,-72,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[-88,-88,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"/gates/mux4\\\",[-16,-96,0]],[\\\"wire\\\",[-8,-32,0,-16,0],{\\\"signal\\\":\\\"B[31:0], A[31:0]\\\"}],[\\\"wire\\\",[-16,-48,0,-8,0],{\\\"signal\\\":\\\"BFN[0]\\\"}],[\\\"wire\\\",[-16,-64,0,-8,0],{\\\"signal\\\":\\\"BFN[1]\\\"}],[\\\"wire\\\",[-16,-80,0,-8,0],{\\\"signal\\\":\\\"BFN[2]\\\"}],[\\\"wire\\\",[-16,-96,0,-8,0],{\\\"signal\\\":\\\"BFN[3]\\\"}]]},\\\"/alu/FA\\\":{\\\"schematic\\\":[[\\\"port\\\",[-112,-48,0],{\\\"signal\\\":\\\"A\\\"}],[\\\"port\\\",[-112,-32,0],{\\\"signal\\\":\\\"B\\\"}],[\\\"port\\\",[-112,-16,0],{\\\"signal\\\":\\\"Cin\\\"}],[\\\"port\\\",[24,-136,4],{\\\"signal\\\":\\\"Cout\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[24,-32,4],{\\\"signal\\\":\\\"S\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/xor2\\\",[-72,-48,0]],[\\\"wire\\\",[-24,-16,0,0,-8]],[\\\"/gates/nand3\\\",[-24,-152,0]],[\\\"/gates/nand2\\\",[-72,-184,0]],[\\\"/gates/nand2\\\",[-72,-104,0]],[\\\"/gates/nand2\\\",[-72,-144,0]],[\\\"wire\\\",[-24,-176,0,0,24]],[\\\"wire\\\",[-24,-120,0,0,24]],[\\\"wire\\\",[-72,-144,0,-8,0]],[\\\"wire\\\",[-80,-144,0,0,96]],[\\\"wire\\\",[-112,-48,0,32,0]],[\\\"wire\\\",[-72,-48,0,-8,0]],[\\\"wire\\\",[-72,-128,0,-16,0]],[\\\"wire\\\",[-88,-128,0,0,96]],[\\\"wire\\\",[-112,-32,0,24,0]],[\\\"wire\\\",[-72,-32,0,-16,0]],[\\\"wire\\\",[-72,-128,0,0,24]],[\\\"wire\\\",[-72,-168,0,0,24]],[\\\"wire\\\",[-72,-88,0,-24,0]],[\\\"wire\\\",[-72,-184,0,-24,0]],[\\\"wire\\\",[-96,-184,0,0,96]],[\\\"wire\\\",[-96,-88,0,0,72]],[\\\"wire\\\",[-112,-16,0,16,0]],[\\\"wire\\\",[-24,-16,0,-72,0]],[\\\"/gates/xor2\\\",[-24,-40,0]]]},\\\"/alu/cmp\\\":{\\\"schematic\\\":[[\\\"port\\\",[-104,88,0],{\\\"signal\\\":\\\"V\\\"}],[\\\"port\\\",[-104,72,0],{\\\"signal\\\":\\\"N\\\"}],[\\\"port\\\",[16,-16,4],{\\\"signal\\\":\\\"Y[31:1]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[16,24,2],{\\\"signal\\\":\\\"Y[0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"jumper\\\",[8,-16,0]],[\\\"wire\\\",[8,-16,0,-8,0],{\\\"signal\\\":\\\"0'31\\\"}],[\\\"port\\\",[-104,8,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"port\\\",[-72,-16,0],{\\\"signal\\\":\\\"CFN[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,24,6]],[\\\"/gates/xor2\\\",[-104,72,0]],[\\\"/gates/or2\\\",[-96,16,0]],[\\\"wire\\\",[-40,-8,0,0,-8],{\\\"signal\\\":\\\"cfn[1]\\\"}],[\\\"/gates/mux2\\\",[0,16,0]],[\\\"wire\\\",[8,48,6,0,-8],{\\\"signal\\\":\\\"cfn[0]\\\"}],[\\\"wire\\\",[-32,16,6,32,0]],[\\\"wire\\\",[-56,80,0,40,0]],[\\\"wire\\\",[0,32,0,-16,0]],[\\\"wire\\\",[-96,16,0,0,-8]],[\\\"wire\\\",[-48,8,0,-48,0]],[\\\"wire\\\",[-96,8,0,-8,0]],[\\\"wire\\\",[-96,32,0,0,16]],[\\\"wire\\\",[-96,48,0,40,0]],[\\\"wire\\\",[-56,80,0,0,-32]],[\\\"wire\\\",[-16,32,0,0,48]],[\\\"text\\\",[-100,-49,0],{\\\"text\\\":\\\"signals arrive in order: \\\\nn,z,v\\\"}]]},\\\"/alu/shift\\\":{\\\"schematic\\\":[[\\\"port\\\",[-120,-104,6],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-104,-48,0],{\\\"signal\\\":\\\"B[4:0]\\\"}],[\\\"port\\\",[8,-120,0],{\\\"signal\\\":\\\"SFN[1:0]\\\"}],[\\\"port\\\",[72,-48,4],{\\\"signal\\\":\\\"Y[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-104,-64,0,-16,0],{\\\"signal\\\":\\\"sfn[1]\\\"}],[\\\"/gates/mux2\\\",[-120,-88,6]],[\\\"wire\\\",[-112,-120,6,0,16],{\\\"signal\\\":\\\"sfn[0]\\\"}],[\\\"wire\\\",[-120,-88,0,-8,0],{\\\"signal\\\":\\\"A[0:31]\\\"}],[\\\"wire\\\",[-104,-80,0,0,-16],{\\\"width\\\":\\\"32\\\"}],[\\\"/gates/mux2\\\",[56,-56,6]],[\\\"wire\\\",[64,-88,6,0,16],{\\\"signal\\\":\\\"sfn[0]\\\"}],[\\\"wire\\\",[56,-56,0,-8,0],{\\\"signal\\\":\\\"so[0:31]\\\",\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[72,-48,0,0,-16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[0,-72,0,56,0],{\\\"width\\\":\\\"32\\\",\\\"signal\\\":\\\"so[31:0]\\\"}],[\\\"/user/shiftl32\\\",[-64,-56,0]]]},\\\"/beta/beta\\\":{\\\"schematic\\\":[[\\\"port\\\",[-512,-344,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-424,-224,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-504,-216,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-232,-448,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"port\\\",[-160,-136,4],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"port\\\",[-360,-392,4],{\\\"signal\\\":\\\"ia[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-168,-176,4],{\\\"signal\\\":\\\"ma[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-176,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-320,-192,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-104,-312,4],{\\\"signal\\\":\\\"mwd[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/beta/ctl\\\",[-368,-216,0]],[\\\"/beta/pc\\\",[-488,-416,0]],[\\\"/beta/regfile\\\",[-168,-352,0]],[\\\"/alu/alu\\\",[-168,-200,1]],[\\\"/gates/mux2\\\",[-208,-272,7]],[\\\"/gates/mux2\\\",[-144,-272,7]],[\\\"wire\\\",[-184,-232,0,-16,0]],[\\\"wire\\\",[-200,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-496,-344,0,-16,0]],[\\\"wire\\\",[-232,-344,0,-16,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-144,-272,0,0,-16],{\\\"signal\\\":\\\"id[15]#16,id[15:0]\\\"}],[\\\"wire\\\",[-112,-264,0,0,16],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-176,-264,0,0,16],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-192,-312,0,16,0],{\\\"signal\\\":\\\"jt[31:0]\\\"}],[\\\"wire\\\",[-496,-392,0,-16,0],{\\\"signal\\\":\\\"jt[31:2]\\\"}],[\\\"wire\\\",[-192,-312,0,-16,0]],[\\\"/user/nor32\\\",[-240,-312,4],{\\\"name\\\":\\\"Zero\\\"}],[\\\"wire\\\",[-288,-312,0,-16,0],{\\\"signal\\\":\\\"Z\\\"}],[\\\"wire\\\",[-192,-320,0,0,8]],[\\\"wire\\\",[-152,-232,0,16,0]],[\\\"wire\\\",[-192,-312,0,0,40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-208,-272,0,0,-8]],[\\\"wire\\\",[-208,-280,0,-16,0],{\\\"signal\\\":\\\"0'1,pc_offset[30:0]\\\"}],[\\\"wire\\\",[-400,-360,0,16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"text\\\",[-286,-270,0],{\\\"text\\\":\\\"ignore MSB\\\"}],[\\\"wire\\\",[-344,-224,0,16,0],{\\\"signal\\\":\\\"asel\\\"}],[\\\"wire\\\",[-344,-208,0,16,0],{\\\"signal\\\":\\\"bsel\\\"}],[\\\"wire\\\",[-344,-240,0,16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-208,-208,0,-16,0],{\\\"signal\\\":\\\"alufn[5:0]\\\"}],[\\\"wire\\\",[-496,-360,0,-16,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-496,-376,0,-16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-496,-408,0,-16,0],{\\\"signal\\\":\\\"id[15:0]\\\"}],[\\\"wire\\\",[-400,-376,0,16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-424,-192,0,-16,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"/gates/mux2\\\",[-168,-160,1]],[\\\"/gates/mux2\\\",[-160,-136,1]],[\\\"wire\\\",[-200,-152,0,-16,0],{\\\"signal\\\":\\\"wdsel[0]\\\"}],[\\\"wire\\\",[-192,-128,0,-16,0],{\\\"signal\\\":\\\"wdsel[1]\\\"}],[\\\"wire\\\",[-168,-184,0,0,8]],[\\\"wire\\\",[-168,-120,0,0,16],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-40,-376,0,0,272]],[\\\"wire\\\",[-168,-176,0,0,16]],[\\\"wire\\\",[-176,-144,0,0,8],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-184,-160,0,0,-16]],[\\\"wire\\\",[-184,-176,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"wire\\\",[-344,-160,0,16,0],{\\\"signal\\\":\\\"pcsel[2:0]\\\"}],[\\\"wire\\\",[-344,-144,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-344,-128,0,16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-344,-112,0,16,0],{\\\"signal\\\":\\\"wdsel[1:0]\\\"}],[\\\"wire\\\",[-344,-96,0,16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-360,0,-16,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"wire\\\",[-232,-376,0,-16,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"wire\\\",[-232,-392,0,-16,0],{\\\"signal\\\":\\\"id[25:21]\\\"}],[\\\"wire\\\",[-248,-408,0,16,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"wire\\\",[-424,-208,0,-32,0]],[\\\"/gates/and2\\\",[-504,-216,0]],[\\\"/gates/inverter\\\",[-536,-200,0]],[\\\"wire\\\",[-544,-200,0,8,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"jumper\\\",[-368,-392,0]],[\\\"wire\\\",[-368,-392,0,-32,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-192,-432,0,0,-16],{\\\"signal\\\":\\\"id[20:16]\\\"}],[\\\"wire\\\",[-128,-448,0,0,16],{\\\"signal\\\":\\\"id[15:11]\\\"}],[\\\"wire\\\",[-104,-272,0,0,-40],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-256,0,0,24],{\\\"width\\\":\\\"32\\\"}],[\\\"jumper\\\",[-328,-192,0]],[\\\"jumper\\\",[-328,-176,0]],[\\\"wire\\\",[-344,-192,0,16,0]],[\\\"wire\\\",[-328,-176,0,-16,0]],[\\\"wire\\\",[-424,-240,0,-16,0],{\\\"signal\\\":\\\"id[31:26]\\\"}],[\\\"text\\\",[-555,-181,0],{\\\"text\\\":\\\"sbit keep/disable?\\\"}],[\\\"wire\\\",[-128,-320,0,24,0]],[\\\"wire\\\",[-104,-320,0,0,8]],[\\\"wire\\\",[-128,-272,0,24,0]],[\\\"wire\\\",[-88,-376,0,48,0]],[\\\"wire\\\",[-168,-104,0,128,0]]]},\\\"/beta/ctl\\\":{\\\"schematic\\\":[[\\\"port\\\",[168,8,4],{\\\"signal\\\":\\\"ra2sel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-64,4],{\\\"signal\\\":\\\"asel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-48,4],{\\\"signal\\\":\\\"bsel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-80,4],{\\\"signal\\\":\\\"alufn[5:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,40,4],{\\\"signal\\\":\\\"wdsel[1:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,24,4],{\\\"signal\\\":\\\"wasel\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,56,4],{\\\"signal\\\":\\\"werf\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,-8,4],{\\\"signal\\\":\\\"pcsel[2:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[168,-32,4],{\\\"signal\\\":\\\"moe\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-80,0,4],{\\\"signal\\\":\\\"mwr\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-112,-104,0],{\\\"signal\\\":\\\"op[5:0]\\\"}],[\\\"port\\\",[-88,24,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"port\\\",[-56,136,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"port\\\",[-288,0,0],{\\\"signal\\\":\\\"z\\\"}],[\\\"memory\\\",[-104,-104,0],{\\\"naddr\\\":\\\"6\\\",\\\"ndata\\\":\\\"18\\\",\\\"contents\\\":\\\"// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n0b??????_??_?0_011_?_1001  // 0b000000\\\\n0b??????_??_?0_011_?_1001  // 0b000001\\\\n0b??????_??_?0_011_?_1001  // 0b000010\\\\n0b??????_??_?0_011_?_1001  // 0b000011\\\\n0b??????_??_?0_011_?_1001  // 0b000100\\\\n0b??????_??_?0_011_?_1001  // 0b000101\\\\n0b??????_??_?0_011_?_1001  // 0b000110\\\\n0b??????_??_?0_011_?_1001  // 0b000111\\\\n\\\\n0b??????_??_?0_011_?_1001  // 0b001000\\\\n0b??????_??_?0_011_?_1001  // 0b001001\\\\n0b??????_??_?0_011_?_1001  // 0b001010\\\\n0b??????_??_?0_011_?_1001  // 0b001011\\\\n0b??????_??_?0_011_?_1001  // 0b001100\\\\n0b??????_??_?0_011_?_1001  // 0b001101\\\\n0b??????_??_?0_011_?_1001  // 0b001110\\\\n0b??????_??_?0_011_?_1001  // 0b001111\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n0b??????_??_?0_011_?_1001  // 0b010000\\\\n0b??????_??_?0_011_?_1001  // 0b010001\\\\n0b??????_??_?0_011_?_1001  // 0b010010\\\\n0b??????_??_?0_011_?_1001  // 0b010011\\\\n0b??????_??_?0_011_?_1001  // 0b010100\\\\n0b??????_??_?0_011_?_1001  // 0b010101\\\\n0b??????_??_?0_011_?_1001  // 0b010110\\\\n0b??????_??_?0_011_?_1001  // 0b010111\\\\n\\\\n/* OPC type\\\\n0bxxxxxx_01_?0_000_?_0011 \\\\n*/\\\\n0b010000_01_10_000_?_0101  // 0b011000 LD\\\\n0b010000_01_01_000_1_???0  // 0b011001 ST\\\\n0b??????_??_?0_011_?_1001  // 0b011010\\\\n0b??????_??_?0_010_?_0001  // 0b011011 JMP\\\\n0b??????_??_?0_001_?_0001  // 0b011100 BEQ (usesZ)\\\\n0b??????_??_?0_001_?_0001  // 0b011101 BNE (usesZ)\\\\n0b??????_??_?0_011_?_1001  // 0b011110\\\\n0b101010_1?_10_000_?_0101  // 0b011111 LDR\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n/* OP type\\\\n0bxxxxxx_00_?0_000_0_0011 \\\\n*/\\\\n0b010000_00_?0_000_0_0011  // 0b100000 ADD\\\\n0b010001_00_?0_000_0_0011  // 0b100001 SUB\\\\n0b??????_??_?0_011_?_1001  // 0b100010 [normally MUL, but ILLOP for our ALU]\\\\n0b??????_??_?0_011_?_1001  // 0b100011 [normally DIV, but ILOOP for our ALU]\\\\n0b000011_00_?0_000_0_0011  // 0b100100 CMPEQ\\\\n0b000101_00_?0_000_0_0011  // 0b100101 CMPLT\\\\n0b000111_00_?0_000_0_0011  // 0b100110 CMPLE\\\\n0b??????_??_?0_011_?_1001  // 0b100111\\\\n\\\\n0b101000_00_?0_000_0_0011  // 0b101000 AND\\\\n0b101110_00_?0_000_0_0011  // 0b101001 OR\\\\n0b100110_00_?0_000_0_0011  // 0b101010 XOR\\\\n0b101001_00_?0_000_0_0011  // 0b101011 XNOR\\\\n0b110000_00_?0_000_0_0011  // 0b101100 SHL\\\\n0b110001_00_?0_000_0_0011  // 0b101101 SHR\\\\n0b110011_00_?0_000_0_0011  // 0b101110 SRA\\\\n0b??????_??_?0_011_?_1001  // 0b101111\\\\n\\\\n// alufn[5:0]\\\\n// asel, bsel\\\\n// moe, mwr\\\\n// pcsel[2:0]\\\\n// ra2sel\\\\n// wasel, wdsel[1:0], werf\\\\n/* OPC type\\\\n0bxxxxxx_01_?0_000_?_0011 \\\\n*/\\\\n0b010000_01_?0_000_?_0011  // 0b110000 ADDC\\\\n0b010001_01_?0_000_?_0011  // 0b110001 SUBC\\\\n0b??????_??_?0_011_?_1001  // 0b110010 [normally MULC, but ILLOP for our ALU]\\\\n0b??????_??_?0_011_?_1001  // 0b110011 [normally DIVC, but ILLOP for our ALU]\\\\n0b000011_01_?0_000_?_0011  // 0b110100 CMPEQC\\\\n0b000101_01_?0_000_?_0011  // 0b110101 CMPLTC\\\\n0b000111_01_?0_000_?_0011  // 0b110110 CMPLEC\\\\n0b??????_??_?0_011_?_1001  // 0b110111\\\\n\\\\n0b101000_01_?0_000_?_0011  // 0b111000 ANDC\\\\n0b101110_01_?0_000_?_0011  // 0b111001 ORC\\\\n0b100110_01_?0_000_?_0011  // 0b111010 XORC\\\\n0b101001_01_?0_000_?_0011  // 0b111011 XNORC\\\\n0b110000_01_?0_000_?_0011  // 0b111100 SHLC\\\\n0b110001_01_?0_000_?_0011  // 0b111101 SHRC\\\\n0b110011_01_?0_000_?_0011  // 0b111110 SRAC\\\\n0b??????_??_?0_011_?_1001  // 0b111111\\\\n\\\"}],[\\\"wire\\\",[160,-80,0,-8,0],{\\\"signal\\\":\\\"d[17:12]\\\"}],[\\\"wire\\\",[160,-64,0,-8,0],{\\\"signal\\\":\\\"d[11]\\\"}],[\\\"wire\\\",[56,56,0,-8,0],{\\\"signal\\\":\\\"d_irq[0]\\\"}],[\\\"wire\\\",[56,40,0,-8,0],{\\\"signal\\\":\\\"d_irq[2:1]\\\"}],[\\\"wire\\\",[56,24,0,-8,0],{\\\"signal\\\":\\\"d_irq[3]\\\"}],[\\\"wire\\\",[160,8,0,-8,0],{\\\"signal\\\":\\\"d[4]\\\"}],[\\\"wire\\\",[56,-8,0,-8,0],{\\\"signal\\\":\\\"d_irq[6:4]\\\"}],[\\\"wire\\\",[-96,8,0,-8,0],{\\\"signal\\\":\\\"d_irq[7]\\\"}],[\\\"wire\\\",[160,-32,0,-8,0],{\\\"signal\\\":\\\"d[9]\\\"}],[\\\"wire\\\",[160,-48,0,-8,0],{\\\"signal\\\":\\\"d[10]\\\"}],[\\\"wire\\\",[-104,-96,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-112,-104,0,8,0]],[\\\"wire\\\",[-104,-88,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[-256,144,0]],[\\\"wire\\\",[-256,160,0,-8,0],{\\\"signal\\\":\\\"0'3\\\"}],[\\\"wire\\\",[-256,144,0,-8,0],{\\\"signal\\\":\\\"1'3\\\"}],[\\\"/gates/and2\\\",[-264,-80,0]],[\\\"/gates/mux2\\\",[-232,144,6]],[\\\"/gates/nor2\\\",[-312,-88,0]],[\\\"wire\\\",[-312,-88,0,-8,0],{\\\"signal\\\":\\\"d[7]\\\"}],[\\\"wire\\\",[-312,-72,0,-8,0],{\\\"signal\\\":\\\"d[6]\\\"}],[\\\"wire\\\",[-240,152,0,8,0]],[\\\"wire\\\",[-232,144,0,0,8],{\\\"width\\\":\\\"3\\\"}],[\\\"wire\\\",[-216,136,0,8,0],{\\\"signal\\\":\\\"bch[2:0]\\\"}],[\\\"wire\\\",[-232,128,0,-24,0],{\\\"signal\\\":\\\"d[7:5]\\\"}],[\\\"/gates/inverter\\\",[-288,0,0]],[\\\"wire\\\",[-264,-64,0,0,8],{\\\"signal\\\":\\\"d[5]\\\"}],[\\\"wire\\\",[-248,32,0,-8,0],{\\\"signal\\\":\\\"op[0]\\\"}],[\\\"wire\\\",[-216,-72,0,8,0],{\\\"signal\\\":\\\"branch\\\"}],[\\\"wire\\\",[-224,112,0,-32,0],{\\\"signal\\\":\\\"branch\\\"}],[\\\"/gates/mux2\\\",[-256,0,0]],[\\\"wire\\\",[-256,16,0,-32,0]],[\\\"wire\\\",[-288,16,0,0,-16]],[\\\"wire\\\",[-240,8,0,8,0],{\\\"signal\\\":\\\"bne_beq\\\"}],[\\\"wire\\\",[-248,176,0,-16,0],{\\\"signal\\\":\\\"bne_beq\\\"}],[\\\"/gates/mux2\\\",[-96,-8,0]],[\\\"wire\\\",[-96,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"/gates/mux2\\\",[-64,104,0]],[\\\"wire\\\",[-64,120,0,-8,0],{\\\"signal\\\":\\\"d[8],bch[2:0],d[3:0]\\\"}],[\\\"wire\\\",[-64,104,0,-8,0],{\\\"signal\\\":\\\"0b01001001'8\\\"}],[\\\"wire\\\",[-48,112,0,8,0],{\\\"signal\\\":\\\"d_irq[7:0]\\\"}],[\\\"jumper\\\",[160,-32,0]],[\\\"jumper\\\",[56,-8,0]],[\\\"jumper\\\",[160,-80,0]],[\\\"jumper\\\",[160,-64,0]],[\\\"jumper\\\",[160,-48,0]],[\\\"jumper\\\",[160,8,0]],[\\\"jumper\\\",[56,24,0]],[\\\"jumper\\\",[56,40,0]],[\\\"jumper\\\",[56,56,0]],[\\\"wire\\\",[-104,-80,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-32,-104,0,8,0],{\\\"signal\\\":\\\"d[17:0]\\\"}],[\\\"text\\\",[-287,-106,0],{\\\"text\\\":\\\"Detect branch\\\"}],[\\\"text\\\",[-297,-20,0],{\\\"text\\\":\\\"distinquish beq/bne\\\"}],[\\\"text\\\",[-302,69,0],{\\\"text\\\":\\\"if branch,\\\"}],[\\\"text\\\",[-289,81,0],{\\\"text\\\":\\\" z determines outcome, \\\"}],[\\\"text\\\",[-302,94,0],{\\\"text\\\":\\\"else, pass through.\\\"}],[\\\"text\\\",[-139,83,0],{\\\"text\\\":\\\"If IRQ, \\\\noverwrite ROM output\\\"}],[\\\"text\\\",[-127,-28,0],{\\\"text\\\":\\\"If reset, force MWR\\\"}],[\\\"text\\\",[87,-103,0],{\\\"text\\\":\\\"ROM output\\\",\\\"font\\\":\\\"8pt sans-serif\\\"}],[\\\"text\\\",[36,-28,0],{\\\"text\\\":\\\"IRQ overridable\\\",\\\"font\\\":\\\"4pt sans-serif\\\"}]]},\\\"/beta/pc\\\":{\\\"schematic\\\":[[\\\"port\\\",[8,-128,0],{\\\"signal\\\":\\\"CLK\\\"}],[\\\"port\\\",[-40,-168,6],{\\\"signal\\\":\\\"RESET\\\"}],[\\\"port\\\",[-216,16,0],{\\\"signal\\\":\\\"ID[15:0]\\\"}],[\\\"port\\\",[-408,-200,0],{\\\"signal\\\":\\\"JT[31:0]\\\"}],[\\\"port\\\",[-160,-208,0],{\\\"signal\\\":\\\"PCSEL[2:0]\\\"}],[\\\"port\\\",[48,-144,4],{\\\"signal\\\":\\\"PC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-216,-112,4],{\\\"signal\\\":\\\"PC_INC[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[32,-72,4],{\\\"signal\\\":\\\"PC_OFFSET[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/dreg\\\",[8,-144,0]],[\\\"wire\\\",[-96,-176,6,0,8],{\\\"signal\\\":\\\"pcsel[2]\\\"}],[\\\"/gates/mux2\\\",[-104,-144,6]],[\\\"/gates/mux4\\\",[-144,-184,0]],[\\\"wire\\\",[-128,-160,0,24,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-136,-120,0,0,16],{\\\"signal\\\":\\\"pcsel[1:0]\\\"}],[\\\"/gates/mux2\\\",[-48,-136,6]],[\\\"wire\\\",[-48,-136,0,0,24],{\\\"signal\\\":\\\"0x80000000'32\\\"}],[\\\"/user/add32\\\",[-176,-256,0],{\\\"name\\\":\\\"incrementor\\\"}],[\\\"/user/add32\\\",[-168,-48,0]],[\\\"wire\\\",[-208,-240,0,-16,0],{\\\"signal\\\":\\\"4'32\\\"}],[\\\"wire\\\",[-208,-256,0,-16,0],{\\\"signal\\\":\\\"pc[31:0]\\\"}],[\\\"wire\\\",[-208,-272,0,0,-24],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-200,-48,0,-16,0],{\\\"signal\\\":\\\"pc_inc[31:0]\\\"}],[\\\"text\\\",[-402,-32,0],{\\\"text\\\":\\\"sign extend and shift:\\\"}],[\\\"wire\\\",[-200,-64,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-144,-184,0,-16,0],{\\\"signal\\\":\\\"0x80000004'32\\\"}],[\\\"wire\\\",[-144,-152,0,-16,0],{\\\"signal\\\":\\\"pc_offset[31:0]\\\"}],[\\\"wire\\\",[-104,-144,0,0,16],{\\\"signal\\\":\\\"0x80000008'32\\\"}],[\\\"wire\\\",[-48,-152,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[8,-144,0,-40,0],{\\\"width\\\":\\\"32\\\"}],[\\\"wire\\\",[-200,-32,0,-16,0],{\\\"signal\\\":\\\"id[15]#14,id[15:0],0b00'2\\\"}],[\\\"jumper\\\",[-224,-112,0]],[\\\"wire\\\",[-88,-240,0,16,0],{\\\"signal\\\":\\\"inc[31:0]\\\"}],[\\\"wire\\\",[-80,-32,0,16,0],{\\\"signal\\\":\\\"boff[31:0]\\\"}],[\\\"jumper\\\",[24,-72,0]],[\\\"wire\\\",[24,-72,0,-16,0],{\\\"signal\\\":\\\"pc[31],boff[30:0]\\\"}],[\\\"wire\\\",[-224,-112,0,-8,0]],[\\\"wire\\\",[-232,-112,0,0,-24]],[\\\"wire\\\",[-144,-136,0,-88,0],{\\\"signal\\\":\\\"pc[31],inc[30:0]\\\"}],[\\\"/gates/and2\\\",[-440,-240,0]],[\\\"wire\\\",[-440,-240,0,-16,0],{\\\"signal\\\":\\\"pc[31]\\\"}],[\\\"wire\\\",[-440,-224,0,-16,0],{\\\"signal\\\":\\\"jt[31]\\\"}],[\\\"wire\\\",[-392,-232,0,16,0],{\\\"signal\\\":\\\"supnext\\\"}],[\\\"wire\\\",[-144,-168,0,-16,0],{\\\"signal\\\":\\\"supnext,jt[30:2],0b00'2\\\"}],[\\\"text\\\",[-109,-198,0],{\\\"text\\\":\\\"map 0b1xx to IRQ\\\"}],[\\\"text\\\",[-52,-63,0],{\\\"text\\\":\\\"guard sbit\\\"}],[\\\"text\\\",[-377,-222,0],{\\\"text\\\":\\\"calc next sbit\\\"}],[\\\"text\\\",[-373,-168,0],{\\\"text\\\":\\\"guard sbit, word align address:\\\"}],[\\\"text\\\",[-357,-135,0],{\\\"text\\\":\\\"guard sbit (supervisor bit):\\\"}]]},\\\"/beta/regfile\\\":{\\\"schematic\\\":[[\\\"port\\\",[-152,-152,4],{\\\"signal\\\":\\\"rbdata[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-304,16,0],{\\\"signal\\\":\\\"rc[4:0]\\\"}],[\\\"port\\\",[-160,40,0],{\\\"signal\\\":\\\"werf\\\"}],[\\\"port\\\",[-128,48,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"port\\\",[-200,-16,0],{\\\"signal\\\":\\\"rb[4:0]\\\"}],[\\\"port\\\",[-160,-56,0],{\\\"signal\\\":\\\"ra[4:0]\\\"}],[\\\"port\\\",[-56,24,4],{\\\"signal\\\":\\\"wdata[31:0]\\\"}],[\\\"port\\\",[-256,0,0],{\\\"signal\\\":\\\"wasel\\\"}],[\\\"port\\\",[-192,0,0],{\\\"signal\\\":\\\"ra2sel\\\"}],[\\\"memory\\\",[-128,-56,0],{\\\"nports\\\":\\\"3\\\",\\\"naddr\\\":\\\"5\\\",\\\"ndata\\\":\\\"32\\\"}],[\\\"wire\\\",[-128,-48,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-128,-8,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[-128,32,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,40,0,-32,0]],[\\\"wire\\\",[-128,-32,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,-56,0,-32,0]],[\\\"/gates/mux2\\\",[-264,32,6]],[\\\"/gates/mux2\\\",[-200,-32,0]],[\\\"wire\\\",[-264,32,6,-8,0],{\\\"signal\\\":\\\"0b11110'5\\\"}],[\\\"wire\\\",[-200,-32,0,-104,0]],[\\\"wire\\\",[-264,16,0,-40,0]],[\\\"wire\\\",[-128,-40,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-128,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-304,16,0,0,-48]],[\\\"/gates/mux2\\\",[-168,-160,0]],[\\\"wire\\\",[-256,-104,0,-8,0],{\\\"signal\\\":\\\"rbi[1]\\\"}],[\\\"wire\\\",[-256,-120,0,-8,0],{\\\"signal\\\":\\\"rbi[2]\\\"}],[\\\"wire\\\",[-256,-136,0,-8,0],{\\\"signal\\\":\\\"rbi[3]\\\"}],[\\\"wire\\\",[-256,-88,0,-8,0],{\\\"signal\\\":\\\"rbi[0]\\\"}],[\\\"wire\\\",[-168,-144,0,-8,0],{\\\"signal\\\":\\\"0'32\\\"}],[\\\"wire\\\",[-168,-160,0,-8,0],{\\\"signal\\\":\\\"rbo[31:0]\\\"}],[\\\"wire\\\",[-56,-56,0,16,0],{\\\"signal\\\":\\\"rao[31:0]\\\"}],[\\\"port\\\",[-152,-232,4],{\\\"signal\\\":\\\"radata[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"/gates/mux2\\\",[-168,-240,0]],[\\\"wire\\\",[-256,-184,0,-8,0],{\\\"signal\\\":\\\"ra[1]\\\"}],[\\\"wire\\\",[-256,-200,0,-8,0],{\\\"signal\\\":\\\"ra[2]\\\"}],[\\\"wire\\\",[-256,-216,0,-8,0],{\\\"signal\\\":\\\"ra[3]\\\"}],[\\\"wire\\\",[-256,-168,0,-8,0],{\\\"signal\\\":\\\"ra[0]\\\"}],[\\\"wire\\\",[-168,-224,0,-8,0],{\\\"signal\\\":\\\"0'32\\\"}],[\\\"wire\\\",[-168,-240,0,-8,0],{\\\"signal\\\":\\\"rao[31:0]\\\"}],[\\\"wire\\\",[-56,-16,0,16,0],{\\\"signal\\\":\\\"rbo[31:0]\\\"}],[\\\"wire\\\",[-128,-16,0,-56,0],{\\\"signal\\\":\\\"rbi[4:0]\\\",\\\"width\\\":\\\"5\\\"}],[\\\"wire\\\",[-184,-24,0,0,8]],[\\\"wire\\\",[-248,24,0,120,0],{\\\"width\\\":\\\"5\\\"}],[\\\"/gates/nand2\\\",[-208,-128,0]],[\\\"wire\\\",[-160,-128,0,0,8]],[\\\"/gates/and4\\\",[-256,-136,0]],[\\\"wire\\\",[-208,-128,0,-8,0],{\\\"signal\\\":\\\"rbi[4]\\\"}],[\\\"/gates/nand2\\\",[-208,-208,0]],[\\\"wire\\\",[-208,-208,0,-8,0],{\\\"signal\\\":\\\"ra[4]\\\"}],[\\\"wire\\\",[-160,-208,0,0,8]],[\\\"/gates/and4\\\",[-256,-216,0]],[\\\"text\\\",[-430,-158,0],{\\\"text\\\":\\\"read R31 gives 0:\\\",\\\"font\\\":\\\"8pt\\\"}],[\\\"text\\\",[-357,45,0],{\\\"text\\\":\\\"R30: exception pointer\\\"}]]},\\\"/user/nor32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/nor2\\\",[-24,144,0]],[\\\"/gates/nor4\\\",[-24,-16,0]],[\\\"wire\\\",[-24,0,0,-16,0],{\\\"signal\\\":\\\"in[23:16]\\\"}],[\\\"wire\\\",[-24,16,0,-16,0],{\\\"signal\\\":\\\"in[15:8]\\\"}],[\\\"wire\\\",[-24,32,0,-16,0],{\\\"signal\\\":\\\"in[7:0]\\\"}],[\\\"wire\\\",[24,8,0,16,0],{\\\"signal\\\":\\\"layer1[7:0]\\\"}],[\\\"wire\\\",[-24,-16,0,-16,0],{\\\"signal\\\":\\\"in[31:24]\\\"}],[\\\"/gates/nand4\\\",[-24,64,0]],[\\\"wire\\\",[-24,64,0,-16,0],{\\\"signal\\\":\\\"layer1[7:6]\\\"}],[\\\"wire\\\",[-24,80,0,-16,0],{\\\"signal\\\":\\\"layer1[5:4]\\\"}],[\\\"wire\\\",[-24,96,0,-16,0],{\\\"signal\\\":\\\"layer1[3:2]\\\"}],[\\\"wire\\\",[-24,112,0,-16,0],{\\\"signal\\\":\\\"layer1[1:0]\\\"}],[\\\"wire\\\",[24,88,0,16,0],{\\\"signal\\\":\\\"layer2[1:0]\\\"}],[\\\"wire\\\",[-24,160,0,-16,0],{\\\"signal\\\":\\\"layer2[0]\\\"}],[\\\"wire\\\",[-24,144,0,-16,0],{\\\"signal\\\":\\\"layer2[1]\\\"}],[\\\"port\\\",[24,152,4],{\\\"signal\\\":\\\"out\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[-32,-48,0],{\\\"signal\\\":\\\"in[31:0]\\\"}]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"in[31:0]\\\"}],[\\\"terminal\\\",[48,0,4],{\\\"name\\\":\\\"out\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"in[31:0]\\\"}],[\\\"text\\\",[35,0,4],{\\\"text\\\":\\\"out\\\"}],[\\\"line\\\",[-24,-8,0,64,0]],[\\\"line\\\",[40,-8,0,0,16]],[\\\"line\\\",[40,19,0,-64,0]],[\\\"line\\\",[-24,8,0,0,-16]],[\\\"property\\\",[-4,12,0],{\\\"format\\\":\\\"{name}\\\"}],[\\\"line\\\",[-24,8,0,0,11]],[\\\"line\\\",[40,19,0,0,-12]]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs in[31:0]\\\\n.group outputs out\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n11111111000000001111111100000000 L \\\\n00000000000000000000000000000000 H \\\\n10000000000000000000000000000000 L\\\\n\\\\n10000000000000000000000000000000 L\\\\n01000000000000000000000000000000 L\\\\n00100000000000000000000000000000 L\\\\n00010000000000000000000000000000 L\\\\n00001000000000000000000000000000 L\\\\n00000100000000000000000000000000 L \\\\n00000010000000000000000000000000 L\\\\n00000001000000000000000000000000 L\\\\n00000000100000000000000000000000 L\\\\n00000000010000000000000000000000 L\\\\n00000000001000000000000000000000 L\\\\n00000000000100000000000000000000 L\\\\n00000000000010000000000000000000 L\\\\n00000000000001000000000000000000 L\\\\n00000000000000100000000000000000 L \\\\n00000000000000010000000000000000 L\\\\n00000000000000001000000000000000 L\\\\n00000000000000000100000000000000 L\\\\n00000000000000000010000000000000 L\\\\n00000000000000000001000000000000 L\\\\n00000000000000000000100000000000 L\\\\n00000000000000000000010000000000 L\\\\n00000000000000000000001000000000 L\\\\n00000000000000000000000100000000 L\\\\n00000000000000000000000010000000 L\\\\n00000000000000000000000001000000 L\\\\n00000000000000000000000000100000 L\\\\n00000000000000000000000000010000 L\\\\n00000000000000000000000000001000 L\\\\n00000000000000000000000000000100 L\\\\n00000000000000000000000000000010 L\\\\n00000000000000000000000000000001 L\\\\n\\\\n11111111111111111111111111111111 L\\\\n\\\\n.plot X(in[31:0])\\\\n.plot X(out)\\\\n\\\"]]},\\\"/user/add32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"port\\\",[-32,-48,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"/alu/FA\\\",[128,48,7]],[\\\"wire\\\",[136,24,0,0,-16],{\\\"signal\\\":\\\"B[0]\\\"}],[\\\"wire\\\",[120,24,0,0,-16],{\\\"signal\\\":\\\"A[0]\\\"}],[\\\"wire\\\",[96,48,0,-16,0],{\\\"signal\\\":\\\"c[1]\\\"}],[\\\"wire\\\",[160,48,0,16,0],{\\\"signal\\\":\\\"cin\\\"}],[\\\"wire\\\",[128,72,0,0,16],{\\\"signal\\\":\\\"s[0]\\\"}],[\\\"/alu/FA\\\",[-40,96,7]],[\\\"wire\\\",[-48,72,0,0,-16],{\\\"signal\\\":\\\"A[30:1]\\\"}],[\\\"wire\\\",[-72,96,0,-16,0],{\\\"signal\\\":\\\"c[31:2]\\\"}],[\\\"wire\\\",[-8,96,0,16,0],{\\\"signal\\\":\\\"c[30:1]\\\"}],[\\\"wire\\\",[-40,120,0,0,16],{\\\"signal\\\":\\\"s[30:1]\\\"}],[\\\"wire\\\",[-32,72,0,0,-8],{\\\"signal\\\":\\\"B[30:1]\\\"}],[\\\"/alu/FA\\\",[-160,40,7]],[\\\"wire\\\",[-168,16,0,0,-16],{\\\"signal\\\":\\\"A[31]\\\"}],[\\\"wire\\\",[-192,40,0,-16,0],{\\\"signal\\\":\\\"cout\\\"}],[\\\"wire\\\",[-128,40,0,16,0],{\\\"signal\\\":\\\"c[31]\\\"}],[\\\"wire\\\",[-160,64,0,0,16],{\\\"signal\\\":\\\"s[31]\\\"}],[\\\"wire\\\",[-152,16,0,0,-8],{\\\"signal\\\":\\\"B[31]\\\"}],[\\\"port\\\",[-32,-32,0],{\\\"signal\\\":\\\"A[31:0]\\\"}],[\\\"port\\\",[-32,-16,0],{\\\"signal\\\":\\\"B[31:0]\\\"}],[\\\"port\\\",[64,-48,0],{\\\"signal\\\":\\\"s[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"port\\\",[64,-32,0],{\\\"signal\\\":\\\"cout\\\",\\\"direction\\\":\\\"out\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs A[31:0] B[31:0] cin\\\\n.group outputs S[31:0] cout\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLH L\\\\n11111111 11111111 11111111 11111111  00000000 00000000 00000000 00000001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL H\\\\n\\\\n.plot X(cin)\\\\n.plot X(A[31:0])\\\\n.plot X(B[31:0])\\\\n.plot X(S[31:0])\\\\n.plot X(cout)\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-32,0,0],{\\\"name\\\":\\\"A[31:0]\\\"}],[\\\"terminal\\\",[88,0,4],{\\\"name\\\":\\\"cout\\\"}],[\\\"text\\\",[-19,0,0],{\\\"text\\\":\\\"A[31:0]\\\"}],[\\\"text\\\",[75,0,4],{\\\"text\\\":\\\"cout\\\"}],[\\\"terminal\\\",[-32,16,0],{\\\"name\\\":\\\"B[31:0]\\\"}],[\\\"text\\\",[-19,16,0],{\\\"text\\\":\\\"B[31:0]\\\"}],[\\\"terminal\\\",[88,16,4],{\\\"name\\\":\\\"S[31:0]\\\"}],[\\\"text\\\",[75,16,4],{\\\"text\\\":\\\"S[31:0]\\\"}],[\\\"terminal\\\",[-32,-16,0],{\\\"name\\\":\\\"cin\\\"}],[\\\"text\\\",[-19,-16,0],{\\\"text\\\":\\\"cin\\\"}],[\\\"line\\\",[-24,-29,0,0,57]],[\\\"line\\\",[-24,28,0,104,0]],[\\\"line\\\",[80,28,0,0,-56]],[\\\"line\\\",[80,-28,0,-104,0]],[\\\"text\\\",[21,-20,0],{\\\"text\\\":\\\"add32\\\\n\\\"}]]},\\\"/user/shiftl32\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/gates/mux2\\\",[-120,-48,0],{\\\"name\\\":\\\"mxsh16\\\"}],[\\\"port\\\",[24,-56,0],{\\\"signal\\\":\\\"a[31:0]\\\"}],[\\\"port\\\",[24,-32,0],{\\\"signal\\\":\\\"b[4:0]\\\"}],[\\\"port\\\",[24,88,4],{\\\"signal\\\":\\\"sl[31:0]\\\",\\\"direction\\\":\\\"out\\\"}],[\\\"wire\\\",[-120,-48,0,-8,0],{\\\"signal\\\":\\\"a[15:0],ext#16\\\"}],[\\\"wire\\\",[-120,-32,0,-8,0],{\\\"signal\\\":\\\"a[31:0]\\\"}],[\\\"wire\\\",[-112,-16,0,-16,0],{\\\"signal\\\":\\\"b[4]\\\"}],[\\\"wire\\\",[-104,-40,0,16,0],{\\\"signal\\\":\\\"q[31:0]\\\"}],[\\\"/gates/mux2\\\",[8,80,0],{\\\"name\\\":\\\"mxsh1\\\"}],[\\\"wire\\\",[8,80,0,-8,0],{\\\"signal\\\":\\\"t[30:0],ext\\\"}],[\\\"wire\\\",[8,96,0,-8,0],{\\\"signal\\\":\\\"t[31:0]\\\"}],[\\\"wire\\\",[16,112,0,-16,0],{\\\"signal\\\":\\\"b[0]\\\"}],[\\\"/gates/mux2\\\",[-120,16,0],{\\\"name\\\":\\\"mxsh8\\\"}],[\\\"wire\\\",[-120,16,0,-8,0],{\\\"signal\\\":\\\"q[23:0],ext#8\\\"}],[\\\"wire\\\",[-120,32,0,-8,0],{\\\"signal\\\":\\\"q[31:0]\\\"}],[\\\"wire\\\",[-112,48,0,-16,0],{\\\"signal\\\":\\\"b[3]\\\"}],[\\\"wire\\\",[-104,24,0,16,0],{\\\"signal\\\":\\\"r[31:0]\\\"}],[\\\"/gates/mux2\\\",[8,16,0],{\\\"name\\\":\\\"mxsh4\\\"}],[\\\"wire\\\",[8,16,0,-8,0],{\\\"signal\\\":\\\"r[27:0],ext#4\\\"}],[\\\"wire\\\",[8,32,0,-8,0],{\\\"signal\\\":\\\"r[31:0]\\\"}],[\\\"wire\\\",[16,48,0,-16,0],{\\\"signal\\\":\\\"b[2]\\\"}],[\\\"wire\\\",[24,24,0,16,0],{\\\"signal\\\":\\\"s[31:0]\\\"}],[\\\"/gates/mux2\\\",[-120,80,0],{\\\"name\\\":\\\"mxsh2\\\"}],[\\\"wire\\\",[-120,80,0,-8,0],{\\\"signal\\\":\\\"s[29:0],ext#2\\\"}],[\\\"wire\\\",[-120,96,0,-8,0],{\\\"signal\\\":\\\"s[31:0]\\\"}],[\\\"wire\\\",[-112,112,0,-16,0],{\\\"signal\\\":\\\"b[1]\\\"}],[\\\"wire\\\",[-104,88,0,16,0],{\\\"signal\\\":\\\"t[31:0]\\\"}],[\\\"port\\\",[-104,-104,0],{\\\"signal\\\":\\\"arith\\\"}],[\\\"/gates/mux2\\\",[-112,-136,0]],[\\\"wire\\\",[-112,-120,0,-16,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[-96,-128,0,16,0],{\\\"signal\\\":\\\"ext\\\"}],[\\\"wire\\\",[-112,-136,0,-16,0],{\\\"signal\\\":\\\"a[0]\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs a[31:0] b[4:0] arith\\\\n.group outputs sl[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle assert inputs tran 99n sample outputs tran 1n\\\\n\\\\n00000000000000000000000000000001 00001 0 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHL\\\\n00000000000000000000000000000001 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\\\n11111111111111111111111111111111 11111 0 HLLLLLLL LLLLLLLL LLLLLLLL LLLLLLLL\\\\n\\\\n00000000000000000000000000000001 00001 1 LLLLLLLL LLLLLLLL LLLLLLLL LLLLLLHH\\\\n00000000000000000000000000000001 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\\\n11111111111111111111111111111111 11111 1 HHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\\\\n\\\\n.plot X(a[31:0])\\\\n.plot X(b[4:0])\\\\n.plot X(sl[31:0])\\\\n\\\"]],\\\"icon\\\":[[\\\"terminal\\\",[-40,-24,0],{\\\"name\\\":\\\"a[31:0]\\\"}],[\\\"terminal\\\",[-40,8,0],{\\\"name\\\":\\\"b[4:0]\\\"}],[\\\"terminal\\\",[64,-16,4],{\\\"name\\\":\\\"sl[31:0]\\\"}],[\\\"text\\\",[5,-2,0],{\\\"text\\\":\\\"SL32\\\"}],[\\\"property\\\",[25,17,0],{\\\"format\\\":\\\"{name}\\\"}],[\\\"text\\\",[-30,-23,0],{\\\"text\\\":\\\"a[31:0]\\\"}],[\\\"text\\\",[-24,8,0],{\\\"text\\\":\\\"b[4:0]\\\"}],[\\\"text\\\",[53,-14,4],{\\\"text\\\":\\\"sl[31:0]\\\"}],[\\\"line\\\",[-32,-32,0,88,0]],[\\\"line\\\",[56,-32,0,0,56]],[\\\"line\\\",[56,24,0,-88,0]],[\\\"line\\\",[-32,24,0,0,-56]],[\\\"terminal\\\",[-40,-8,0],{\\\"name\\\":\\\"arith\\\"}],[\\\"text\\\",[-26,-8,0],{\\\"text\\\":\\\"arith\\\"}]]},\\\"/user/checktests\\\":{\\\"properties\\\":{\\\"name\\\":{\\\"edit\\\":\\\"yes\\\",\\\"type\\\":\\\"name\\\",\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"Name\\\"}},\\\"schematic\\\":[[\\\"/beta/beta\\\",[-128,40,0],{\\\"name\\\":\\\"beta\\\"}],[\\\"memory\\\",[48,-24,0],{\\\"name\\\":\\\"Main\\\",\\\"nports\\\":\\\"3\\\",\\\"naddr\\\":\\\"10\\\",\\\"ndata\\\":\\\"32\\\",\\\"contents\\\":\\\"+ 0x73df000a 0x73ff0003 0x6ffe0000 0xc3e00000 0x73fffffe 0xd01e0004 0x73e00002 0x801ef800\\\\n+ 0x73fffffa 0xc0210001 0x6ffe0000 0x73ff0002 0xc01f0005 0x73fffff5 0xd01f0000 0x77e00002\\\\n+ 0xc01f0006 0x73fffff1 0xd81f0000 0x77e00002 0xc01f0007 0x73ffffed 0xd41f0001 0x77e00002\\\\n+ 0xc01f0008 0x73ffffe9 0xd01fffff 0x73e00002 0xc01f0009 0x73ffffe5 0xd81fffff 0x73e00002\\\\n+ 0xc01f000a 0x73ffffe1 0xd41fffff 0x73e00002 0xc01f000b 0x73ffffdd 0xc03f0001 0xf021001f\\\\n+ 0xc4410001 0xa4611000 0xd063ffff 0x77e30002 0xc01f000c 0x73ffffd5 0x98611000 0x77e30002\\\\n+ 0xc01f000d 0x73ffffd1 0x98620800 0x73e30002 0xc01f000e 0x73ffffcd 0x801ff800 0x73e00002\\\\n+ 0xc01f000f 0x73ffffc9 0xc01f0000 0x73e00002 0xc01f0010 0x73ffffc5 0x9020f800 0xd0010001\\\\n+ 0x77e00002 0xc01f0012 0x73ffffc0 0xf0410001 0xd0020002 0x77e00002 0xc01f0013 0x73ffffbb\\\\n+ 0x80611000 0xd0030003 0x77e00002 0xc01f0014 0x73ffffb6 0xc0810003 0xd0040004 0x77e00002\\\\n+ 0xc01f0015 0x73ffffb1 0xe8bfffff 0xe8a5fffa 0xd0050005 0x77e00002 0xc01f0016 0x73ffffab\\\\n+ 0xa4c41000 0xd0060006 0x77e00002 0xc01f0017 0x73ffffa6 0xc4ff0001 0xf4e7001d 0xd0070007\\\\n+ 0x77e00002 0xc01f0018 0x73ffffa0 0xb1011800 0xd0080008 0x77e00002 0xc01f0019 0x73ffff9b\\\\n+ 0x99284000 0xc529fff8 0xd0090009 0x77e00002 0xc01f001a 0x73ffff95 0xa9481000 0xd00a000a\\\\n+ 0x77e00002 0xc01f001b 0x73ffff90 0xe5630008 0xd00b000b 0x77e00002 0xc01f001c 0x73ffff8b\\\\n+ 0x859f0800 0xf58c001d 0x818c2800 0xd00c000c 0x77e00002 0xc01f0018 0x73ffff84 0xa5a82800\\\\n+ 0xd00d000d 0x77e00002 0xc01f001e 0x73ffff7f 0x95cc6800 0x81cd7000 0xd00e000e 0x77e00002\\\\n+ 0xc01f001f 0x73ffff79 0xf1e10004 0x85ef0800 0xd00f000f 0x77e00002 0xc01f0020 0x73ffff73\\\\n+ 0xb60f1000 0x82106800 0xd0100010 0x77e00002 0xc01f0021 0x73ffff6d 0xee30fffe 0xd0110011\\\\n+ 0x77e00002 0xc01f0022 0x73ffff68 0xa24f1000 0xe6520010 0xd0120012 0x77e00002 0xc01f0023\\\\n+ 0x73ffff62 0xba6c1000 0xae709800 0xee730000 0xd0130013 0x77e00002 0xc01f0024 0x73ffff5b\\\\n+ 0xc29f001f 0xe2940014 0xd0140014 0x77e00002 0xc01f0025 0x73ffff55 0xe6b40001 0xd0150015\\\\n+ 0x77e00002 0xc01f0026 0x73ffff50 0xc2d10005 0xd0160016 0x77e00002 0xc01f0027 0x73ffff4b\\\\n+ 0xaaf60800 0xd0170017 0x77e00002 0xc01f0028 0x73ffff46 0xe31700fc 0x83182000 0xd0180018\\\\n+ 0x77e00002 0xc01f0029 0x73ffff40 0x8337c000 0xc339ffea 0xd0190019 0x77e00002 0xc01f002a\\\\n+ 0x73ffff3a 0xb3431800 0xa742d000 0xd01a001a 0x77e00002 0xc01f002b 0x73ffff34 0x836e6800\\\\n+ 0xd01b001b 0x77e00002 0xc01f002c 0x73ffff2f 0xc797fffb 0xd01c001c 0x77e00002 0xc01f002d\\\\n+ 0x73ffff2a 0xc7bfffe3 0xd01d001d 0x77e00002 0xc01f002e 0x73ffff25 0xc3df001f 0xf7de0001\\\\n+ 0xf3de0001 0xd01e001e 0x77e00002 0xc01f002f 0x73ffff1e 0x7000ff1d 0xc3fe0011 0x73ff0002\\\\n+ 0xc01f0030 0x73ffff19 0xc23f03c4 0xf021001f 0xa6218800 0x6f910000 0x77ff0002 0xc01f0032\\\\n+ 0x73ffff12 0xf39c0001 0xf79c0001 0xd2fc03b8 0x77f70002 0xc01f0033 0x73ffff0c 0x7f1f00c0\\\\n+ 0x7f3f00c0 0x8358c800 0xd37affff 0x77fb0002 0xc01f0034 0x73ffff05 0x8358c000 0x875ac800\\\\n+ 0xd37affff 0x77fb0002 0xc01f0035 0x73fffeff 0x8359c800 0x875ac000 0x73fa0002 0xc01f0036\\\\n+ 0x73fffefa 0xc23f0001 0xc6510001 0x73f20002 0xc01f0037 0x73fffef5 0xc17f0f0f 0xc19f7f00\\\\n+ 0xa1ab6000 0xd1cd0f00 0x77ee0002 0xc01f0038 0x73fffeee 0xa5ab6000 0xd1cd7f0f 0x77ee0002\\\\n+ 0xc01f0039 0x73fffee9 0xa9ab6000 0xd1cd700f 0x77ee0002 0xc01f003a 0x73fffee4 0xadab6000\\\\n+ 0xd1cd8ff0 0x77ee0002 0xc01f003b 0x73fffedf 0xc37f0001 0xf39b0020 0xd3bc0001 0x77fd0002\\\\n+ 0xc01f003c 0x73fffed9 0xf39b001f 0xfb5c0011 0xd33ac000 0x77f90002 0xc01f003d 0x73fffed3\\\\n+ 0xf75c0011 0xd33a4000 0x77f90002 0xc01f003e 0x73fffece 0xc3df0000 0xc03f0000 0x00000014\\\\n+ 0xf3de0001 0xf7de0001 0xd01e04e0 0x77e00002 0xc01f003f 0x73fffec5 0x04000000 0x08000000\\\\n+ 0x0c000000 0x10000000 0x14000000 0x18000000 0x1c000000 0x20000000 0x24000000 0x28000000\\\\n+ 0x2c000000 0x30000000 0x34000000 0x38000000 0x3c000000 0x40000000 0x44000000 0x48000000\\\\n+ 0x4c000000 0x50000000 0x54000000 0x58000000 0x5c000000 0x68000000 0x78000000 0x9c000000\\\\n+ 0xbc000000 0xdc000000 0xfc000000 0xd001001e 0x77e00002 0xc01f0040 0x73fffea4 0xc09f06e8\\\\n+ 0x7d3f0057 0xe809ffff 0x65240000 0x641f06ec 0x65240008 0x641f06f4 0x60c40000 0x7cbf0051\\\\n+ 0x90064800 0x77e00002 0xc01f0041 0x73fffe97 0x60ff06ec 0x90072800 0x77e00002 0xc01f0042\\\\n+ 0x73fffe92 0x61040008 0x90084800 0x77e00002 0xc01f0043 0x73fffe8d 0x613f06f4 0x90092800\\\\n+ 0x77e00002 0xc01f0044 0x73fffe88 0x801fa000 0x80200000 0x80400000 0x80600000 0x80800000\\\\n+ 0x80a11000 0x80a32800 0x80a42800 0xd00500a0 0x77e00002 0xc01f0045 0x73fffe7c 0x741f0000\\\\n+ 0x80200000 0x80400000 0x80600000 0x80800000 0x80a11000 0x80a32800 0x80a42800 0xd0053100\\\\n+ 0x77e00002 0xc01f0046 0x73fffe70 0xc01f0654 0x6fe00000 0x73ff0001 0x73ff0003 0x77ff0002\\\\n+ 0xc01f0047 0x73fffe69 0xd01e0658 0x77e00002 0xc01f0048 0x73fffe65 0xc01f068c 0xc03f0001\\\\n+ 0xf021001f 0xa4010000 0x6c200000 0x701f0000 0xd0200690 0x77e10002 0xc01f0049 0x73fffe5b\\\\n+ 0x601f06e0 0x73e00007 0x601f06e4 0x73e00005 0xc01f0000 0x77e00003 0xc03f0001 0xc05f0020\\\\n+ 0x77e10002 0xc01f004a 0x73fffe50 0xf0210001 0xc4420001 0x77e2fffa 0xc3ff0000 0x73fffffe\\\\n+ 0xaaaaaaaa 0x55555555 0x00000000 0x00000000 0x00000000 0x00000000\\\\n\\\"}],[\\\"wire\\\",[120,-24,0,8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[120,16,0,8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[120,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,-24,0,-8,0],{\\\"signal\\\":\\\"ia[11:2]\\\"}],[\\\"wire\\\",[48,-16,0,-8,0],{\\\"signal\\\":\\\"1'1\\\"}],[\\\"wire\\\",[48,-8,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,0,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,16,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,32,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,40,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,56,0,-8,0],{\\\"signal\\\":\\\"ma[11:2]\\\"}],[\\\"wire\\\",[48,64,0,-8,0],{\\\"signal\\\":\\\"0'1\\\"}],[\\\"wire\\\",[48,72,0,-8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[48,80,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,56,0,-8,0],{\\\"signal\\\":\\\"clk\\\"}],[\\\"wire\\\",[-160,40,0,-8,0],{\\\"signal\\\":\\\"reset\\\"}],[\\\"wire\\\",[-160,24,0,-8,0],{\\\"signal\\\":\\\"irq\\\"}],[\\\"wire\\\",[-160,8,0,-8,0],{\\\"signal\\\":\\\"mrd[31:0]\\\"}],[\\\"wire\\\",[-160,-8,0,-8,0],{\\\"signal\\\":\\\"id[31:0]\\\"}],[\\\"wire\\\",[-64,-8,0,8,0],{\\\"signal\\\":\\\"ia[31:0]\\\"}],[\\\"wire\\\",[-64,8,0,8,0],{\\\"signal\\\":\\\"ma[31:0]\\\"}],[\\\"wire\\\",[-64,24,0,8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"wire\\\",[-64,40,0,8,0],{\\\"signal\\\":\\\"mwr\\\"}],[\\\"wire\\\",[-64,56,0,8,0],{\\\"signal\\\":\\\"mwd[31:0]\\\"}],[\\\"wire\\\",[48,24,0,-8,0],{\\\"signal\\\":\\\"moe\\\"}],[\\\"text\\\",[21,-81,0],{\\\"text\\\":\\\"The contents of main memory have\\\"}],[\\\"text\\\",[22,-70,0],{\\\"text\\\":\\\"been initialized with the binary for\\\"}],[\\\"text\\\",[22,-59,0],{\\\"text\\\":\\\"Beta test program.\\\"}]],\\\"test\\\":[[\\\"test\\\",\\\".power Vdd=1\\\\n.thresholds Vol=0 Vil=0.1 Vih=0.9 Voh=1\\\\n\\\\n.group inputs RESET IRQ\\\\n.group outputs IA[31:0] ID[31:0] MA[31:0] MOE MWR MRD[31:0] MWD[31:0]\\\\n\\\\n.mode gate\\\\n\\\\n.cycle CLK=1 tran 5n assert inputs tran 45n CLK=0 tran 49n sample outputs tran 1n\\\\n\\\\n10 -------------------------------- -------------------------------- -------------------------------- -L -------------------------------- -------------------------------- //   1: reset\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL LHHHLLHHHHLHHHHHLLLLLLLLLLLLHLHL -------------------------------- -L -------------------------------- -------------------------------- //   2: [000] BEQ(R31,0x2c,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   3: [02c] BEQ(R31,0x38,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHLLL HHLHLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   4: [038] CMPEQC(R31,0x0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   5: [03c] BNE(R0,0x48,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHLLL HHLHHLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   6: [048] CMPLEC(R31,0x0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   7: [04c] BNE(R0,0x58,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHLLL HHLHLHLLLLLHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //   8: [058] CMPLTC(R31,0x1,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //   9: [05c] BNE(R0,0x68,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHLLL HHLHLLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  10: [068] CMPEQC(R31,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  11: [06c] BEQ(R0,0x78,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL HHLHHLLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  12: [078] CMPLEC(R31,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLHHHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  13: [07c] BEQ(R0,0x88,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHLLL HHLHLHLLLLLHHHHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  14: [088] CMPLTC(R31,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  15: [08c] BEQ(R0,0x98,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  16: [098] ADDC(R31,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLLHHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  17: [09c] SHLC(R1,0x1f,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL HHLLLHLLLHLLLLLHLLLLLLLLLLLLLLLH LHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  18: [0a0] SUBC(R1,0x1,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLLHLL HLHLLHLLLHHLLLLHLLLHLLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  19: [0a4] OR(R1,R2,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHLLL HHLHLLLLLHHLLLHHHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  20: [0a8] CMPEQC(R3,0xffff,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHLHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  21: [0ac] BNE(R3,0xb8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHLLL HLLHHLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  22: [0b8] CMPLE(R1,R2,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHLHHHHLL LHHHLHHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  23: [0bc] BNE(R3,0xc8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHLLL HLLHHLLLLHHLLLHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  24: [0c8] CMPLE(R2,R1,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLLHHLL LHHHLLHHHHHLLLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  25: [0cc] BEQ(R3,0xd8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHLLL HLLLLLLLLLLHHHHHHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  26: [0d8] ADD(R31,R31,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHLHHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  27: [0dc] BEQ(R0,0xe8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- //  28: [0e8] ADDC(R31,0x0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  29: [0ec] BEQ(R0,0xf8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHLLL HLLHLLLLLLHLLLLLHHHHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  30: [0f8] CMPEQ(R0,R31,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLHHHHHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  31: [0fc] CMPEQC(R1,0x1,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  32: [100] BNE(R0,0x10c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLLHHLL HHHHLLLLLHLLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  33: [10c] SHLC(R1,0x1,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLLLL HHLHLLLLLLLLLLHLLLLLLLLLLLLLLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  34: [110] CMPEQC(R2,0x2,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  35: [114] BNE(R0,0x120,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLLLL HLLLLLLLLHHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  36: [120] ADD(R1,R2,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLLHLL HHLHLLLLLLLLLLHHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  37: [124] CMPEQC(R3,0x3,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  38: [128] BNE(R0,0x134,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHLHLL HHLLLLLLHLLLLLLHLLLLLLLLLLLLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- //  39: [134] ADDC(R1,0x3,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHLLL HHLHLLLLLLLLLHLLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  40: [138] CMPEQC(R4,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLLHHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  41: [13c] BNE(R0,0x148,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHLLL HHHLHLLLHLHHHHHHHHHHHHHHHHHHHHHH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  42: [148] XORC(R31,0xffff,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLLHHLL HHHLHLLLHLHLLHLHHHHHHHHHHHHHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- //  43: [14c] XORC(R5,0xfffa,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLLLL HHLHLLLLLLLLLHLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  44: [150] CMPEQC(R5,0x5,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  45: [154] BNE(R0,0x160,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLLLL HLHLLHLLHHLLLHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- //  46: [160] OR(R4,R2,R6)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLLHLL HHLHLLLLLLLLLHHLLLLLLLLLLLLLLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  47: [164] CMPEQC(R6,0x6,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  48: [168] BNE(R0,0x174,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHLHLL HHLLLHLLHHHHHHHHLLLLLLLLLLLLLLLH HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  49: [174] SUBC(R31,0x1,R7)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHLLL HHHHLHLLHHHLLHHHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  50: [178] SHRC(R7,0x1d,R7)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHLHHHHHLL HHLHLLLLLLLLLHHHLLLLLLLLLLLLLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  51: [17c] CMPEQC(R7,0x7,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  52: [180] BNE(R0,0x18c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLLHHLL HLHHLLLHLLLLLLLHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- //  53: [18c] SHL(R1,R3,R8)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLLLL HHLHLLLLLLLLHLLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  54: [190] CMPEQC(R8,0x8,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  55: [194] BNE(R0,0x1a0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLLLL HLLHHLLHLLHLHLLLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  56: [1a0] CMPLE(R8,R8,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLLHLL HHLLLHLHLLHLHLLHHHHHHHHHHHHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- //  57: [1a4] SUBC(R9,0xfff8,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHLLL HHLHLLLLLLLLHLLHLLLLLLLLLLLLHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  58: [1a8] CMPEQC(R9,0x9,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  59: [1ac] BNE(R0,0x1b8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHLLL HLHLHLLHLHLLHLLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- //  60: [1b8] XOR(R8,R2,R10)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHLHHHHLL HHLHLLLLLLLLHLHLLLLLLLLLLLLLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  61: [1bc] CMPEQC(R10,0xa,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  62: [1c0] BNE(R0,0x1cc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLLHHLL HHHLLHLHLHHLLLHHLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- //  63: [1cc] ORC(R3,0x8,R11)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLLLL HHLHLLLLLLLLHLHHLLLLLLLLLLLLHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  64: [1d0] CMPEQC(R11,0xb,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  65: [1d4] BNE(R0,0x1e0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLLLL HLLLLHLHHLLHHHHHLLLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- //  66: [1e0] SUB(R31,R1,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLLHLL HHHHLHLHHLLLHHLLLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- //  67: [1e4] SHRC(R12,0x1d,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHLLL HLLLLLLHHLLLHHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- //  68: [1e8] ADD(R12,R5,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHLHHLL HHLHLLLLLLLLHHLLLLLLLLLLLLLLHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  69: [1ec] CMPEQC(R12,0xc,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  70: [1f0] BNE(R0,0x1fc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLHHHHHHHLL HLHLLHLHHLHLHLLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- //  71: [1fc] OR(R8,R5,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL HHLHLLLLLLLLHHLHLLLLLLLLLLLLHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  72: [200] CMPEQC(R13,0xd,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  73: [204] BNE(R0,0x210,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLLLL HLLHLHLHHHLLHHLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  74: [210] CMPLT(R12,R13,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHLHLL HLLLLLLHHHLLHHLHLHHHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- //  75: [214] ADD(R13,R14,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHLLL HHLHLLLLLLLLHHHLLLLLLLLLLLLLHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  76: [218] CMPEQC(R14,0xe,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLLHHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  77: [21c] BNE(R0,0x228,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHLLL HHHHLLLHHHHLLLLHLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  78: [228] SHLC(R1,0x4,R15)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHLHHLL HLLLLHLHHHHLHHHHLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- //  79: [22c] SUB(R15,R1,R15)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLLLL HHLHLLLLLLLLHHHHLLLLLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  80: [230] CMPEQC(R15,0xf,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  81: [234] BNE(R0,0x240,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLLLL HLHHLHHLLLLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  82: [240] SHR(R15,R2,R16)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLLHLL HLLLLLHLLLLHLLLLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- //  83: [244] ADD(R16,R13,R16)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHLLL HHLHLLLLLLLHLLLLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  84: [248] CMPEQC(R16,0x10,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  85: [24c] BNE(R0,0x258,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHLLL HHHLHHHLLLHHLLLLHHHHHHHHHHHHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- //  86: [258] XNORC(R16,0xfffe,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHLHHHLL HHLHLLLLLLLHLLLHLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  87: [25c] CMPEQC(R17,0x11,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  88: [260] BNE(R0,0x26c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHLHHLL HLHLLLHLLHLLHHHHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- //  89: [26c] AND(R15,R2,R18)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLLLL HHHLLHHLLHLHLLHLLLLLLLLLLLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- //  90: [270] ORC(R18,0x10,R18)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHLHLL HHLHLLLLLLLHLLHLLLLLLLLLLLLHLLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  91: [274] CMPEQC(R18,0x12,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLLHHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  92: [278] BNE(R0,0x284,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLLHLL HLHHHLHLLHHLHHLLLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- //  93: [284] SRA(R12,R2,R19)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHLLL HLHLHHHLLHHHLLLLHLLHHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHLHHLL -L -------------------------------- -------------------------------- //  94: [288] XNOR(R16,R19,R19)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLLHHLL HHHLHHHLLHHHLLHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- //  95: [28c] XNORC(R19,0x0,R19)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLLLL HHLHLLLLLLLHLLHHLLLLLLLLLLLHLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- //  96: [290] CMPEQC(R19,0x13,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- //  97: [294] BNE(R0,0x2a0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLLLL HHLLLLHLHLLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- //  98: [2a0] ADDC(R31,0x1f,R20)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLLHLL HHHLLLHLHLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- //  99: [2a4] ANDC(R20,0x14,R20)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHLLL HHLHLLLLLLLHLHLLLLLLLLLLLLLHLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 100: [2a8] CMPEQC(R20,0x14,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 101: [2ac] BNE(R0,0x2b8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHLLL HHHLLHHLHLHHLHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 102: [2b8] ORC(R20,0x1,R21)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHLHHHHLL HHLHLLLLLLLHLHLHLLLLLLLLLLLHLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 103: [2bc] CMPEQC(R21,0x15,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 104: [2c0] BNE(R0,0x2cc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLLHHLL HHLLLLHLHHLHLLLHLLLLLLLLLLLLLHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 105: [2cc] ADDC(R17,0x5,R22)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLLLL HHLHLLLLLLLHLHHLLLLLLLLLLLLHLHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 106: [2d0] CMPEQC(R22,0x16,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHLHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 107: [2d4] BNE(R0,0x2e0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLLLL HLHLHLHLHHHHLHHLLLLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 108: [2e0] XOR(R22,R1,R23)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLLHLL HHLHLLLLLLLHLHHHLLLLLLLLLLLHLHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 109: [2e4] CMPEQC(R23,0x17,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 110: [2e8] BNE(R0,0x2f4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHLHLL HHHLLLHHLLLHLHHHLLLLLLLLHHHHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 111: [2f4] ANDC(R23,0xfc,R24)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHLLL HLLLLLHHLLLHHLLLLLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 112: [2f8] ADD(R24,R4,R24)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHLHHHHHHLL HHLHLLLLLLLHHLLLLLLLLLLLLLLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 113: [2fc] CMPEQC(R24,0x18,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 114: [300] BNE(R0,0x30c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLLHHLL HLLLLLHHLLHHLHHHHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 115: [30c] ADD(R23,R24,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLLLL HHLLLLHHLLHHHLLHHHHHHHHHHHHLHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 116: [310] ADDC(R25,0xffea,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHLHLL HHLHLLLLLLLHHLLHLLLLLLLLLLLHHLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 117: [314] CMPEQC(R25,0x19,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 118: [318] BNE(R0,0x324,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLLHLL HLHHLLHHLHLLLLHHLLLHHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 119: [324] SHL(R3,R3,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHLLL HLHLLHHHLHLLLLHLHHLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 120: [328] OR(R2,R26,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHLHHLL HHLHLLLLLLLHHLHLLLLLLLLLLLLHHLHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 121: [32c] CMPEQC(R26,0x1a,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 122: [330] BNE(R0,0x33c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLLHHHHLL HLLLLLHHLHHLHHHLLHHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 123: [33c] ADD(R14,R13,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLLLL HHLHLLLLLLLHHLHHLLLLLLLLLLLHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 124: [340] CMPEQC(R27,0x1b,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 125: [344] BNE(R0,0x350,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLLLL HHLLLHHHHLLHLHHHHHHHHHHHHHHHHLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 126: [350] SUBC(R23,0xfffb,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHLHLL HHLHLLLLLLLHHHLLLLLLLLLLLLLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 127: [354] CMPEQC(R28,0x1c,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHLHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 128: [358] BNE(R0,0x364,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLLHLL HHLLLHHHHLHHHHHHHHHHHHHHHHHLLLHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 129: [364] SUBC(R31,0xffe3,R29)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHLLL HHLHLLLLLLLHHHLHLLLLLLLLLLLHHHLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 130: [368] CMPEQC(R29,0x1d,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 131: [36c] BNE(R0,0x378,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHLLL HHLLLLHHHHLHHHHHLLLLLLLLLLLHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 132: [378] ADDC(R31,0x1f,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHLHHHHHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 133: [37c] SHRC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 134: [380] SHLC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 135: [384] CMPEQC(R30,0x1e,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLLHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 136: [388] BNE(R0,0x394,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHLHLL LHHHLLLLLLLLLLLLHHHHHHHHLLLHHHLH -------------------------------- -L -------------------------------- -------------------------------- // 137: [394] BEQ(R0,0xc,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHLLL HHLLLLHHHHHHHHHLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLHHHH -L -------------------------------- -------------------------------- // 138: [398] ADDC(R30,0x11,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLLHHHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 139: [39c] BEQ(R31,0x3a8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHLLL HHLLLLHLLLHHHHHHLLLLLLHHHHLLLHLL LLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 140: [3a8] ADDC(R31,0x3c4,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 141: [3ac] SHLC(R1,0x1f,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLLLL HLHLLHHLLLHLLLLHHLLLHLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL -L -------------------------------- -------------------------------- // 142: [3b0] OR(R1,R17,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHLHHLHLL LHHLHHHHHLLHLLLHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 143: [3b4] JMP(R17,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLLHLL HHHHLLHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHHHLHHHLLLL -L -------------------------------- -------------------------------- // 144: [3c4] SHLC(R28,0x1,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHLLL HHHHLHHHHLLHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHHHLHHHLLL -L -------------------------------- -------------------------------- // 145: [3c8] SHRC(R28,0x1,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLLHHLL HHLHLLHLHHHHHHLLLLLLLLHHHLHHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 146: [3cc] CMPEQC(R28,0x3b8,R23)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHLLLL LHHHLHHHHHHHLHHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 147: [3d0] BNE(R23,0x3dc,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHLHHHLL LHHHHHHHLLLHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 148: [3dc] LDR(0x6e0,R24)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLLLL LHHHHHHHLLHHHHHHLLLLLLLLHHLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 149: [3e0] LDR(0x6e4,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLLHLL HLLLLLHHLHLHHLLLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 150: [3e4] ADD(R24,R25,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 151: [3e8] CMPEQC(R26,0xffff,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHLHHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 152: [3ec] BNE(R27,0x3f8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHLLL HLLLLLHHLHLHHLLLHHLLLLLLLLLLLLLL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLL -L -------------------------------- -------------------------------- // 153: [3f8] ADD(R24,R24,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLHHHHHHHHLL HLLLLHHHLHLHHLHLHHLLHLLLLLLLLLLL HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -L -------------------------------- -------------------------------- // 154: [3fc] SUB(R26,R25,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL HHLHLLHHLHHHHLHLHHHHHHHHHHHHHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 155: [400] CMPEQC(R26,0xffff,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLLLHLL LHHHLHHHHHHHHLHHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 156: [404] BNE(R27,0x410,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLLLL HLLLLLHHLHLHHLLHHHLLHLLLLLLLLLLL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -L -------------------------------- -------------------------------- // 157: [410] ADD(R25,R25,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHLHLL HLLLLHHHLHLHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 158: [414] SUB(R26,R24,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLLHHLLL LHHHLLHHHHHHHLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 159: [418] BEQ(R26,0x424,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLLHLL HHLLLLHLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 160: [424] ADDC(R31,0x1,R17)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHLLL HHLLLHHLLHLHLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 161: [428] SUBC(R17,0x1,R18)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHLHHLL LHHHLLHHHHHHLLHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 162: [42c] BEQ(R18,0x438,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHLLL HHLLLLLHLHHHHHHHLLLLHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 163: [438] ADDC(R31,0xf0f,R11)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLLHHHHLL HHLLLLLHHLLHHHHHLHHHHHHHLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 164: [43c] ADDC(R31,0x7f00,R12)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLLLL HLHLLLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHHHLLLLLLLL -L -------------------------------- -------------------------------- // 165: [440] AND(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLLHLL HHLHLLLHHHLLHHLHLLLLHHHHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 166: [444] CMPEQC(R13,0xf00,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLLHLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 167: [448] BNE(R14,0x454,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHLHLL HLHLLHLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHHHHHLLLLHHHH -L -------------------------------- -------------------------------- // 168: [454] OR(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHLLL HHLHLLLHHHLLHHLHLHHHHHHHLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 169: [458] CMPEQC(R13,0x7f0f,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHLHHHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 170: [45c] BNE(R14,0x468,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHLLL HLHLHLLHHLHLHLHHLHHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLHHHLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 171: [468] XOR(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHLHHLL HHLHLLLHHHLLHHLHLHHHLLLLLLLLHHHH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 172: [46c] CMPEQC(R13,0x700f,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHLLLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 173: [470] BNE(R14,0x47c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLLHHHHHLL HLHLHHLHHLHLHLHHLHHLLLLLLLLLLLLL HHHHHHHHHHHHHHHHHLLLHHHHHHHHLLLL -L -------------------------------- -------------------------------- // 174: [47c] XNOR(R11,R12,R13)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLLLL HHLHLLLHHHLLHHLHHLLLHHHHHHHHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 175: [480] CMPEQC(R13,0x8ff0,R14)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLLLHLL LHHHLHHHHHHLHHHLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 176: [484] BNE(R14,0x490,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLLLL HHLLLLHHLHHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 177: [490] ADDC(R31,0x1,R27)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHLHLL HHHHLLHHHLLHHLHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 178: [494] SHLC(R27,0x20,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHLLL HHLHLLHHHLHHHHLLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 179: [498] CMPEQC(R28,0x1,R29)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLLHHHLL LHHHLHHHHHHHHHLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 180: [49c] BNE(R29,0x4a8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHLLL HHHHLLHHHLLHHLHHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 181: [4a8] SHLC(R27,0x1f,R28)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHLHHLL HHHHHLHHLHLHHHLLLLLLLLLLLLLHLLLH HHHHHHHHHHHHHHHHHHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 182: [4ac] SRAC(R28,0x11,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLLLL HHLHLLHHLLHHHLHLHHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 183: [4b0] CMPEQC(R26,0xc000,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHLHHLHLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 184: [4b4] BNE(R25,0x4c0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLLLL HHHHLHHHLHLHHHLLLLLLLLLLLLLHLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 185: [4c0] SHRC(R28,0x11,R26)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLLHLL HHLHLLHHLLHHHLHLLHLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 186: [4c4] CMPEQC(R26,0x4000,R25)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLLHLLL LHHHLHHHHHHHHLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 187: [4c8] BNE(R25,0x4d4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHLHLL HHLLLLHHHHLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 188: [4d4] ADDC(R31,0x0,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 189: [4d8] ADDC(R31,0x0,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHLHHHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -------------------------------- -L -------------------------------- -------------------------------- // 190: [4dc] illop op=0b000000\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 191: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 192: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 193: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 194: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 195: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL HHHHLLHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLHHHLLLLLL -L -------------------------------- -------------------------------- // 196: [4e0] SHLC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLLHLL HHHHLHHHHHLHHHHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLHHHLLLLL -L -------------------------------- -------------------------------- // 197: [4e4] SHRC(R30,0x1,R30)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHLLL HHLHLLLLLLLHHHHLLLLLLHLLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 198: [4e8] CMPEQC(R30,0x4e0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 199: [4ec] BNE(R0,0x4f8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHLLL LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 200: [4f8] illop op=0b000001\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 201: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 202: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 203: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 204: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 205: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLLHHHHHHLL LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 206: [4fc] illop op=0b000010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 207: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 208: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 209: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 210: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 211: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLLLL LLLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 212: [500] illop op=0b000011\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 213: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 214: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 215: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 216: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 217: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLLHLL LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 218: [504] illop op=0b000100\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 219: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 220: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 221: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 222: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 223: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHLLL LLLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 224: [508] illop op=0b000101\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 225: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 226: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 227: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 228: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 229: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLLHHLL LLLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 230: [50c] illop op=0b000110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 231: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 232: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 233: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 234: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 235: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLLLL LLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 236: [510] illop op=0b000111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 237: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 238: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 239: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 240: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 241: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHLHLL LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 242: [514] illop op=0b001000\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 243: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 244: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 245: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 246: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 247: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHLLL LLHLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 248: [518] illop op=0b001001\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 249: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 250: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 251: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 252: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 253: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLLHHHLL LLHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 254: [51c] illop op=0b001010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 255: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 256: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 257: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 258: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 259: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLLLL LLHLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 260: [520] illop op=0b001011\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 261: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 262: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 263: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 264: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 265: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLLHLL LLHHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 266: [524] illop op=0b001100\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 267: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 268: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 269: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 270: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 271: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHLLL LLHHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 272: [528] illop op=0b001101\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 273: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 274: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 275: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 276: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 277: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHLHHLL LLHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 278: [52c] illop op=0b001110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 279: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 280: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 281: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 282: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 283: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLLLL LLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 284: [530] illop op=0b001111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 285: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 286: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 287: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 288: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 289: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHLHLL LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 290: [534] illop op=0b010000\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 291: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 292: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 293: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 294: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 295: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHLLL LHLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 296: [538] illop op=0b010001\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 297: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 298: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 299: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 300: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 301: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLLHHHHLL LHLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 302: [53c] illop op=0b010010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 303: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 304: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 305: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 306: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 307: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLLLL LHLLHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 308: [540] illop op=0b010011\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 309: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 310: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 311: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 312: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 313: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLLHLL LHLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 314: [544] illop op=0b010100\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 315: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 316: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 317: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 318: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 319: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHLLL LHLHLHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 320: [548] illop op=0b010101\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 321: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 322: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 323: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 324: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 325: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLLHHLL LHLHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 326: [54c] illop op=0b010110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 327: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 328: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 329: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 330: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 331: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLLLL LHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 332: [550] illop op=0b010111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 333: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 334: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 335: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 336: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 337: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHLHLL LHHLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 338: [554] illop op=0b011010\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 339: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 340: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 341: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 342: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 343: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHLLL LHHHHLLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 344: [558] illop op=0b011110\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 345: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 346: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 347: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 348: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 349: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHLHHHLL HLLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 350: [55c] illop op=0b100111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 351: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 352: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 353: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 354: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 355: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLLLL HLHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 356: [560] illop op=0b101111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 357: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 358: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 359: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 360: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 361: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLLHLL HHLHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 362: [564] illop op=0b110111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 363: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 364: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 365: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 366: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 367: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHLLL HHHHHHLLLLLLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 368: [568] illop op=0b111111\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 369: [004] BEQ(R31,0x14,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL HHLHLLLLLLLHHHHLLLLLLLLLLLLLLHLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 370: [014] CMPEQC(R30,0x4,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 371: [018] BEQ(R0,0x24,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLLHLL HHLLLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 372: [024] ADDC(R1,0x1,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 373: [028] JMP(R30,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHLHHLL HHLHLLLLLLLLLLLHLLLLLLLLLLLHHHHL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 374: [56c] CMPEQC(R1,0x1e,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 375: [570] BNE(R0,0x57c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHLHHHHHLL HHLLLLLLHLLHHHHHLLLLLHHLHHHLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL -L -------------------------------- -------------------------------- // 376: [57c] ADDC(R31,0x6e8,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLLLL LHHHHHLHLLHHHHHHLLLLLLLLLHLHLHHH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 377: [580] LDR(0x6e0,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLLHLL HHHLHLLLLLLLHLLHHHHHHHHHHHHHHHHH LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -L -------------------------------- -------------------------------- // 378: [584] XORC(R9,0xffff,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 379: [588] ST(R9,0x0,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLLHHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 380: [58c] ST(R0,0x6ec,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLLLL LHHLLHLHLLHLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL LH -------------------------------- HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL // 381: [590] ST(R9,0x8,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHLHLL LHHLLHLLLLLHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL LH -------------------------------- LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH // 382: [594] ST(R0,0x6f4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHLLL LHHLLLLLHHLLLHLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 383: [598] LD(R4,0x0,R6)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLLHHHLL LHHHHHLLHLHHHHHHLLLLLLLLLHLHLLLH LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 384: [59c] LDR(0x6e4,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLLLL HLLHLLLLLLLLLHHLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 385: [5a0] CMPEQ(R6,R9,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHLLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 386: [5a4] BNE(R0,0x5b0,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLLLL LHHLLLLLHHHHHHHHLLLLLHHLHHHLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLHHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 387: [5b0] LD(R31,0x6ec,R7)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHLHLL HLLHLLLLLLLLLHHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 388: [5b4] CMPEQ(R7,R5,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHLHHHLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 389: [5b8] BNE(R0,0x5c4,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLLHLL LHHLLLLHLLLLLHLLLLLLLLLLLLLLHLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 390: [5c4] LD(R4,0x8,R8)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHLLL HLLHLLLLLLLLHLLLLHLLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 391: [5c8] CMPEQ(R8,R9,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 392: [5cc] BNE(R0,0x5d8,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHLLL LHHLLLLHLLHHHHHHLLLLLHHLHHHHLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHHLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 393: [5d8] LD(R31,0x6f4,R9)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHLHHHLL HLLHLLLLLLLLHLLHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 394: [5dc] CMPEQ(R9,R5,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 395: [5e0] BNE(R0,0x5ec,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHLHHLL HLLLLLLLLLLHHHHHHLHLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 396: [5ec] ADD(R31,R20,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 397: [5f0] ADD(R0,R0,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 398: [5f4] ADD(R0,R0,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 399: [5f8] ADD(R0,R0,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHLHHHHHHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLHLLL -L -------------------------------- -------------------------------- // 400: [5fc] ADD(R0,R0,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHLHLLLL -L -------------------------------- -------------------------------- // 401: [600] ADD(R1,R2,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLHHHHLLL -L -------------------------------- -------------------------------- // 402: [604] ADD(R3,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLHLHLLLLL -L -------------------------------- -------------------------------- // 403: [608] ADD(R4,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLLHHLL HHLHLLLLLLLLLHLHLLLLLLLLHLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 404: [60c] CMPEQC(R5,0xa0,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 405: [610] BNE(R0,0x61c,R31)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLLHHHLL LHHHLHLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 406: [61c] BNE(R31,0x620,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLLLL HLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 407: [620] ADD(R0,R0,R1)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLLHLL HLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 408: [624] ADD(R0,R0,R2)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHLLL HLLLLLLLLHHLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 409: [628] ADD(R0,R0,R3)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHLHHLL HLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLHHLLLHLLLLLL -L -------------------------------- -------------------------------- // 410: [62c] ADD(R0,R0,R4)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLLLL HLLLLLLLHLHLLLLHLLLHLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLHHLLLHLLLLLLL -L -------------------------------- -------------------------------- // 411: [630] ADD(R1,R2,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHLHLL HLLLLLLLHLHLLLHHLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHLLHLLHHLLLLLL -L -------------------------------- -------------------------------- // 412: [634] ADD(R3,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHLLL HLLLLLLLHLHLLHLLLLHLHLLLLLLLLLLL LLLLLLLLLLLLLLLLLLHHLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 413: [638] ADD(R4,R5,R5)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLLHHHHLL HHLHLLLLLLLLLHLHLLHHLLLHLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 414: [63c] CMPEQC(R5,0x3100,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLLLLLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 415: [640] BNE(R0,0x64c,R31)\\\\n01 HLLLLLLLLLLLLLLLLLLLLHHLLHLLHHLL HHLLLLLLLLLHHHHHLLLLLHHLLHLHLHLL LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL -L -------------------------------- -------------------------------- // 416: [64c] ADDC(R31,0x654,R0)\\\\n00 HLLLLLLLLLLLLLLLLLLLLHHLLHLHLLLL LHHLHHHHHHHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 417: [650] JMP(R0,R31)\\\\n01 LLLLLLLLLLLLLLLLLLLLLHHLLHLHLHLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLLH -------------------------------- -L -------------------------------- -------------------------------- // 418: interrupt\\\\n00 HLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL LHHLHHHHHHHHHHHLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 419: [008] JMP(R30,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHLHHLLL LHHHLLHHHHHHHHHHLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 420: [658] BEQ(R31,0x668,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHLLL HHLHLLLLLLLHHHHLLLLLLHHLLHLHHLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 421: [668] CMPEQC(R30,0x658,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHLHHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 422: [66c] BNE(R0,0x678,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHLLL HHLLLLLLLLLHHHHHLLLLLHHLHLLLHHLL LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 423: [678] ADDC(R31,0x68c,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLLHHHHHLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 424: [67c] ADDC(R31,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLLLL HHHHLLLLLLHLLLLHLLLLLLLLLLLHHHHH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 425: [680] SHLC(R1,0x1f,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLLHLL HLHLLHLLLLLLLLLHLLLLLLLLLLLLLLLL HLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL -L -------------------------------- -------------------------------- // 426: [684] OR(R1,R0,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHLLL LHHLHHLLLLHLLLLLLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 427: [688] JMP(R0,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLLHHLL LHHHLLLLLLLHHHHHLLLLLLLLLLLLLLLL -------------------------------- -L -------------------------------- -------------------------------- // 428: [68c] BEQ(R31,0x690,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLLLL HHLHLLLLLLHLLLLLLLLLLHHLHLLHLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 429: [690] CMPEQC(R0,0x690,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLLHLHLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 430: [694] BNE(R1,0x6a0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLLLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLLLL HL HLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHL -------------------------------- // 431: [6a0] LD(R31,0x6e0,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLLHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHHH -------------------------------- -L -------------------------------- -------------------------------- // 432: [6a4] BEQ(R0,0x6c4,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHLLL LHHLLLLLLLLHHHHHLLLLLHHLHHHLLHLL LLLLLLLLLLLLLLLLLLLLLHHLHHHLLHLL HL LHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLH -------------------------------- // 433: [6a8] LD(R31,0x6e4,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHLHHLL LHHHLLHHHHHLLLLLLLLLLLLLLLLLLHLH -------------------------------- -L -------------------------------- -------------------------------- // 434: [6ac] BEQ(R0,0x6c4,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLLLL HHLLLLLLLLLHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 435: [6b0] ADDC(R31,0x0,R0)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHLHLL LHHHLHHHHHHLLLLLLLLLLLLLLLLLLLHH -------------------------------- -L -------------------------------- -------------------------------- // 436: [6b4] BNE(R0,0x6c4,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHLLL HHLLLLLLLLHHHHHHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 437: [6b8] ADDC(R31,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHLHHHHLL HHLLLLLLLHLHHHHHLLLLLLLLLLHLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 438: [6bc] ADDC(R31,0x20,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 439: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 440: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHH -L -------------------------------- -------------------------------- // 441: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 442: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 443: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 444: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHL -L -------------------------------- -------------------------------- // 445: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 446: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 447: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 448: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLH -L -------------------------------- -------------------------------- // 449: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 450: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 451: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 452: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHHLL -L -------------------------------- -------------------------------- // 453: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 454: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 455: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLL -L -------------------------------- -------------------------------- // 456: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHH -L -------------------------------- -------------------------------- // 457: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 458: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 459: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLL -L -------------------------------- -------------------------------- // 460: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLHL -L -------------------------------- -------------------------------- // 461: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 462: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 463: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLL -L -------------------------------- -------------------------------- // 464: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLH -L -------------------------------- -------------------------------- // 465: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 466: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 467: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLL -L -------------------------------- -------------------------------- // 468: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHHLLL -L -------------------------------- -------------------------------- // 469: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 470: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 471: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLL -L -------------------------------- -------------------------------- // 472: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHH -L -------------------------------- -------------------------------- // 473: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 474: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 475: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLL -L -------------------------------- -------------------------------- // 476: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHHL -L -------------------------------- -------------------------------- // 477: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 478: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 479: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLL -L -------------------------------- -------------------------------- // 480: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLH -L -------------------------------- -------------------------------- // 481: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 482: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 483: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 484: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLHLL -L -------------------------------- -------------------------------- // 485: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 486: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 487: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 488: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHH -L -------------------------------- -------------------------------- // 489: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 490: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 491: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 492: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLHL -L -------------------------------- -------------------------------- // 493: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 494: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 495: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 496: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLH -L -------------------------------- -------------------------------- // 497: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 498: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 499: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 500: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLHLLLL -L -------------------------------- -------------------------------- // 501: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 502: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 503: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLHLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 504: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHH -L -------------------------------- -------------------------------- // 505: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 506: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 507: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLHLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 508: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHL -L -------------------------------- -------------------------------- // 509: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 510: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 511: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLHLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 512: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLH -L -------------------------------- -------------------------------- // 513: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 514: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 515: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLHLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 516: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHHLL -L -------------------------------- -------------------------------- // 517: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 518: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 519: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLHLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 520: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHH -L -------------------------------- -------------------------------- // 521: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 522: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 523: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 524: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLHL -L -------------------------------- -------------------------------- // 525: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 526: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 527: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLHLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 528: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLH -L -------------------------------- -------------------------------- // 529: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 530: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 531: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLHLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 532: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLHLLL -L -------------------------------- -------------------------------- // 533: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 534: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 535: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLHLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 536: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHH -L -------------------------------- -------------------------------- // 537: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 538: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 539: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLHLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 540: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHL -L -------------------------------- -------------------------------- // 541: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 542: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 543: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLHLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 544: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLH -L -------------------------------- -------------------------------- // 545: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 546: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 547: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLHLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 548: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLHLL -L -------------------------------- -------------------------------- // 549: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 550: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 551: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLHLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 552: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHH -L -------------------------------- -------------------------------- // 553: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 554: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 555: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 556: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHL -L -------------------------------- -------------------------------- // 557: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 558: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 559: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH HLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 560: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLH -L -------------------------------- -------------------------------- // 561: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 562: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLLLLL LHHHLHHHHHHLLLLHLLLLLLLLLLLLLLHL -------------------------------- -L -------------------------------- -------------------------------- // 563: [6c0] BNE(R1,0x6cc,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLLHHLL HHHHLLLLLLHLLLLHLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 564: [6cc] SHLC(R1,0x1,R1)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLLLL HHLLLHLLLHLLLLHLLLLLLLLLLLLLLLLH LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 565: [6d0] SUBC(R2,0x1,R2)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHLHLL LHHHLHHHHHHLLLHLHHHHHHHHHHHHHLHL -------------------------------- -L -------------------------------- -------------------------------- // 566: [6d4] BNE(R2,0x6c0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHLLL HHLLLLHHHHHHHHHHLLLLLLLLLLLLLLLL LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL -L -------------------------------- -------------------------------- // 567: [6d8] ADDC(R31,0x0,R31)\\\\n00 LLLLLLLLLLLLLLLLLLLLLHHLHHLHHHLL LHHHLLHHHHHHHHHHHHHHHHHHHHHHHHHL -------------------------------- -L -------------------------------- -------------------------------- // 568: [6dc] BEQ(R31,0x6d8,R31)\\\\n\\\\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\\\\n\\\\n.plotdef op ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? LD ST ??? JMP BEQ BNE ??? LDR ADD SUB MUL DIV CMPEQ CMPLT CMPLE ??? AND OR XOR XNOR SHL SHR SRA ??? ADDC SUBC MULC DIVC CMPEQC CMPLTC CMPLEC ??? ANDC ORC XORC XNORC SHLC SHRC SRAC ???\\\\n\\\\n.plot clk\\\\n.plot reset\\\\n.plot irq\\\\n.plot X(ia[31:0])\\\\n.plot X(id[31:0])\\\\n.plot op(id[31:26])\\\\n.plot reg(id[20:16])\\\\n.plot reg(id[15:11])\\\\n.plot reg(id[25:21])\\\\n.plot X(ma[31:0])\\\\n.plot moe\\\\n.plot X(mrd[31:0])\\\\n.plot mwr\\\\n.plot X(mwd[31:0])\\\\n\\\"]]}},\\\"last_saved\\\":1643545513115}\",\"check\":\"right\"},\"1A1\":{\"id\":\"1A1\",\"value\":\"adder unit: A + B\",\"check\":\"right\"},\"1A2\":{\"id\":\"1A2\",\"value\":\"0\",\"check\":\"right\"},\"1A3\":{\"id\":\"1A3\",\"value\":\"1\",\"check\":\"right\"},\"1A4\":{\"id\":\"1A4\",\"value\":\"1\",\"check\":\"right\"},\"1A5\":{\"id\":\"1A5\",\"value\":\"1\",\"check\":\"right\"},\"1A6\":{\"id\":\"1A6\",\"value\":\"0\",\"check\":\"right\"},\"1A7\":{\"id\":\"1A7\",\"value\":\"1\",\"check\":\"right\"},\"1A8\":{\"id\":\"1A8\",\"value\":\"0\",\"check\":\"right\"},\"1A9\":{\"id\":\"1A9\",\"value\":\"2\",\"check\":\"right\"},\"1A10\":{\"id\":\"1A10\",\"value\":\"1\",\"check\":\"right\"},\"1B1\":{\"id\":\"1B1\",\"value\":\"boole unit: select B operand\",\"check\":\"right\"},\"1B2\":{\"id\":\"1B2\",\"value\":\"don't care\",\"check\":\"right\"},\"1B3\":{\"id\":\"1B3\",\"value\":\"0\",\"check\":\"right\"},\"1B4\":{\"id\":\"1B4\",\"value\":\"don't care\",\"check\":\"right\"},\"1B5\":{\"id\":\"1B5\",\"value\":\"0\",\"check\":\"right\"},\"1B6\":{\"id\":\"1B6\",\"value\":\"0\",\"check\":\"right\"},\"1B7\":{\"id\":\"1B7\",\"value\":\"0\",\"check\":\"right\"},\"1B8\":{\"id\":\"1B8\",\"value\":\"0\",\"check\":\"right\"},\"1B9\":{\"id\":\"1B9\",\"value\":\"1\",\"check\":\"right\"},\"1B10\":{\"id\":\"1B10\",\"value\":\"if Reg[Ra]==0 then 1 else 0\",\"check\":\"right\"},\"1C1\":{\"id\":\"1C1\",\"value\":\"boole unit: select B operand\",\"check\":\"right\"},\"1C2\":{\"id\":\"1C2\",\"value\":\"don't care\",\"check\":\"right\"},\"1C3\":{\"id\":\"1C3\",\"value\":\"1\",\"check\":\"right\"},\"1C4\":{\"id\":\"1C4\",\"value\":\"don't care\",\"check\":\"right\"},\"1C5\":{\"id\":\"1C5\",\"value\":\"0\",\"check\":\"right\"},\"1C6\":{\"id\":\"1C6\",\"value\":\"0\",\"check\":\"right\"},\"1C7\":{\"id\":\"1C7\",\"value\":\"don't care\",\"check\":\"right\"},\"1C8\":{\"id\":\"1C8\",\"value\":\"0\",\"check\":\"right\"},\"1C9\":{\"id\":\"1C9\",\"value\":\"1\",\"check\":\"right\"},\"1C10\":{\"id\":\"1C10\",\"value\":\"if Reg[Ra]==0 then 1 else 0\",\"check\":\"right\"},\"1D1\":{\"id\":\"1D1\",\"value\":\"adder unit: A + B\",\"check\":\"right\"},\"1D2\":{\"id\":\"1D2\",\"value\":\"0\",\"check\":\"right\"},\"1D3\":{\"id\":\"1D3\",\"value\":\"0\",\"check\":\"right\"},\"1D4\":{\"id\":\"1D4\",\"value\":\"1\",\"check\":\"right\"},\"1D5\":{\"id\":\"1D5\",\"value\":\"0\",\"check\":\"right\"},\"1D6\":{\"id\":\"1D6\",\"value\":\"0\",\"check\":\"right\"},\"1D7\":{\"id\":\"1D7\",\"value\":\"0\",\"check\":\"right\"},\"1D8\":{\"id\":\"1D8\",\"value\":\"0\",\"check\":\"right\"},\"1D9\":{\"id\":\"1D9\",\"value\":\"2\",\"check\":\"right\"},\"1D10\":{\"id\":\"1D10\",\"value\":\"1\",\"check\":\"right\"},\"2A1\":{\"id\":\"2A1\",\"value\":\"A\",\"check\":\"right\"},\"2A2\":{\"id\":\"2A2\",\"value\":\"A+1\",\"check\":\"right\"},\"2A3\":{\"id\":\"2A3\",\"value\":\"A+B\",\"check\":\"right\"},\"2A4\":{\"id\":\"2A4\",\"value\":\"A+B+1\",\"check\":\"right\"},\"2A5\":{\"id\":\"2A5\",\"value\":\"A-B-1\",\"check\":\"right\"},\"2A6\":{\"id\":\"2A6\",\"value\":\"A-B\",\"check\":\"right\"},\"2A7\":{\"id\":\"2A7\",\"value\":\"A-1\",\"check\":\"right\"},\"2A8\":{\"id\":\"2A8\",\"value\":\"A\",\"check\":\"right\"},\"2B1\":{\"id\":\"2B1\",\"value\":\"9\",\"check\":\"right\"},\"2B2\":{\"id\":\"2B2\",\"value\":\"-1\",\"check\":\"right\"},\"2C1\":{\"id\":\"2C1\",\"value\":\"adder unit: A - 1\",\"check\":\"right\"},\"2C2\":{\"id\":\"2C2\",\"value\":\"0\",\"check\":\"right\"},\"2C3\":{\"id\":\"2C3\",\"value\":\"don't care\",\"check\":\"right\"},\"2C4\":{\"id\":\"2C4\",\"value\":\"don't care\",\"check\":\"right\"},\"2C5\":{\"id\":\"2C5\",\"value\":\"0\",\"check\":\"right\"},\"2C6\":{\"id\":\"2C6\",\"value\":\"if Reg[Ra]==0 then 0 else 1\",\"check\":\"right\"},\"2C7\":{\"id\":\"2C7\",\"value\":\"don't care\",\"check\":\"right\"},\"2C8\":{\"id\":\"2C8\",\"value\":\"0\",\"check\":\"right\"},\"2C9\":{\"id\":\"2C9\",\"value\":\"1\",\"check\":\"right\"},\"2C10\":{\"id\":\"2C10\",\"value\":\"1\",\"check\":\"right\"}}","/ComputationStructures/worksheets/L09.html":"{}","/ComputationStructures/lectures/assembly/assembly.html":"{}","/ComputationStructures/videos/cmos/lecture.html":"{}","/ComputationStructures/lectures/caches/caches.html":"{}","/ComputationStructures/exercises/tinyos/lab.html":"{\"bsim\":{\"id\":\"bsim\",\"value\":\"{\\\"tests\\\":{\\\"test\\\":\\\"36036\\\"},\\\"required_tests\\\":[\\\"36036\\\"],\\\"state\\\":{\\\"Tiny OS\\\":\\\"////////////////////////////////////////////////////////////////////////\\\\n/// TinyOS: Simple OS demo for 6.004 Beta processor\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\n//  This program implements a primitive OS kernel for the Beta\\\\n//  along with three simple user-mode processes hooked together thru\\\\n//  a semaphore-controlled bounded buffer.\\\\n//\\\\n//  The three processes -- and the kernel -- share an address space;\\\\n//  each is allocated its own stack (for a total of 4 stacks), and\\\\n//  each process has its own virtual machine state (ie, registers).\\\\n//  The latter is stored in the kernel ProcTbl, which contains a data\\\\n//  structure for each process.\\\\n\\\\n// Here's an unretouched sample of output from a BSIM run of the demo:\\\\n// \\\\n// Start typing, Bunky.\\\\n//                                                \\\\n// 00000000> hello\\\\n// ELLOHAY\\\\n// \\\\n\\\\n// The 'null' checkoff to keep online system happy\\\\n// DON'T EDIT THE NEXT TWO LINES\\\\n.pcheckoff \\\\\\\"jsinput\\\\\\\" \\\\\\\"Tiny OS\\\\\\\" 36036\\\\n.verify 0 0\\\\n\\\\n.include \\\\\\\"beta.uasm\\\\\\\"  // Define Beta instructions, etc.\\\\n.options clock tty\\\\n.options segmentation\\\\n\\\\n.segment Kernel\\\\n\\\\n// The following code is a primitive but complete timesharing kernel\\\\n//  sufficient to run three processes, plus handlers for a small\\\\n//  selection of supervisor calls (SVCs) to perform OS services.\\\\n//  The latter include simple console I/O and semaphores.\\\\n//\\\\n// All kernel code is executed with the Kernel-mode bit of the\\\\n//  program counter -- its high-order bit --- set.  This causes\\\\n//  new interrupt requests to be deferred until the kernel returns\\\\n//  to user mode.\\\\n\\\\n// Interrupt vectors:\\\\n\\\\n. = VEC_RESET\\\\n        BR(I_Reset)     // on Reset (start-up)\\\\n. = VEC_II\\\\n        BR(I_IllOp)     // on Illegal Instruction (eg SVC)\\\\n. = VEC_SEGFAULT\\\\n        BR(I_SegFault)  // on segmentation fault (user-mode address > bounds)\\\\n. = VEC_CLK\\\\n        BR(I_Clk)       // on clock interrupt\\\\n. = VEC_KBD\\\\n        BR(I_Kbd)       // on Keyboard interrupt\\\\n. = VEC_MOUSE\\\\n        BR(I_Mouse)\\\\t\\\\t// on mouse interrupt\\\\n\\\\n// The following macro is the first instruction to be entered for each\\\\n// asynchronous I/O interrupt handler.   It adjusts XP (the interrupted\\\\n// PC) to account for the instruction skipped due to the pipeline bubble.\\\\n.macro ENTER_INTERRUPT() SUBC(XP,4,XP)\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n/// Kernel Interrupt support code\\\\n/// We use a slightly simpler (and less efficient) scheme here from\\\\n///  that in the text.  On kernel entry, the ENTIRE state -- 31\\\\n///  registers -- of the interrupted program is saved in a designated\\\\n///  region of kernel memory (\\\\\\\"UserMState\\\\\\\", below).  This entire state\\\\n///  is then restored on return to the interrupted program.\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\n// Here's the SAVED STATE of the interrupted process, while we're\\\\n// processing an interrupt.\\\\nUserMState:\\\\n        STORAGE(32)     // R0-R31... (PC is in XP!)\\\\n\\\\n// Here are macros to SAVE and RESTORE state -- 31 registers -- from\\\\n//   the above storage.\\\\n\\\\n// N.B. - The following macro assumes that R0 is a macro for\\\\n// the integer 0, R1 is a macro for the integer 1, etc.\\\\n.macro SS(R) ST(R, UserMState+(4*R))    // (Auxiliary macro)\\\\n\\\\n.macro SAVESTATE() {\\\\n        SS(0)  SS(1)  SS(2)  SS(3)  SS(4)  SS(5)  SS(6)  SS(7)\\\\n        SS(8)  SS(9)  SS(10) SS(11) SS(12) SS(13) SS(14) SS(15)\\\\n        SS(16) SS(17) SS(18) SS(19) SS(20) SS(21) SS(22) SS(23)\\\\n        SS(24) SS(25) SS(26) SS(27) SS(28) SS(29) SS(30) }\\\\n\\\\n// See comment for SS(R), above\\\\n.macro RS(R) LD(UserMState+(4*R), R)    // (Auxiliary macro)\\\\n\\\\n.macro RESTORESTATE() {\\\\n        RS(0)  RS(1)  RS(2)  RS(3)  RS(4)  RS(5)  RS(6)  RS(7)\\\\n        RS(8)  RS(9)  RS(10) RS(11) RS(12) RS(13) RS(14) RS(15)\\\\n        RS(16) RS(17) RS(18) RS(19) RS(20) RS(21) RS(22) RS(23)\\\\n        RS(24) RS(25) RS(26) RS(27) RS(28) RS(29) RS(30) }\\\\n\\\\nKStack: LONG(.+4)               // Pointer to ...\\\\n        STORAGE(256)            //  ... the kernel stack.\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Handler for segmentation fault\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\nI_SegFault:\\\\n        CALL(KWrMsg)                    // Type out an error msg,\\\\n        .text \\\\\\\"Segmentation fault: address >= bounds register while executing instruction at user-mode address 0x\\\\\\\"\\\\n        MOVE(xp, r0)\\\\n        CALL(KHexPrt)\\\\n        CALL(KWrMsg)\\\\n        .text \\\\\\\"! .....\\\\\\\"\\\\n        HALT()                          // Then crash system.\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Handler for unexpected interrupts\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\n\\\\n/*\\\\nLightweight mouse click interrupt handler,\\\\n*/\\\\n\\\\nMouse_State: STORAGE(1)\\\\t//hold last mouseclick info\\\\n\\\\nGetMouseH: //.breakpoint\\\\n\\\\t\\\\tLD(Mouse_State, r0)             // Fetch mouse coords\\\\n\\\\t\\\\tBEQ(r0, I_Wait)\\\\t\\\\t\\\\t\\\\t\\\\t// if 0, wait until scheduled again\\\\n        ST(r0, UserMState)              // return it in R0.\\\\n\\\\t\\\\tST(r31, Mouse_State)            // Clear mouse buffer\\\\n        BR(I_Rtn)                       // and return to user.\\\\n\\\\nI_Mouse:  ENTER_INTERRUPT()\\\\n\\\\t\\\\t//.breakpoint\\\\n\\\\t\\\\tST(r0, UserMState)\\\\n\\\\t\\\\tCLICK()\\\\n\\\\t\\\\tST(r0, Mouse_State)\\\\n\\\\t\\\\tLD(UserMState, r0)\\\\n\\\\t\\\\tJMP(xp)\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Handler for Illegal Instructions\\\\n///  (including SVCs)\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\nI_IllOp:\\\\n        SAVESTATE()             // Save the machine state.\\\\n        LD(KStack, SP)          // Install kernel stack pointer.\\\\n\\\\n        SUBC(XP, 4, r0)         // u-mode address of illegal instruction\\\\n        CALL(MapUserAddress)    // convert to k-mode address\\\\n        LD(r0, 0, r0)           // Fetch the illegal instruction\\\\n        SHRC(r0, 26, r0)        // Extract the 6-bit OPCODE\\\\n        SHLC(r0, 2, r0)         // Make it a WORD (4-byte) index\\\\n        LD(r0, UUOTbl, r0)      // Fetch UUOTbl[OPCODE]\\\\n        JMP(r0)                 // and dispatch to the UUO handler.\\\\n\\\\n.macro UUO(ADR) LONG(ADR+PC_SUPERVISOR) // Auxiliary Macros\\\\n.macro BAD()    UUO(UUOError)\\\\n\\\\nUUOTbl: BAD()           UUO(SVC_UUO)    BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n        BAD()           BAD()           BAD()           BAD()\\\\n\\\\n// Here's the handler for truly unused opcodes (not SVCs):\\\\nUUOError:\\\\n        CALL(KWrMsg)                    // Type out an error msg,\\\\n        .text \\\\\\\"Illegal instruction \\\\\\\"\\\\n        LD(xp, -4, r0)                  //   giving hex instr and location;\\\\n        CALL(KHexPrt)\\\\n        CALL(KWrMsg)\\\\n        .text \\\\\\\" at location 0x\\\\\\\"\\\\n        MOVE(xp,r0)\\\\n        CALL(KHexPrt)\\\\n        CALL(KWrMsg)\\\\n        .text \\\\\\\"! .....\\\\\\\"\\\\n        HALT()                          // Then crash system.\\\\n\\\\n// Here's the common exit sequence from Kernel interrupt handlers:\\\\n// Restore registers, and jump back to the interrupted user-mode\\\\n// program.\\\\n\\\\nI_Rtn:  RESTORESTATE()\\\\nkexit:  JMP(XP)                 // Good place for debugging breakpoint!\\\\n\\\\n// Alternate return from interrupt handler which BACKS UP PC,\\\\n// and calls the scheduler prior to returning.   This causes\\\\n// the trapped SVC to be re-executed when the process is\\\\n// eventually rescheduled...\\\\n\\\\nI_Wait: LD(UserMState+(4*30), r0)       // Grab XP from saved MState,\\\\n        SUBC(r0, 4, r0)                 // back it up to point to\\\\n        ST(r0, UserMState+(4*30))       //    SVC instruction\\\\n\\\\n        CALL(Scheduler)                 // Switch current process,\\\\n        BR(I_Rtn)                       // and return to (some) user.\\\\n\\\\n// Sub-handler for SVCs, called from I_IllOp on SVC opcode:\\\\n\\\\nSVC_UUO:\\\\n        SUBC(XP, 4, r0)         // u-mode address of illegal instruction\\\\n        CALL(MapUserAddress)    // convert to k-mode address\\\\n        LD(r0, 0, r0)           // The faulting instruction.\\\\n        //.breakpoint \\\\n\\\\t\\\\tANDC(r0, 0xf, r0)       // Pick out low bits,\\\\n        SHLC(r0, 2, r0)         // make a word index,\\\\n        LD(r0, SVCTbl, r0)      // and fetch the table entry.\\\\n        JMP(r0)\\\\n\\\\nSVCTbl: UUO(HaltH)              // SVC(0): User-mode HALT instruction\\\\n        UUO(WrMsgH)             // SVC(1): Write message\\\\n        UUO(WrChH)              // SVC(2): Write Character\\\\n        UUO(GetKeyH)            // SVC(3): Get Key\\\\n        UUO(HexPrtH)            // SVC(4): Hex Print\\\\n        UUO(WaitH)              // SVC(5): Wait(S), S in R0\\\\n        UUO(SignalH)            // SVC(6): Signal(S), S in R0\\\\n        UUO(YieldH)             // SVC(7): Yield()\\\\n\\\\t\\\\tUUO(GetMouseH)\\\\t\\\\t\\\\t// SVC(8): Get last mouse click\\\\n\\\\n/// Definitions of macros used to interface with Kernel code:\\\\n\\\\n.macro Halt()   SVC(0)          // Stop a process.\\\\n.macro WrMsg()  SVC(1)          // Write the 0-terminated msg following SVC\\\\n.macro WrCh()   SVC(2)          // Write a character whose code is in R0\\\\n.macro GetKey() SVC(3)          // Read a key from the keyboard into R0\\\\n.macro HexPrt() SVC(4)          // Hex Print the value in R0.\\\\n.macro Wait()   SVC(5)          // Wait operation on semaphore, number in R0\\\\n.macro Signal() SVC(6)          // Signal operation on semaphore, number in R0\\\\n.macro Yield()  SVC(7)          // Give up remaining quantum\\\\n.macro GetMouse() SVC(8)\\\\t\\\\t// Get last mouse click from user process\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n// Keyboard handling\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\nKey_State: LONG(0)                      // 1-char keyboard buffer.\\\\n\\\\nGetKeyH:                                // return key code in r0, or block\\\\n        LD(Key_State, r0)\\\\n        BEQ(r0, I_Wait)                 // on 0, just wait a while\\\\n\\\\n// key ready, return it and clear the key buffer\\\\n        LD(Key_State, r0)               // Fetch character to return\\\\n        ST(r0, UserMState)              // return it in R0.\\\\n        ST(r31, Key_State)              // Clear kbd buffer\\\\n        BR(I_Rtn)                       // and return to user.\\\\n\\\\n\\\\n// Interrupt side: read key, store it into buffer.\\\\n// NB: This is a LIGHTWEIGHT interrupt handler, which doesn't\\\\n//   do a full state save.  It doesn't have to, since (1) it\\\\n//   only uses R0, and (2) it always returns to the same process\\\\n//   it interrupts.  By not saving all state, it manages\\\\n//   to save a LOT of time:  20 STs on entry, 30 LDs on exit:\\\\nI_Kbd:  ENTER_INTERRUPT()               // Adjust the PC!\\\\n        ST(r0, UserMState)              // Save ONLY r0...\\\\n        RDCHAR()                        // Read the character,\\\\n        ST(r0,Key_State)                // save its code.\\\\n        LD(UserMState, r0)              // restore r0, and\\\\n        JMP(xp)                         // and return to the user.\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n// Printout handling\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\nWrChH:  LD(UserMState,r0)               // The user's R0\\\\n        WRCHAR()                        // Write out the character,\\\\n        BR(I_Rtn)                       // then return\\\\n\\\\nWrMsgH: LD(UserMState+(4*30), r1)       // Fetch interrupted XP, then\\\\n        MOVE(r1, r0)\\\\n        CALL(MapUserAddress)            // map to kernel-mode address        \\\\n        MOVE(r0, r2)                    // save addr of start of message\\\\n        CALL(KMsgAux)                   // print text following SVC.\\\\n        SUB(r0, r2, r0)                 // number of bytes in message\\\\n        ADD(r0, r1, r1)                 // adjust XP appropriately\\\\n        ST(r1, UserMState+(4*30))       // Store updated XP.\\\\n        BR(I_Rtn)\\\\n\\\\n// Handler for HexPrt(): print hex value from R0\\\\nHexPrtH:\\\\n        LD(UserMState, r0)              // Load user R0\\\\n        CALL(KHexPrt)                   // Print it out \\\\n        BR(I_Rtn)                       // And return to user.\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Timesharing with round-robin scheduler\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\n// ProcTbl contains a 33-word data structure for each process,\\\\n//  including R0-R30.  R31, which always contains 0, is omitted.\\\\n//  The XP (R30) value stored for each process is the PC,\\\\n//  and points to the next instruction to be executed.\\\\n\\\\n// The kernel variable CurProc always points to the ProcTbl entry\\\\n//  corresponding to the \\\\\\\"swapped in\\\\\\\" process.\\\\n\\\\nProcTbl:\\\\n        STORAGE(30)             // Process 0: R0-R29\\\\n        LONG(0)                 // Process 0: XP (= PC)\\\\n        LONG(P0_base)           // Process 0: base address\\\\n        LONG(P0_bounds)         // Process 0: bounds\\\\n\\\\n        STORAGE(30)             // Process 1: R0-R29\\\\n        LONG(0)                 // Process 1: XP (= PC)\\\\n        LONG(P1_base)           // Process 1: base address\\\\n        LONG(P1_bounds)         // Process 1: bounds\\\\n\\\\t\\\\t\\\\n\\\\t\\\\tSTORAGE(30)             // Process 2: R0-R29\\\\n        LONG(0)                 // Process 2: XP (= PC)\\\\n        LONG(P2_base)           // Process 2: base address\\\\n        LONG(P2_bounds)         // Process 2: bounds\\\\n\\\\nCurProc: LONG(ProcTbl)\\\\n\\\\n// Schedule a new process.\\\\n// Swaps current process out of UserMState, swaps in a new one.\\\\n\\\\nScheduler:\\\\n        PUSH(LP)\\\\n        CMOVE(UserMState, r0)\\\\n        LD(CurProc, r1)\\\\n        CALL(CopyMState)                // Copy UserMState -> CurProc\\\\n\\\\n        LD(CurProc, r0)\\\\n        ADDC(r0, 4*33, r0)              // Increment to next process..\\\\n        CMPLTC(r0,CurProc, r1)          // End of ProcTbl?\\\\n        BT(r1, Sched1)                  // Nope, its OK.\\\\n        CMOVE(ProcTbl, r0)              // yup, back to Process 0.\\\\nSched1: ST(r0, CurProc)                 // Here's the new process;\\\\n\\\\n        ADDC(r31, UserMState, r1)       // Swap new process in.\\\\n        CALL(CopyMState)\\\\n        LD(r0, 31*4, r2) ST(r2, SEG_BASE)    // load new base and bounds\\\\n        LD(r0, 32*4, r2) ST(r2, SEG_BOUNDS)\\\\n        LD(Tics, r0)                    // Reset TicsLeft counter\\\\n        ST(r0, TicsLeft)                //   to Tics.\\\\n        POP(LP)\\\\n        JMP(LP)                         // and return to caller.\\\\n\\\\n// Copy a 31-word MState structure from the address in r0 to that in r1\\\\n// Trashes r2, leaves r0-r1 unchanged.\\\\n.macro CM(N) LD(r0, N*4, r2)  ST(r2, N*4, r1)   // Auxiliary macro\\\\nCopyMState:\\\\n        CM(0)   CM(1)   CM(2)   CM(3)   CM(4)   CM(5)   CM(6)   CM(7)\\\\n        CM(8)   CM(9)   CM(10)  CM(11)  CM(12)  CM(13)  CM(14)  CM(15)\\\\n        CM(16)  CM(17)  CM(18)  CM(19)  CM(20)  CM(21)  CM(22)  CM(23)\\\\n        CM(24)  CM(25)  CM(26)  CM(27)  CM(28)  CM(29)  CM(30)\\\\n        JMP(LP)\\\\n\\\\n\\\\n// translate user-mode address in R0 to kernel-mode address,\\\\n// return result in R0.  Adds the BASE value for the current process\\\\n// to R0, simulating the effect of the base-and-bounds memory\\\\n// management.  You DO NOT have to implement the check against\\\\n// the BOUNDS value.\\\\nMapUserAddress:\\\\n\\\\t\\\\t//.breakpoint\\\\n\\\\t\\\\tPUSH(r1)\\\\t\\\\t\\\\t//save kernel code registers\\\\n\\\\t\\\\tLD(CurProc, r1)\\\\n\\\\t\\\\tLD(r1, 31*4, r1)\\\\n\\\\t\\\\tADD(r0, r1, r0)\\\\n\\\\t\\\\tPOP(r1)\\\\t\\\\t\\\\t\\\\t//restore kernel registers\\\\n        JMP(LP)    \\\\t\\\\t\\\\t// return to caller\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Clock interrupt handler:  Invoke the scheduler.\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\n/// Here's the deal:\\\\n/// Each compute-bound process gets a quantum consisting of TICS clock\\\\n///   interrupts, where TICS is the number stored in the variable Tics\\\\n///   below.  To avoid overhead, we do a full state save only when the\\\\n///   clock interrupt will cause a process swap, using the TicsLeft\\\\n///   variable as a counter.\\\\n/// We do a LIMITED state save (r0 only) in order to free up a register,\\\\n///   then count down TicsLeft stored below.  When it becomes negative,\\\\n///   we do a FULL state save and call the scheduler; otherwise we just\\\\n///   return, having burned only a few clock cycles on the interrupt.\\\\n/// RECALL that the call to Scheduler sets TicsLeft to Tics, giving\\\\n///   the newly-swapped-in process a full quantum.\\\\n\\\\nTics:   LONG(2)                 // Number of clock interrupts/quantum.\\\\nTicsLeft: LONG(0)               // Number of tics left in this quantum\\\\n\\\\nI_Clk:  ENTER_INTERRUPT()       // Adjust the PC!\\\\n        ST(r0, UserMState)      // Save R0 ONLY, for now.\\\\n        LD(TicsLeft, r0)        // Count down TicsLeft\\\\n        SUBC(r0,1,r0)\\\\n        ST(r0, TicsLeft)        // Now there's one left.\\\\n        CMPLTC(r0, 0, r0)       // If new value is negative, then\\\\n        BT(r0, DoSwap)          //   swap processes.\\\\n        LD(UserMState, r0)      // Else restore r0, and\\\\n        JMP(XP)                 // return to same user.\\\\n\\\\nDoSwap: LD(UserMState, r0)      // Restore r0, so we can do a\\\\n        SAVESTATE()             //   FULL State save.\\\\n        LD(KStack, SP)          // Install kernel stack pointer.\\\\n        CALL(Scheduler)         // Swap it out!\\\\n        BR(I_Rtn)               // and return to next process.\\\\n\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n/// YIELD() SVC: voluntarily give up rest of time quantum.\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\nYieldH: CALL(Scheduler)         // Schedule next process, and\\\\n        BR(I_Rtn)               // and return to user.\\\\n\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Here on start-up (reset):  Begin executing process 0.\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\nI_Reset:\\\\n        LD(ProcTbl + (30*4), XP)   // load initial PC for process 0\\\\n        CMOVE(P0_base, r0)      // set up P0 base and bounds\\\\n        ST(r0, SEG_BASE)\\\\n        CMOVE(P0_bounds, r0)\\\\n        ST(r0, SEG_BOUNDS)\\\\n        JMP(XP)                 // start execution in user mode\\\\n\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// SVC Sub-handler for user-mode HALTs\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\nHaltH:  BR(I_Wait)                      // SVC(0): User-mode HALT SVC\\\\n\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Kernel support for User-mode Semaphores\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\n// storage for fixed number of integer semaphores, initialized to 0\\\\nSemaphores:\\\\n        LONG(0)   // semaphore #0\\\\n        LONG(1)   // semaphore #1 for writing to console\\\\n        LONG(0)   // semaphore #2\\\\n        LONG(0)   // semaphore #3\\\\nnSemaphores = (. - Semaphores)/4\\\\n\\\\n// Handler for Wait():  semaphore number is in ***user's*** r0.  (Look\\\\n// at WrChH handler to see how it accesses the user's r0.) First, check\\\\n// that number is >= 0 and < nSemaphores; return immediately if number\\\\n// is out of range.  Otherwise, if the value of the specified semaphore is\\\\n// greater than 0, decrement the value and return to user mode.  If the\\\\n// semaphore value is 0, the WAIT operation cannot be completed at this\\\\n// time, so branch to I_Wait.\\\\nWaitH:\\\\n\\\\t\\\\tLD(UserMState, r0)\\\\t\\\\t\\\\t\\\\t//get semaphore id from user r0\\\\n\\\\t\\\\tCMPLTC(r0, nSemaphores, r1)\\\\t\\\\t//cond1\\\\t : r0 < nSemaphores\\\\n\\\\t\\\\tBF(r1, I_Rtn)\\\\n\\\\t\\\\tCMPLTC(r0, 0, r1)\\\\t\\\\t\\\\t\\\\t//cond2\\\\t : r0 < 0\\\\n\\\\t\\\\tBT(r1, I_Rtn)\\\\n\\\\t\\\\t\\\\n\\\\t\\\\tSHLC(r0, 2, r0)\\\\t\\\\t\\\\t//id within bounds, convert to byte offset\\\\n\\\\t\\\\tLD(r0, Semaphores, r1)\\\\t//get semaphore value\\\\n\\\\t\\\\tBF(r1, I_Wait)\\\\t\\\\t\\\\t//semaphore value == 0, wait until available\\\\n\\\\t\\\\tSUBC(r1, 1, r1)\\\\t\\\\t\\\\t//decrement semaphore\\\\n\\\\t\\\\tST(r1, Semaphores, r0)\\\\n\\\\t\\\\tBR(I_Rtn)\\\\t\\\\t\\\\t\\\\t//return to user\\\\n\\\\n// Handler for Signal():  semaphore number is in ***user's*** r0.\\\\n// First, check that number is >= 0 and < nSemaphores; return immediately\\\\n// if number is out of range.  Otherwise, increment the value of the\\\\n// specified semaphore and return to user mode.\\\\nSignalH:\\\\n\\\\t\\\\tLD(UserMState, r0)\\\\t\\\\t\\\\t\\\\t//get semaphore id from user r0\\\\n\\\\t\\\\tCMPLTC(r0, nSemaphores, r1)\\\\t\\\\t//cond1\\\\t : r0 < nSemaphores\\\\n\\\\t\\\\tBF(r1, I_Rtn)\\\\n\\\\t\\\\tCMPLTC(r0, 0, r1)\\\\t\\\\t\\\\t\\\\t//cond2\\\\t : r0 < 0\\\\n\\\\t\\\\tBT(r1, I_Rtn)\\\\n\\\\t\\\\t\\\\n        SHLC(r0, 2, r0)\\\\t\\\\t\\\\t//id within bounds, convert to byte offset\\\\n\\\\t\\\\tLD(r0, Semaphores, r1)\\\\t//get semaphore value\\\\n\\\\t\\\\tADDC(r1, 1, r1)\\\\t\\\\t\\\\t//increment semaphore\\\\n\\\\t\\\\tST(r1, Semaphores, r0)\\\\n\\\\t\\\\tBR(I_Rtn)\\\\t\\\\t\\\\t\\\\t//return to user\\\\n\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// Kernel-callable Utility Routines\\\\n/// NB: These routines use PRIVILEDGED instructions; hence they can be\\\\n///  called directly only from kernel code (ie, with the high-PC-bit\\\\n///  set).  Use SVC traps to accomplish the same functions from user-\\\\n///  level code.\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\n\\\\n/// Hex print procedure: prints longword in R0\\\\n\\\\nHexDig: LONG('0') LONG('1') LONG('2') LONG('3') LONG('4') LONG('5')\\\\n        LONG('6') LONG('7') LONG('8') LONG('9') LONG('A') LONG('B')\\\\n        LONG('C') LONG('D') LONG('E') LONG('F')\\\\n\\\\nKHexPrt:\\\\n        PUSH(r0)                // Saves all regs, incl r0\\\\n        PUSH(r1)\\\\n        PUSH(r2)\\\\n        PUSH(lp)\\\\n\\\\n        CMOVE(8, r2)\\\\n        MOVE(r0,r1)\\\\nKHexPr1:\\\\n        SRAC(r1,28,r0)                  // Extract digit into r0.\\\\n        MULC(r1, 16, r1)                // Next loop, next nybble...\\\\n        ANDC(r0, 0xF, r0)\\\\n        MULC(r0, 4, r0)\\\\n        LD(r0, HexDig, r0)\\\\n        WRCHAR ()\\\\n        SUBC(r2,1,r2)\\\\n        BNE(r2,KHexPr1)\\\\n\\\\n        POP(lp)\\\\n        POP(r2)\\\\n        POP(r1)\\\\n        POP(r0)\\\\n        RTN()\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n/// Procedure to print out a zero-terminated message, packed one     ///\\\\n///    char/byte. Char data follows branch; returns to next 4-byte   ///\\\\n///    aligned location. Saves all regs.                             ///\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\nKWrMsg:\\\\n        PUSH (R0)\\\\n        MOVE(LP, R0)\\\\n        CALL(KMsgAux)\\\\n        MOVE(R0, LP)\\\\n        POP (R0)\\\\n        RTN()\\\\n\\\\n\\\\n// Auxiliary routine for sending a message to the console.\\\\n// On entry, R0 should point to data; on return, R0 holds next\\\\n// longword aligned location after data.\\\\n// Note: Must be called while in supervisor mode.\\\\n\\\\nKMsgAux:\\\\n        PUSH(r1)\\\\n        PUSH(r2)\\\\n        PUSH(r3)\\\\n        PUSH(r4)\\\\n\\\\n        MOVE (R0, R1)\\\\n\\\\nWrWord: LD (R1, 0, R2)          // Fetch a 4-byte word into R2\\\\n        ADDC (R1, 4, R1)        // Increment word pointer\\\\n        CMOVE(4,r3)             // Byte/word counter\\\\n\\\\nWrByte: ANDC(r2, 0x7F, r0)      // Grab next byte -- LOW end first!\\\\n        BEQ(r0, WrEnd)          // Zero byte means end of text.\\\\n        WRCHAR()                // Print it.\\\\n        SRAC(r2,8,r2)           // Shift out this byte\\\\n        SUBC(r3,1,r3)           // Count down... done with this word?\\\\n        BNE(r3,WrByte)          // Nope, continue.\\\\n        BR(WrWord)              // Yup, on to next.\\\\n\\\\nWrEnd:\\\\n        MOVE (R1, R0)\\\\n        POP(r4)\\\\n        POP(r3)\\\\n        POP(r2)\\\\n        POP(r1)\\\\n        RTN()\\\\n\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n/// User-mode code: Process 0\\\\n//////////////////////////////////////////////////////////////////////////////\\\\n\\\\n.segment P0                     // start a new user-mode segment\\\\n. = 0\\\\n        CMOVE(Stack, sp)\\\\n\\\\nStart:\\\\t\\\\n        WrMsg()\\\\n        .text \\\\\\\"Start typing, Bunky.\\\\\\\\n\\\\\\\\n\\\\\\\"\\\\n\\\\t\\\\tCMOVE(0,r9)\\\\t\\\\t\\\\t\\\\t  // Initiate locked state: not acquired\\\\n\\\\nRead:   WrMsg()                   // First a newline character, then\\\\n        .text \\\\\\\"\\\\\\\\n> \\\\\\\"\\\\n\\\\n        CMOVE(Line, r3)         // ...then read a line into buffer...\\\\n\\\\nRdCh:   GetKey()                // read next character,\\\\n\\\\t\\\\tBT(r9,unlocked)\\\\t\\\\t\\\\t// stop flying text on first char typed\\\\n\\\\t\\\\tMOVE(r0,r8)\\\\t\\\\t\\\\t\\\\t// save state\\\\n\\\\t\\\\tCMOVE(1,r0)\\\\t\\\\t\\\\t\\\\t// get console lock\\\\n\\\\t\\\\tWait()\\\\n\\\\t\\\\tCMOVE(1,r9)\\\\t\\\\t\\\\t\\\\t// update unlocked state\\\\t\\\\t\\\\n\\\\t\\\\tMOVE(r8,r0)\\\\t\\\\t\\\\t\\\\t// restore state\\\\nunlocked:\\\\t\\\\t\\\\n        WrCh()                  // echo back to user\\\\n        CALL(UCase)             // Convert it to upper case,\\\\n        ST(r0,0,r3)             // Store it in buffer.\\\\n        ADDC(r3,4,r3)           // Incr pointer to next char...\\\\n\\\\n        CMPEQC(r0,0xA,r1)       // End of line?\\\\n\\\\t\\\\t\\\\n        BT(r1,Xlate)            // yup, translate buffer\\\\n\\\\t\\\\t\\\\n        CMPEQC(r3,LineEnd-4,r1) // are we at end of buffer?\\\\n        BF(r1,RdCh)             // nope, read another char\\\\n        CMOVE(0xA,r0)           // end of buffer, force a newline\\\\n        ST(r0,0,r3)\\\\n        WrCh()                  // and echo it to the user\\\\n\\\\nXlate:\\\\n        CMOVE(Line,r5)          // Buffer pointer in r6\\\\n\\\\n        // skip past initial consonants\\\\nWord:   MOVE(r5,r7)\\\\n        MOVE(r5,r6)             // in case there are multiple spaces!\\\\nCons:   LD(r5,0,r0)             // next character from buffer\\\\n        ADDC(r5,4,r5)\\\\n        CALL(VowelP)            // Is it a vowel?\\\\n        BT(r1,Vowel)            // yup, move on.\\\\n        CMPLEC(r0,' ',r1)       // Is it white space?\\\\n        BT(r1,Space)\\\\n        BR(Cons)                // Back for more.\\\\n\\\\nVowel:  SUBC(r5,4,r6)           // remember where consonant ended\\\\n\\\\nChloop: \\\\n\\\\t\\\\tWrCh()                  // Output initial vowel and rest of chars in word\\\\n        LD(r5,0,r0)\\\\n        ADDC(r5,4,r5)\\\\n        CMPLEC(r0,' ',r1)       // White space?\\\\n        BF(r1,Chloop)\\\\n\\\\nSpace:  MOVE(r0,r3)             // Save whitespace char, then\\\\n        MOVE(r7,r4)             // Output initial consonants\\\\nSpc2:   CMPEQ(r4,r6,r1)         // Any left?\\\\n        BT(r1,Spc1)             // nope...\\\\n        LD(r4,0,r0)             // Fetch next char,\\\\n        ADDC(r4,4,r4)           // (next time, next char)\\\\n        WrCh()                  // and write it out.\\\\n        BR(Spc2)\\\\n\\\\nSpc1:   WrMsg()                 // Add the \\\\\\\"AY\\\\\\\" suffix.\\\\n        .text \\\\\\\"AY\\\\\\\"\\\\n        MOVE(r3,r0)             // Then the saved whitespace char.\\\\n        WrCh()\\\\n        CMPEQC(r3,0xA,r0)       // Was it end-of-line?\\\\n        BF(r0,Word)             // nope.\\\\n\\\\t\\\\t\\\\n\\\\t\\\\tCMOVE(1,r0)\\\\t\\\\t\\\\t\\\\t// release console lock\\\\n\\\\t\\\\tCMOVE(0,r9)\\\\t\\\\t\\\\t\\\\t// reset locked state\\\\t\\\\t\\\\n\\\\t\\\\tSignal()\\\\n\\\\n        BR(Read)                // ... and start another word.\\\\n\\\\n// Auxilliary routine: convert char in r0 to upper case:\\\\nUCase:  PUSH(r1)\\\\n        CMPLEC(r0,'z',r1)       // Is it beyond 'z'?\\\\n        BF(r1,UCase1)           // yup, don't convert.\\\\n        CMPLTC(r0,'a',r1)       // Is it before 'a'?\\\\n        BT(r1, UCase1)          // yup, no change.\\\\n        SUBC(r0,'a'-'A',r0)     // Map to UPPER CASE...\\\\nUCase1: POP(r1)\\\\n        RTN()\\\\n\\\\n// Auxilliary routine: Test if r0 is a vowel; boolean into r1.\\\\nVowelP: // Sorta brute force\\\\n        CMPEQC(r0,'A',r1)       BT(r1,Vowel1)\\\\n        CMPEQC(r0,'E',r1)       BT(r1,Vowel1)\\\\n        CMPEQC(r0,'I',r1)       BT(r1,Vowel1)\\\\n        CMPEQC(r0,'O',r1)       BT(r1,Vowel1)\\\\n        CMPEQC(r0,'U',r1)       BT(r1,Vowel1)\\\\n        CMPEQC(r0,'Y',r1)       BT(r1,Vowel1)\\\\n        CMOVE(0,r1)             // Return FALSE.\\\\n\\\\t\\\\t\\\\nVowel1: \\\\n\\\\t\\\\tRTN()\\\\n\\\\nLine:   STORAGE(100)            // Line buffer.\\\\nLineEnd:\\\\n\\\\nStack:  STORAGE(256)            // storage for stack\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n/// USER MODE Process 1: Simply counts quanta.\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\n.segment P1\\\\n. = 0\\\\n        CMOVE(Stack,SP)\\\\n\\\\nStart:\\\\n        LD(Count, r0)          // Another quantum, incr count3.\\\\n        ADDC(r0,1,r0)\\\\n        ST(r0,Count)\\\\n\\\\n        ANDC(r0,0xFF,r1)      // print out message once every 4K iterations\\\\n        BNE(r1, Done)\\\\n        \\\\n\\\\t\\\\tCMOVE(1, r0)\\\\t\\\\t\\\\t//Get console lock\\\\n\\\\t\\\\tWait()\\\\n\\\\t\\\\t\\\\tCMOVE(0xA,r0)          // message is count, followed by prompt\\\\n\\\\t\\\\t\\\\tWrCh()                 // initial new line\\\\n\\\\t\\\\t\\\\tLD(Count, r0)\\\\n\\\\t\\\\t\\\\tHexPrt()               // print count\\\\n\\\\t\\\\t\\\\tWrMsg()                //  the remainder.\\\\n\\\\t\\\\t\\\\t.text \\\\\\\"> \\\\\\\"\\\\n\\\\t\\\\tCMOVE(1, r0)\\\\t\\\\t\\\\t//release console lock\\\\n\\\\t\\\\tSignal()\\\\n\\\\t\\\\t\\\\t\\\\t\\\\nDone:   Yield()                // Invoke scheduler\\\\n        BR(Start)              // return here after others run.\\\\n\\\\nCount: LONG(0)\\\\n\\\\nStack: STORAGE(256)\\\\n\\\\n////////////////////////////////////////////////////////////////////////\\\\n/// USER MODE Process 2: Print Mouse Clicks.\\\\n////////////////////////////////////////////////////////////////////////\\\\n\\\\n.segment P2\\\\n. = 0\\\\n        CMOVE(Stack,SP)\\\\n\\\\nStart:\\\\n\\\\t\\\\tGetMouse()\\\\t\\\\t\\\\t\\\\t\\\\t//Blocking SVC to get mouse state\\\\n\\\\t\\\\tMOVE(r0, r1)\\\\t\\\\t\\\\t\\\\t//store coords in tmp register\\\\n\\\\t\\\\t\\\\n\\\\t\\\\tCMOVE(1, r0)\\\\t\\\\t\\\\t\\\\t//acquire lock to write to terminal\\\\n\\\\t\\\\tWait()\\\\n\\\\t\\\\t\\\\tWrMsg()\\\\n\\\\t\\\\t\\\\t.text \\\\\\\"\\\\\\\\n Mouse clicked X:\\\\\\\"\\\\n\\\\t\\\\t\\\\tMOVE(r1,r2)\\\\t\\\\t\\\\t\\\\t\\\\t//copy coords\\\\n\\\\t\\\\t\\\\textract_field(r2,15,0,r2)\\\\t//extract Y coord\\\\n\\\\t\\\\t\\\\tSHRC(r1, 16, r0)\\\\t\\\\t\\\\t//isolate X coord\\\\n\\\\t\\\\t\\\\tHexPrt()\\\\t\\\\t\\\\t\\\\t//print X\\\\n\\\\t\\\\t\\\\tWrMsg()\\\\n\\\\t\\\\t\\\\t.text \\\\\\\", Y:\\\\\\\"\\\\n\\\\t\\\\t\\\\tADDC(r2,0,r0)\\\\t\\\\t\\\\t\\\\t//move Y coord into r0\\\\t\\\\t\\\\t\\\\t\\\\n\\\\t\\\\t\\\\tHexPrt()\\\\t\\\\t\\\\t\\\\t//print Y\\\\n\\\\t\\\\tCMOVE(1,r0)\\\\n\\\\t\\\\tSignal()\\\\n\\\\n        BR(Start)              // return here after others run.\\\\n\\\\nStack: STORAGE(256)\\\"}}\",\"check\":\"right\"}}","/ComputationStructures/":"{}","/ComputationStructures/videos/performance/lecture.html":"{}","/ComputationStructures/notes/performance/notes.html":"{}","/ComputationStructures/lectures/sequential/sequential.html":"{}"}